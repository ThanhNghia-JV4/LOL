{
	"id": "d24f12d2bde36b9a7519d2f9057fc088",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"LmPool Ver3.0/Libraries/PriceMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./FixedPoint96.sol\";\nimport \"./TickMath.sol\";\nimport \"./sqrtMath.sol\";\n\nlibrary PriceMath {\n    function sqrtPriceX96ToPrice(uint160 sqrtPriceX96)\n        public\n        pure\n        returns (uint256)\n    {\n        uint160 price = uint160((sqrtPriceX96 / FixedPoint96.Q96)**2);\n        uint256 priceConverted = uint256(price);\n\n        return priceConverted;\n    }\n\n    function priceToSqrtPriceX96(int256 price) public pure returns (uint160) {\n        uint256 sqrtPriceX96 = uint256(Math.sqrt(uint256(price))) *\n            FixedPoint96.Q96;\n        uint160 sqrtPriceX96Converted = uint160(sqrtPriceX96);\n\n        return sqrtPriceX96Converted;\n    }\n\n    function sqrtPriceX96ToTick(uint160 price) public pure returns (int24) {\n        return TickMath.getTickAtSqrtRatio(price);\n    }\n\n    function tickToSqrtPriceX96(int24 tick) public pure returns (uint160) {\n        return TickMath.getSqrtRatioAtTick(tick);\n    }\n\n    function sqrtPrice(uint256 price) public pure returns (uint256) {\n        return Math.sqrt(price);\n    }\n}\n"
			},
			"LmPool Ver3.0/Libraries/sqrtMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nlibrary Math {\r\n    function sqrt(uint y) internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n        // else z = 0 (default value)\r\n    }\r\n}"
			},
			"LmPool Ver3.0/Libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.8.0;\r\n\r\n/// @title Math library for computing sqrt prices from ticks and vice versa\r\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\r\n/// prices between 2**-128 and 2**128\r\nlibrary TickMath {\r\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\r\n    int24 internal constant MIN_TICK = -887272;\r\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\r\n    int24 internal constant MAX_TICK = -MIN_TICK;\r\n\r\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\r\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\r\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\r\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\r\n\r\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\r\n    /// @dev Throws if |tick| > max tick\r\n    /// @param tick The input tick for the above formula\r\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\r\n    /// at the given tick\r\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\r\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\r\n        require(absTick <= uint256(887272), 'T');\r\n\r\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\r\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\r\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\r\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\r\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\r\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\r\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\r\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\r\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\r\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\r\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\r\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\r\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\r\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\r\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\r\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\r\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\r\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\r\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\r\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\r\n\r\n        if (tick > 0) ratio = type(uint256).max / ratio;\r\n\r\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\r\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\r\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\r\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\r\n    }\r\n\r\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\r\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\r\n    /// ever return.\r\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\r\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\r\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\r\n        // second inequality must be < because the price can never reach the price at the max tick\r\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\r\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\r\n\r\n        uint256 r = ratio;\r\n        uint256 msb = 0;\r\n\r\n        assembly {\r\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(5, gt(r, 0xFFFFFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(4, gt(r, 0xFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(3, gt(r, 0xFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(2, gt(r, 0xF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(1, gt(r, 0x3))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := gt(r, 0x1)\r\n            msb := or(msb, f)\r\n        }\r\n\r\n        if (msb >= 128) r = ratio >> (msb - 127);\r\n        else r = ratio << (127 - msb);\r\n\r\n        int256 log_2 = (int256(msb) - 128) << 64;\r\n\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(63, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(62, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(61, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(60, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(59, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(58, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(57, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(56, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(55, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(54, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(53, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(52, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(51, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(50, f))\r\n        }\r\n\r\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\r\n\r\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\r\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\r\n\r\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\r\n    }\r\n}"
			},
			"LmPool Ver3.0/Libraries/FixedPoint96.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.4.0;\r\n\r\n/// @title FixedPoint96\r\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\r\n/// @dev Used in SqrtPriceMath.sol\r\nlibrary FixedPoint96 {\r\n    uint8 internal constant RESOLUTION = 96;\r\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"LmPool Ver3.0/Libraries/FixedPoint96.sol": {
				"FixedPoint96": {
					"abi": [],
					"devdoc": {
						"details": "Used in SqrtPriceMath.sol",
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint96",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LmPool Ver3.0/Libraries/FixedPoint96.sol\":251:388  library FixedPoint96 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"LmPool Ver3.0/Libraries/FixedPoint96.sol\":251:388  library FixedPoint96 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220583b869e497fa0db3968ab3c660961554a53895bee2908b99e6e4383a9179a0464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220583b869e497fa0db3968ab3c660961554a53895bee2908b99e6e4383a9179a0464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC EXTCODESIZE DUP7 SWAP15 0x49 PUSH32 0xA0DB3968AB3C660961554A53895BEE2908B99E6E4383A9179A0464736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "251:137:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220583b869e497fa0db3968ab3c660961554a53895bee2908b99e6e4383a9179a0464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC EXTCODESIZE DUP7 SWAP15 0x49 PUSH32 0xA0DB3968AB3C660961554A53895BEE2908B99E6E4383A9179A0464736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "251:137:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 388,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 388,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220583b869e497fa0db3968ab3c660961554a53895bee2908b99e6e4383a9179a0464736f6c63430008120033",
									".code": [
										{
											"begin": 251,
											"end": 388,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 388,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 388,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"LmPool Ver3.0/Libraries/FixedPoint96.sol",
								"LmPool Ver3.0/Libraries/PriceMath.sol",
								"LmPool Ver3.0/Libraries/TickMath.sol",
								"LmPool Ver3.0/Libraries/sqrtMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"LmPool Ver3.0/Libraries/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LmPool Ver3.0/Libraries/FixedPoint96.sol\":{\"keccak256\":\"0xb677c7af76c11c1704a190cf481c7d3a2af14a4b4db7547d0f03dff690ee4e1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e8bad520b080ec871ff19a4a5e3c3a49f3e3a33246053a19fbad50c112232f19\",\"dweb:/ipfs/QmZ7G5wybxuewsi5RCRYTWXmDg76X7agHGrPWEPLohr4vm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"LmPool Ver3.0/Libraries/PriceMath.sol": {
				"PriceMath": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "price",
									"type": "int256"
								}
							],
							"name": "priceToSqrtPriceX96",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "",
									"type": "uint160"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "sqrtPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "sqrtPriceX96ToPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "price",
									"type": "uint160"
								}
							],
							"name": "sqrtPriceX96ToTick",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "tickToSqrtPriceX96",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "",
									"type": "uint160"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":137:1095  library PriceMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":137:1095  library PriceMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a817037\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x9400ff9a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xaa52cba7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb35e24d2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb3e30051\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":721:850  function sqrtPriceX96ToTick(uint160 price) public pure returns (int24) {... */\n    tag_2:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":989:1093  function sqrtPrice(uint256 price) public pure returns (uint256) {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":161:429  function sqrtPriceX96ToPrice(uint160 sqrtPriceX96)... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":856:983  function tickToSqrtPriceX96(int24 tick) public pure returns (uint160) {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":435:715  function priceToSqrtPriceX96(int256 price) public pure returns (uint160) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":721:850  function sqrtPriceX96ToTick(uint160 price) public pure returns (int24) {... */\n    tag_10:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":785:790  int24 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":809:843  TickMath.getTickAtSqrtRatio(price) */\n      tag_35\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":837:842  price */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":809:836  TickMath.getTickAtSqrtRatio */\n      tag_36\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":809:843  TickMath.getTickAtSqrtRatio(price) */\n      jump\t// in\n    tag_35:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":802:843  return TickMath.getTickAtSqrtRatio(price) */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":721:850  function sqrtPriceX96ToTick(uint160 price) public pure returns (int24) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":989:1093  function sqrtPrice(uint256 price) public pure returns (uint256) {... */\n    tag_16:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":1044:1051  uint256 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":1070:1086  Math.sqrt(price) */\n      tag_38\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":1080:1085  price */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":1070:1079  Math.sqrt */\n      tag_39\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":1070:1086  Math.sqrt(price) */\n      jump\t// in\n    tag_38:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":1063:1086  return Math.sqrt(price) */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":989:1093  function sqrtPrice(uint256 price) public pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":161:429  function sqrtPriceX96ToPrice(uint160 sqrtPriceX96)... */\n    tag_21:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":257:264  uint256 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":280:293  uint160 price */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":339:340  2 */\n      0x02\n        /* \"LmPool Ver3.0/Libraries/FixedPoint96.sol\":357:384  0x1000000000000000000000000 */\n      0x01000000000000000000000000\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":305:317  sqrtPriceX96 */\n      dup5\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":305:336  sqrtPriceX96 / FixedPoint96.Q96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":304:340  (sqrtPriceX96 / FixedPoint96.Q96)**2 */\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":280:341  uint160 price = uint160((sqrtPriceX96 / FixedPoint96.Q96)**2) */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":351:373  uint256 priceConverted */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":384:389  price */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":376:390  uint256(price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":351:390  uint256 priceConverted = uint256(price) */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":408:422  priceConverted */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":401:422  return priceConverted */\n      swap3\n      pop\n      pop\n      pop\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":161:429  function sqrtPriceX96ToPrice(uint160 sqrtPriceX96)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":856:983  function tickToSqrtPriceX96(int24 tick) public pure returns (uint160) {... */\n    tag_26:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":917:924  uint160 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":943:976  TickMath.getSqrtRatioAtTick(tick) */\n      tag_46\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":971:975  tick */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":943:970  TickMath.getSqrtRatioAtTick */\n      tag_47\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":943:976  TickMath.getSqrtRatioAtTick(tick) */\n      jump\t// in\n    tag_46:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":936:976  return TickMath.getSqrtRatioAtTick(tick) */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":856:983  function tickToSqrtPriceX96(int24 tick) public pure returns (uint160) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":435:715  function priceToSqrtPriceX96(int256 price) public pure returns (uint160) {... */\n    tag_32:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":499:506  uint160 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":518:538  uint256 sqrtPriceX96 */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/FixedPoint96.sol\":357:384  0x1000000000000000000000000 */\n      0x01000000000000000000000000\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":549:574  Math.sqrt(uint256(price)) */\n      tag_49\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":567:572  price */\n      dup5\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":549:558  Math.sqrt */\n      tag_39\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":549:574  Math.sqrt(uint256(price)) */\n      jump\t// in\n    tag_49:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":541:606  uint256(Math.sqrt(uint256(price))) *... */\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":518:606  uint256 sqrtPriceX96 = uint256(Math.sqrt(uint256(price))) *... */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":616:645  uint160 sqrtPriceX96Converted */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":656:668  sqrtPriceX96 */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":616:669  uint160 sqrtPriceX96Converted = uint160(sqrtPriceX96) */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":687:708  sqrtPriceX96Converted */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":680:708  return sqrtPriceX96Converted */\n      swap3\n      pop\n      pop\n      pop\n        /* \"LmPool Ver3.0/Libraries/PriceMath.sol\":435:715  function priceToSqrtPriceX96(int256 price) public pure returns (uint160) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4412:8836  function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {... */\n    tag_36:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4485:4495  int24 tick */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":830:840  4295128739 */\n      0x01000276a3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4616:4646  sqrtPriceX96 >= MIN_SQRT_RATIO */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4616:4628  sqrtPriceX96 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4616:4646  sqrtPriceX96 >= MIN_SQRT_RATIO */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4616:4679  sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO */\n      dup1\n      iszero\n      tag_53\n      jumpi\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1012:1061  1461446703485210103287273052203988822378723970342 */\n      0xfffd8963efd1fc6a506488495d951d5263988d26\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4650:4679  sqrtPriceX96 < MAX_SQRT_RATIO */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4650:4662  sqrtPriceX96 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4650:4679  sqrtPriceX96 < MAX_SQRT_RATIO */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4616:4679  sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO */\n    tag_53:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4608:4685  require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R') */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4696:4709  uint256 ratio */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4737:4739  32 */\n      0x20\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4720:4732  sqrtPriceX96 */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4712:4733  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4712:4739  uint256(sqrtPriceX96) << 32 */\n      swap1\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4696:4739  uint256 ratio = uint256(sqrtPriceX96) << 32 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4752:4761  uint256 r */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4764:4769  ratio */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4752:4769  uint256 r = ratio */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4780:4791  uint256 msb */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4854:4888  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF */\n      0xffffffffffffffffffffffffffffffff\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4851:4852  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4848:4889  gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) */\n      gt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4845:4846  7 */\n      0x07\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4841:4890  shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4919:4920  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4914:4917  msb */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4911:4921  or(msb, f) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4904:4921  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4947:4948  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4944:4945  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4940:4949  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4935:4949  r := shr(f, r) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4817:4960  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5016:5034  0xFFFFFFFFFFFFFFFF */\n      0xffffffffffffffff\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5013:5014  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5010:5035  gt(r, 0xFFFFFFFFFFFFFFFF) */\n      gt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5007:5008  6 */\n      0x06\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5003:5036  shl(6, gt(r, 0xFFFFFFFFFFFFFFFF)) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5065:5066  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5060:5063  msb */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5057:5067  or(msb, f) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5050:5067  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5093:5094  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5090:5091  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5086:5095  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5081:5095  r := shr(f, r) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4979:5106  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5162:5172  0xFFFFFFFF */\n      0xffffffff\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5159:5160  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5156:5173  gt(r, 0xFFFFFFFF) */\n      gt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5153:5154  5 */\n      0x05\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5149:5174  shl(5, gt(r, 0xFFFFFFFF)) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5203:5204  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5198:5201  msb */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5195:5205  or(msb, f) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5188:5205  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5231:5232  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5228:5229  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5224:5233  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5219:5233  r := shr(f, r) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5125:5244  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5300:5306  0xFFFF */\n      0xffff\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5297:5298  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5294:5307  gt(r, 0xFFFF) */\n      gt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5291:5292  4 */\n      0x04\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5287:5308  shl(4, gt(r, 0xFFFF)) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5337:5338  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5332:5335  msb */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5329:5339  or(msb, f) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5322:5339  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5365:5366  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5362:5363  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5358:5367  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5353:5367  r := shr(f, r) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5263:5378  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5434:5438  0xFF */\n      0xff\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5431:5432  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5428:5439  gt(r, 0xFF) */\n      gt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5425:5426  3 */\n      0x03\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5421:5440  shl(3, gt(r, 0xFF)) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5469:5470  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5464:5467  msb */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5461:5471  or(msb, f) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5454:5471  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5497:5498  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5494:5495  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5490:5499  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5485:5499  r := shr(f, r) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5397:5510  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5566:5569  0xF */\n      0x0f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5563:5564  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5560:5570  gt(r, 0xF) */\n      gt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5557:5558  2 */\n      0x02\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5553:5571  shl(2, gt(r, 0xF)) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5600:5601  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5595:5598  msb */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5592:5602  or(msb, f) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5585:5602  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5628:5629  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5625:5626  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5621:5630  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5616:5630  r := shr(f, r) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5529:5641  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5697:5700  0x3 */\n      0x03\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5694:5695  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5691:5701  gt(r, 0x3) */\n      gt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5688:5689  1 */\n      0x01\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5684:5702  shl(1, gt(r, 0x3)) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5731:5732  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5726:5729  msb */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5723:5733  or(msb, f) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5716:5733  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5759:5760  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5756:5757  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5752:5761  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5747:5761  r := shr(f, r) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5660:5772  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5821:5824  0x1 */\n      0x01\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5818:5819  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5815:5825  gt(r, 0x1) */\n      gt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5854:5855  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5849:5852  msb */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5846:5856  or(msb, f) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5839:5856  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5791:5867  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5890:5893  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5883:5886  msb */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5883:5893  msb >= 128 */\n      lt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5879:5959  if (msb >= 128) r = ratio >> (msb - 127);... */\n      tag_57\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5915:5918  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5909:5912  msb */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5909:5918  msb - 127 */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5899:5904  ratio */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5899:5919  ratio >> (msb - 127) */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5895:5919  r = ratio >> (msb - 127) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5879:5959  if (msb >= 128) r = ratio >> (msb - 127);... */\n      jump(tag_60)\n    tag_57:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5955:5958  msb */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5949:5952  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5949:5958  127 - msb */\n      tag_61\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_61:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5939:5944  ratio */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5939:5959  ratio << (127 - msb) */\n      swap1\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5935:5959  r = ratio << (127 - msb) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5879:5959  if (msb >= 128) r = ratio >> (msb - 127);... */\n    tag_60:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5972:5984  int256 log_2 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6010:6012  64 */\n      0x40\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6002:6005  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5995:5998  msb */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5988:6005  int256(msb) - 128 */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5987:6012  (int256(msb) - 128) << 64 */\n      swap1\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":5972:6012  int256 log_2 = (int256(msb) - 128) << 64 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6070:6071  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6067:6068  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6063:6072  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6058:6061  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6054:6073  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6049:6073  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6105:6106  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6100:6103  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6096:6107  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6148:6149  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6144:6146  63 */\n      0x3f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6140:6150  shl(63, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6133:6138  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6130:6151  or(log_2, shl(63, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6121:6151  log_2 := or(log_2, shl(63, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6177:6178  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6174:6175  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6170:6179  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6165:6179  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6034:6190  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6245:6246  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6242:6243  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6238:6247  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6233:6236  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6229:6248  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6224:6248  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6280:6281  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6275:6278  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6271:6282  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6323:6324  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6319:6321  62 */\n      0x3e\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6315:6325  shl(62, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6308:6313  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6305:6326  or(log_2, shl(62, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6296:6326  log_2 := or(log_2, shl(62, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6352:6353  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6349:6350  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6345:6354  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6340:6354  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6209:6365  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6420:6421  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6417:6418  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6413:6422  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6408:6411  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6404:6423  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6399:6423  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6455:6456  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6450:6453  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6446:6457  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6498:6499  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6494:6496  61 */\n      0x3d\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6490:6500  shl(61, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6483:6488  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6480:6501  or(log_2, shl(61, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6471:6501  log_2 := or(log_2, shl(61, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6527:6528  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6524:6525  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6520:6529  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6515:6529  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6384:6540  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6595:6596  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6592:6593  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6588:6597  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6583:6586  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6579:6598  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6574:6598  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6630:6631  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6625:6628  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6621:6632  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6673:6674  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6669:6671  60 */\n      0x3c\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6665:6675  shl(60, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6658:6663  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6655:6676  or(log_2, shl(60, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6646:6676  log_2 := or(log_2, shl(60, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6702:6703  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6699:6700  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6695:6704  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6690:6704  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6559:6715  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6770:6771  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6767:6768  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6763:6772  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6758:6761  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6754:6773  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6749:6773  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6805:6806  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6800:6803  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6796:6807  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6848:6849  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6844:6846  59 */\n      0x3b\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6840:6850  shl(59, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6833:6838  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6830:6851  or(log_2, shl(59, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6821:6851  log_2 := or(log_2, shl(59, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6877:6878  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6874:6875  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6870:6879  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6865:6879  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6734:6890  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6945:6946  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6942:6943  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6938:6947  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6933:6936  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6929:6948  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6924:6948  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6980:6981  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6975:6978  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6971:6982  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7023:7024  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7019:7021  58 */\n      0x3a\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7015:7025  shl(58, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7008:7013  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7005:7026  or(log_2, shl(58, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6996:7026  log_2 := or(log_2, shl(58, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7052:7053  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7049:7050  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7045:7054  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7040:7054  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":6909:7065  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7120:7121  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7117:7118  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7113:7122  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7108:7111  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7104:7123  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7099:7123  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7155:7156  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7150:7153  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7146:7157  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7198:7199  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7194:7196  57 */\n      0x39\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7190:7200  shl(57, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7183:7188  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7180:7201  or(log_2, shl(57, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7171:7201  log_2 := or(log_2, shl(57, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7227:7228  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7224:7225  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7220:7229  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7215:7229  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7084:7240  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7295:7296  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7292:7293  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7288:7297  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7283:7286  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7279:7298  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7274:7298  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7330:7331  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7325:7328  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7321:7332  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7373:7374  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7369:7371  56 */\n      0x38\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7365:7375  shl(56, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7358:7363  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7355:7376  or(log_2, shl(56, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7346:7376  log_2 := or(log_2, shl(56, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7402:7403  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7399:7400  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7395:7404  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7390:7404  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7259:7415  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7470:7471  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7467:7468  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7463:7472  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7458:7461  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7454:7473  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7449:7473  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7505:7506  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7500:7503  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7496:7507  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7548:7549  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7544:7546  55 */\n      0x37\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7540:7550  shl(55, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7533:7538  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7530:7551  or(log_2, shl(55, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7521:7551  log_2 := or(log_2, shl(55, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7577:7578  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7574:7575  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7570:7579  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7565:7579  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7434:7590  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7645:7646  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7642:7643  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7638:7647  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7633:7636  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7629:7648  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7624:7648  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7680:7681  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7675:7678  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7671:7682  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7723:7724  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7719:7721  54 */\n      0x36\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7715:7725  shl(54, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7708:7713  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7705:7726  or(log_2, shl(54, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7696:7726  log_2 := or(log_2, shl(54, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7752:7753  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7749:7750  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7745:7754  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7740:7754  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7609:7765  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7820:7821  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7817:7818  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7813:7822  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7808:7811  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7804:7823  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7799:7823  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7855:7856  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7850:7853  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7846:7857  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7898:7899  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7894:7896  53 */\n      0x35\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7890:7900  shl(53, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7883:7888  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7880:7901  or(log_2, shl(53, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7871:7901  log_2 := or(log_2, shl(53, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7927:7928  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7924:7925  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7920:7929  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7915:7929  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7784:7940  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7995:7996  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7992:7993  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7988:7997  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7983:7986  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7979:7998  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7974:7998  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8030:8031  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8025:8028  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8021:8032  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8073:8074  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8069:8071  52 */\n      0x34\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8065:8075  shl(52, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8058:8063  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8055:8076  or(log_2, shl(52, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8046:8076  log_2 := or(log_2, shl(52, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8102:8103  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8099:8100  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8095:8104  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8090:8104  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":7959:8115  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8170:8171  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8167:8168  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8163:8172  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8158:8161  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8154:8173  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8149:8173  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8205:8206  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8200:8203  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8196:8207  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8248:8249  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8244:8246  51 */\n      0x33\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8240:8250  shl(51, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8233:8238  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8230:8251  or(log_2, shl(51, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8221:8251  log_2 := or(log_2, shl(51, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8277:8278  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8274:8275  f */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8270:8279  shr(f, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8265:8279  r := shr(f, r) */\n      swap4\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8134:8290  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8345:8346  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8342:8343  r */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8338:8347  mul(r, r) */\n      mul\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8333:8336  127 */\n      0x7f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8329:8348  shr(127, mul(r, r)) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8324:8348  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8380:8381  r */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8375:8378  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8371:8382  shr(128, r) */\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8423:8424  f */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8419:8421  50 */\n      0x32\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8415:8425  shl(50, f) */\n      shl\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8408:8413  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8405:8426  or(log_2, shl(50, f)) */\n      or\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8396:8426  log_2 := or(log_2, shl(50, f)) */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8309:8437  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8449:8469  int256 log_sqrt10001 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8480:8504  255738958999603826347141 */\n      0x3627a301d71055774c85\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8472:8477  log_2 */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8472:8504  log_2 * 255738958999603826347141 */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8449:8504  int256 log_sqrt10001 = log_2 * 255738958999603826347141 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8535:8548  int24 tickLow */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8616:8619  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8574:8611  3402992956809132418596140100660247210 */\n      0x028f6481ab7f045a5af012a19d003aaa\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8558:8571  log_sqrt10001 */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8558:8611  log_sqrt10001 - 3402992956809132418596140100660247210 */\n      tag_66\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_66:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8557:8619  (log_sqrt10001 - 3402992956809132418596140100660247210) >> 128 */\n      swap1\n      sar\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8535:8620  int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128) */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8631:8643  int24 tickHi */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8713:8716  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8669:8708  291339464771989622907027621153398088495 */\n      0xdb2df09e81959a81455e260799a0632f\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8653:8666  log_sqrt10001 */\n      dup5\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8653:8708  log_sqrt10001 + 291339464771989622907027621153398088495 */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8652:8716  (log_sqrt10001 + 291339464771989622907027621153398088495) >> 128 */\n      swap1\n      sar\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8631:8717  int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128) */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8748:8754  tickHi */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8737:8754  tickLow == tickHi */\n      0x02\n      signextend\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8737:8744  tickLow */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8737:8754  tickLow == tickHi */\n      0x02\n      signextend\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8737:8828  tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      tag_69\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8797:8809  sqrtPriceX96 */\n      dup9\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8767:8809  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8767:8793  getSqrtRatioAtTick(tickHi) */\n      tag_70\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8786:8792  tickHi */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8767:8785  getSqrtRatioAtTick */\n      tag_47\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8767:8793  getSqrtRatioAtTick(tickHi) */\n      jump\t// in\n    tag_70:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8767:8809  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8767:8828  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      tag_71\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8821:8828  tickLow */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8767:8828  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      jump(tag_72)\n    tag_71:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8812:8818  tickHi */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8767:8828  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n    tag_72:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8737:8828  tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      jump(tag_73)\n    tag_69:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8757:8764  tickLow */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8737:8828  tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n    tag_73:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":8730:8828  tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      swap8\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4497:8836  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":4412:8836  function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":81:423  function sqrt(uint y) internal pure returns (uint z) {... */\n    tag_39:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":126:132  uint z */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":153:154  3 */\n      0x03\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":149:150  y */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":149:154  y > 3 */\n      gt\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":145:377  if (y > 3) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":175:176  y */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":171:176  z = y */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":191:197  uint x */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":208:209  1 */\n      0x01\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":204:205  2 */\n      0x02\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":200:201  y */\n      dup5\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":200:205  y / 2 */\n      tag_76\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_76:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":200:209  y / 2 + 1 */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":191:209  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":224:316  while (x < z) {... */\n    tag_79:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":235:236  z */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":231:232  x */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":231:236  x < z */\n      lt\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":224:316  while (x < z) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":261:262  x */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":257:262  z = x */\n      swap2\n      pop\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":299:300  2 */\n      0x02\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":294:295  x */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":290:291  x */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":286:287  y */\n      dup6\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":286:291  y / x */\n      tag_81\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_81:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":286:295  y / x + x */\n      tag_82\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_82:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":285:300  (y / x + x) / 2 */\n      tag_83\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_83:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":281:300  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":224:316  while (x < z) {... */\n      jump(tag_79)\n    tag_80:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":156:327  {... */\n      pop\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":145:377  if (y > 3) {... */\n      jump(tag_84)\n    tag_75:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":342:343  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":337:338  y */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":337:343  y != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":333:377  if (y != 0) {... */\n      tag_85\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":364:365  1 */\n      0x01\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":360:365  z = 1 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":333:377  if (y != 0) {... */\n    tag_85:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":145:377  if (y > 3) {... */\n    tag_84:\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":81:423  function sqrt(uint y) internal pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1377:3986  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_47:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1440:1460  uint160 sqrtPriceX96 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1473:1488  uint256 absTick */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1498:1499  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1491:1495  tick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1491:1499  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1491:1548  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_87\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1542:1546  tick */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1535:1547  int256(tick) */\n      0x02\n      signextend\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1491:1548  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_88)\n    tag_87:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1518:1522  tick */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1511:1523  int256(tick) */\n      0x02\n      signextend\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1510:1523  -int256(tick) */\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1491:1548  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n    tag_88:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1473:1548  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1586:1592  887272 */\n      0x0d89e8\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1567:1574  absTick */\n      dup2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1567:1593  absTick <= uint256(887272) */\n      gt\n      iszero\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1559:1599  require(absTick <= uint256(887272), 'T') */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1612:1625  uint256 ratio */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1645:1646  0 */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1638:1641  0x1 */\n      0x01\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1628:1635  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1628:1641  absTick & 0x1 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1628:1646  absTick & 0x1 != 0 */\n      sub\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1628:1721  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      tag_94\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1686:1721  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1628:1721  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      jump(tag_95)\n    tag_94:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1649:1683  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1628:1721  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n    tag_95:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1612:1721  uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1753:1754  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1746:1749  0x2 */\n      0x02\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1736:1743  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1736:1749  absTick & 0x2 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1736:1754  absTick & 0x2 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1732:1815  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_96\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1812:1815  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1773:1807  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1765:1770  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1765:1807  ratio * 0xfff97272373d413259a46990580e213a */\n      tag_97\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_97:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1764:1815  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1756:1815  ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1732:1815  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_96:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1847:1848  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1840:1843  0x4 */\n      0x04\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1830:1837  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1830:1843  absTick & 0x4 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1830:1848  absTick & 0x4 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1826:1909  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_98\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1906:1909  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1867:1901  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1859:1864  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1859:1901  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      tag_99\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_99:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1858:1909  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1850:1909  ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1826:1909  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_98:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1941:1942  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1934:1937  0x8 */\n      0x08\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1924:1931  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1924:1937  absTick & 0x8 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1924:1942  absTick & 0x8 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1920:2003  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_100\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2000:2003  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1961:1995  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1953:1958  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1953:1995  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      tag_101\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_101:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1952:2003  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1944:2003  ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1920:2003  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_100:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2036:2037  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2028:2032  0x10 */\n      0x10\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2018:2025  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2018:2032  absTick & 0x10 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2018:2037  absTick & 0x10 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2014:2098  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_102\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2095:2098  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2056:2090  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2048:2053  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2048:2090  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      tag_103\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_103:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2047:2098  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2039:2098  ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2014:2098  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_102:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2131:2132  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2123:2127  0x20 */\n      0x20\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2113:2120  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2113:2127  absTick & 0x20 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2113:2132  absTick & 0x20 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2109:2193  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_104\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2190:2193  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2151:2185  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2143:2148  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2143:2185  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      tag_105\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_105:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2142:2193  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2134:2193  ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2109:2193  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_104:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2226:2227  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2218:2222  0x40 */\n      0x40\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2208:2215  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2208:2222  absTick & 0x40 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2208:2227  absTick & 0x40 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2204:2288  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_106\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2285:2288  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2246:2280  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2238:2243  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2238:2280  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      tag_107\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_107:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2237:2288  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2229:2288  ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2204:2288  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_106:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2321:2322  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2313:2317  0x80 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2303:2310  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2303:2317  absTick & 0x80 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2303:2322  absTick & 0x80 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2299:2383  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_108\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2380:2383  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2341:2375  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2333:2338  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2333:2375  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      tag_109\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_109:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2332:2383  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2324:2383  ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2299:2383  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_108:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2417:2418  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2408:2413  0x100 */\n      0x0100\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2398:2405  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2398:2413  absTick & 0x100 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2398:2418  absTick & 0x100 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2394:2479  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_110\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2476:2479  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2437:2471  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2429:2434  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2429:2471  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      tag_111\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_111:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2428:2479  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2420:2479  ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2394:2479  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_110:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2513:2514  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2504:2509  0x200 */\n      0x0200\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2494:2501  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2494:2509  absTick & 0x200 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2494:2514  absTick & 0x200 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2490:2575  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_112\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2572:2575  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2533:2567  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2525:2530  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2525:2567  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      tag_113\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_113:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2524:2575  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2516:2575  ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2490:2575  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_112:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2609:2610  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2600:2605  0x400 */\n      0x0400\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2590:2597  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2590:2605  absTick & 0x400 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2590:2610  absTick & 0x400 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2586:2671  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_114\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2668:2671  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2629:2663  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2621:2626  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2621:2663  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      tag_115\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_115:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2620:2671  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2612:2671  ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2586:2671  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_114:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2705:2706  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2696:2701  0x800 */\n      0x0800\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2686:2693  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2686:2701  absTick & 0x800 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2686:2706  absTick & 0x800 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2682:2767  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_116\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2764:2767  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2725:2759  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2717:2722  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2717:2759  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      tag_117\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_117:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2716:2767  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2708:2767  ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2682:2767  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_116:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2802:2803  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2792:2798  0x1000 */\n      0x1000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2782:2789  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2782:2798  absTick & 0x1000 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2782:2803  absTick & 0x1000 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2778:2864  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_118\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2861:2864  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2822:2856  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2814:2819  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2814:2856  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      tag_119\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_119:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2813:2864  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2805:2864  ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2778:2864  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_118:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2899:2900  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2889:2895  0x2000 */\n      0x2000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2879:2886  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2879:2895  absTick & 0x2000 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2879:2900  absTick & 0x2000 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2875:2961  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_120\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2958:2961  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2919:2953  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2911:2916  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2911:2953  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      tag_121\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_121:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2910:2961  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2902:2961  ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2875:2961  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_120:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2996:2997  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2986:2992  0x4000 */\n      0x4000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2976:2983  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2976:2992  absTick & 0x4000 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2976:2997  absTick & 0x4000 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2972:3058  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_122\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3055:3058  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3016:3050  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3008:3013  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3008:3050  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      tag_123\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_123:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3007:3058  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2999:3058  ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":2972:3058  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_122:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3093:3094  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3083:3089  0x8000 */\n      0x8000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3073:3080  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3073:3089  absTick & 0x8000 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3073:3094  absTick & 0x8000 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3069:3155  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_124\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3152:3155  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3113:3147  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3105:3110  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3105:3147  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      tag_125\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_125:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3104:3155  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3096:3155  ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3069:3155  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_124:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3191:3192  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3180:3187  0x10000 */\n      0x010000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3170:3177  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3170:3187  absTick & 0x10000 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3170:3192  absTick & 0x10000 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3166:3252  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_126\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3249:3252  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3211:3244  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3203:3208  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3203:3244  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      tag_127\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_127:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3202:3252  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3194:3252  ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3166:3252  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_126:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3288:3289  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3277:3284  0x20000 */\n      0x020000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3267:3274  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3267:3284  absTick & 0x20000 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3267:3289  absTick & 0x20000 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3263:3348  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_128\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3345:3348  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3308:3340  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3300:3305  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3300:3340  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      tag_129\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_129:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3299:3348  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3291:3348  ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3263:3348  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_128:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3384:3385  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3373:3380  0x40000 */\n      0x040000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3363:3370  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3363:3380  absTick & 0x40000 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3363:3385  absTick & 0x40000 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3359:3442  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_130\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3439:3442  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3404:3434  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3396:3401  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3396:3434  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      tag_131\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_131:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3395:3442  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3387:3442  ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3359:3442  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_130:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3478:3479  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3467:3474  0x80000 */\n      0x080000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3457:3464  absTick */\n      dup4\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3457:3474  absTick & 0x80000 */\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3457:3479  absTick & 0x80000 != 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3453:3531  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_132\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3528:3531  128 */\n      0x80\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3498:3523  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3490:3495  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3490:3523  ratio * 0x48a170391f7dc42444e8fa2 */\n      tag_133\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_133:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3489:3531  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3481:3531  ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3453:3531  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_132:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3555:3556  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3548:3552  tick */\n      dup5\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3548:3556  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3544:3591  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_134\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3586:3591  ratio */\n      dup1\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3566:3583  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3566:3591  type(uint256).max / ratio */\n      tag_135\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_135:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3558:3591  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3544:3591  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_134:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3967:3968  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3955:3962  1 << 32 */\n      0x0100000000\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3946:3951  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3946:3963  ratio % (1 << 32) */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3946:3968  ratio % (1 << 32) == 0 */\n      eq\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3946:3976  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_138\n      jumpi\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3975:3976  1 */\n      0x01\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3946:3976  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_139)\n    tag_138:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3971:3972  0 */\n      0x00\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3946:3976  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_139:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3929:3977  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      0xff\n      and\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3939:3941  32 */\n      0x20\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3930:3935  ratio */\n      dup3\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3930:3941  ratio >> 32 */\n      swap1\n      shr\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3929:3977  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      tag_140\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_140:\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":3906:3978  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap3\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1462:3986  {... */\n      pop\n      pop\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":1377:3986  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_142:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_144:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:588   */\n    tag_145:\n        /* \"#utility.yul\":539:563   */\n      tag_176\n        /* \"#utility.yul\":557:562   */\n      dup2\n        /* \"#utility.yul\":539:563   */\n      tag_144\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":532:537   */\n      dup2\n        /* \"#utility.yul\":529:564   */\n      eq\n        /* \"#utility.yul\":519:582   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":578:579   */\n      0x00\n        /* \"#utility.yul\":575:576   */\n      dup1\n        /* \"#utility.yul\":568:580   */\n      revert\n        /* \"#utility.yul\":519:582   */\n    tag_177:\n        /* \"#utility.yul\":466:588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":594:733   */\n    tag_146:\n        /* \"#utility.yul\":640:645   */\n      0x00\n        /* \"#utility.yul\":678:684   */\n      dup2\n        /* \"#utility.yul\":665:685   */\n      calldataload\n        /* \"#utility.yul\":656:685   */\n      swap1\n      pop\n        /* \"#utility.yul\":694:727   */\n      tag_179\n        /* \"#utility.yul\":721:726   */\n      dup2\n        /* \"#utility.yul\":694:727   */\n      tag_145\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":594:733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":739:1068   */\n    tag_9:\n        /* \"#utility.yul\":798:804   */\n      0x00\n        /* \"#utility.yul\":847:849   */\n      0x20\n        /* \"#utility.yul\":835:844   */\n      dup3\n        /* \"#utility.yul\":826:833   */\n      dup5\n        /* \"#utility.yul\":822:845   */\n      sub\n        /* \"#utility.yul\":818:850   */\n      slt\n        /* \"#utility.yul\":815:934   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":853:932   */\n      tag_182\n      tag_142\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":815:934   */\n    tag_181:\n        /* \"#utility.yul\":973:974   */\n      0x00\n        /* \"#utility.yul\":998:1051   */\n      tag_183\n        /* \"#utility.yul\":1043:1050   */\n      dup5\n        /* \"#utility.yul\":1034:1040   */\n      dup3\n        /* \"#utility.yul\":1023:1032   */\n      dup6\n        /* \"#utility.yul\":1019:1041   */\n      add\n        /* \"#utility.yul\":998:1051   */\n      tag_146\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":988:1051   */\n      swap2\n      pop\n        /* \"#utility.yul\":944:1061   */\n      pop\n        /* \"#utility.yul\":739:1068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1074:1164   */\n    tag_147:\n        /* \"#utility.yul\":1109:1116   */\n      0x00\n        /* \"#utility.yul\":1152:1157   */\n      dup2\n        /* \"#utility.yul\":1149:1150   */\n      0x02\n        /* \"#utility.yul\":1138:1158   */\n      signextend\n        /* \"#utility.yul\":1127:1158   */\n      swap1\n      pop\n        /* \"#utility.yul\":1074:1164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1290   */\n    tag_148:\n        /* \"#utility.yul\":1261:1283   */\n      tag_186\n        /* \"#utility.yul\":1277:1282   */\n      dup2\n        /* \"#utility.yul\":1261:1283   */\n      tag_147\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1256:1259   */\n      dup3\n        /* \"#utility.yul\":1249:1284   */\n      mstore\n        /* \"#utility.yul\":1170:1290   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1526   */\n    tag_12:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1519   */\n      tag_188\n        /* \"#utility.yul\":1516:1517   */\n      0x00\n        /* \"#utility.yul\":1505:1514   */\n      dup4\n        /* \"#utility.yul\":1501:1518   */\n      add\n        /* \"#utility.yul\":1492:1498   */\n      dup5\n        /* \"#utility.yul\":1444:1519   */\n      tag_148\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1296:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1609   */\n    tag_149:\n        /* \"#utility.yul\":1569:1576   */\n      0x00\n        /* \"#utility.yul\":1598:1603   */\n      dup2\n        /* \"#utility.yul\":1587:1603   */\n      swap1\n      pop\n        /* \"#utility.yul\":1532:1609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1615:1737   */\n    tag_150:\n        /* \"#utility.yul\":1688:1712   */\n      tag_191\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_149\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1681:1686   */\n      dup2\n        /* \"#utility.yul\":1678:1713   */\n      eq\n        /* \"#utility.yul\":1668:1731   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":1727:1728   */\n      0x00\n        /* \"#utility.yul\":1724:1725   */\n      dup1\n        /* \"#utility.yul\":1717:1729   */\n      revert\n        /* \"#utility.yul\":1668:1731   */\n    tag_192:\n        /* \"#utility.yul\":1615:1737   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1743:1882   */\n    tag_151:\n        /* \"#utility.yul\":1789:1794   */\n      0x00\n        /* \"#utility.yul\":1827:1833   */\n      dup2\n        /* \"#utility.yul\":1814:1834   */\n      calldataload\n        /* \"#utility.yul\":1805:1834   */\n      swap1\n      pop\n        /* \"#utility.yul\":1843:1876   */\n      tag_194\n        /* \"#utility.yul\":1870:1875   */\n      dup2\n        /* \"#utility.yul\":1843:1876   */\n      tag_150\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1743:1882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2217   */\n    tag_15:\n        /* \"#utility.yul\":1947:1953   */\n      0x00\n        /* \"#utility.yul\":1996:1998   */\n      0x20\n        /* \"#utility.yul\":1984:1993   */\n      dup3\n        /* \"#utility.yul\":1975:1982   */\n      dup5\n        /* \"#utility.yul\":1971:1994   */\n      sub\n        /* \"#utility.yul\":1967:1999   */\n      slt\n        /* \"#utility.yul\":1964:2083   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2002:2081   */\n      tag_197\n      tag_142\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1964:2083   */\n    tag_196:\n        /* \"#utility.yul\":2122:2123   */\n      0x00\n        /* \"#utility.yul\":2147:2200   */\n      tag_198\n        /* \"#utility.yul\":2192:2199   */\n      dup5\n        /* \"#utility.yul\":2183:2189   */\n      dup3\n        /* \"#utility.yul\":2172:2181   */\n      dup6\n        /* \"#utility.yul\":2168:2190   */\n      add\n        /* \"#utility.yul\":2147:2200   */\n      tag_151\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2137:2200   */\n      swap2\n      pop\n        /* \"#utility.yul\":2093:2210   */\n      pop\n        /* \"#utility.yul\":1888:2217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2223:2349   */\n    tag_152:\n        /* \"#utility.yul\":2318:2342   */\n      tag_200\n        /* \"#utility.yul\":2336:2341   */\n      dup2\n        /* \"#utility.yul\":2318:2342   */\n      tag_149\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2313:2316   */\n      dup3\n        /* \"#utility.yul\":2306:2343   */\n      mstore\n        /* \"#utility.yul\":2223:2349   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2355:2593   */\n    tag_18:\n        /* \"#utility.yul\":2456:2460   */\n      0x00\n        /* \"#utility.yul\":2494:2496   */\n      0x20\n        /* \"#utility.yul\":2483:2492   */\n      dup3\n        /* \"#utility.yul\":2479:2497   */\n      add\n        /* \"#utility.yul\":2471:2497   */\n      swap1\n      pop\n        /* \"#utility.yul\":2507:2586   */\n      tag_202\n        /* \"#utility.yul\":2583:2584   */\n      0x00\n        /* \"#utility.yul\":2572:2581   */\n      dup4\n        /* \"#utility.yul\":2568:2585   */\n      add\n        /* \"#utility.yul\":2559:2565   */\n      dup5\n        /* \"#utility.yul\":2507:2586   */\n      tag_152\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2355:2593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2599:2717   */\n    tag_153:\n        /* \"#utility.yul\":2670:2692   */\n      tag_204\n        /* \"#utility.yul\":2686:2691   */\n      dup2\n        /* \"#utility.yul\":2670:2692   */\n      tag_147\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2663:2668   */\n      dup2\n        /* \"#utility.yul\":2660:2693   */\n      eq\n        /* \"#utility.yul\":2650:2711   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2707:2708   */\n      0x00\n        /* \"#utility.yul\":2704:2705   */\n      dup1\n        /* \"#utility.yul\":2697:2709   */\n      revert\n        /* \"#utility.yul\":2650:2711   */\n    tag_205:\n        /* \"#utility.yul\":2599:2717   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2723:2858   */\n    tag_154:\n        /* \"#utility.yul\":2767:2772   */\n      0x00\n        /* \"#utility.yul\":2805:2811   */\n      dup2\n        /* \"#utility.yul\":2792:2812   */\n      calldataload\n        /* \"#utility.yul\":2783:2812   */\n      swap1\n      pop\n        /* \"#utility.yul\":2821:2852   */\n      tag_207\n        /* \"#utility.yul\":2846:2851   */\n      dup2\n        /* \"#utility.yul\":2821:2852   */\n      tag_153\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2723:2858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2864:3189   */\n    tag_25:\n        /* \"#utility.yul\":2921:2927   */\n      0x00\n        /* \"#utility.yul\":2970:2972   */\n      0x20\n        /* \"#utility.yul\":2958:2967   */\n      dup3\n        /* \"#utility.yul\":2949:2956   */\n      dup5\n        /* \"#utility.yul\":2945:2968   */\n      sub\n        /* \"#utility.yul\":2941:2973   */\n      slt\n        /* \"#utility.yul\":2938:3057   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2976:3055   */\n      tag_210\n      tag_142\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2938:3057   */\n    tag_209:\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3121:3172   */\n      tag_211\n        /* \"#utility.yul\":3164:3171   */\n      dup5\n        /* \"#utility.yul\":3155:3161   */\n      dup3\n        /* \"#utility.yul\":3144:3153   */\n      dup6\n        /* \"#utility.yul\":3140:3162   */\n      add\n        /* \"#utility.yul\":3121:3172   */\n      tag_154\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3111:3172   */\n      swap2\n      pop\n        /* \"#utility.yul\":3067:3182   */\n      pop\n        /* \"#utility.yul\":2864:3189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3195:3321   */\n    tag_155:\n        /* \"#utility.yul\":3290:3314   */\n      tag_213\n        /* \"#utility.yul\":3308:3313   */\n      dup2\n        /* \"#utility.yul\":3290:3314   */\n      tag_144\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3285:3288   */\n      dup3\n        /* \"#utility.yul\":3278:3315   */\n      mstore\n        /* \"#utility.yul\":3195:3321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3327:3565   */\n    tag_28:\n        /* \"#utility.yul\":3428:3432   */\n      0x00\n        /* \"#utility.yul\":3466:3468   */\n      0x20\n        /* \"#utility.yul\":3455:3464   */\n      dup3\n        /* \"#utility.yul\":3451:3469   */\n      add\n        /* \"#utility.yul\":3443:3469   */\n      swap1\n      pop\n        /* \"#utility.yul\":3479:3558   */\n      tag_215\n        /* \"#utility.yul\":3555:3556   */\n      0x00\n        /* \"#utility.yul\":3544:3553   */\n      dup4\n        /* \"#utility.yul\":3540:3557   */\n      add\n        /* \"#utility.yul\":3531:3537   */\n      dup5\n        /* \"#utility.yul\":3479:3558   */\n      tag_155\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3327:3565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3571:3647   */\n    tag_156:\n        /* \"#utility.yul\":3607:3614   */\n      0x00\n        /* \"#utility.yul\":3636:3641   */\n      dup2\n        /* \"#utility.yul\":3625:3641   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3773   */\n    tag_157:\n        /* \"#utility.yul\":3725:3748   */\n      tag_218\n        /* \"#utility.yul\":3742:3747   */\n      dup2\n        /* \"#utility.yul\":3725:3748   */\n      tag_156\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3718:3723   */\n      dup2\n        /* \"#utility.yul\":3715:3749   */\n      eq\n        /* \"#utility.yul\":3705:3767   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":3763:3764   */\n      0x00\n        /* \"#utility.yul\":3760:3761   */\n      dup1\n        /* \"#utility.yul\":3753:3765   */\n      revert\n        /* \"#utility.yul\":3705:3767   */\n    tag_219:\n        /* \"#utility.yul\":3653:3773   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3779:3916   */\n    tag_158:\n        /* \"#utility.yul\":3824:3829   */\n      0x00\n        /* \"#utility.yul\":3862:3868   */\n      dup2\n        /* \"#utility.yul\":3849:3869   */\n      calldataload\n        /* \"#utility.yul\":3840:3869   */\n      swap1\n      pop\n        /* \"#utility.yul\":3878:3910   */\n      tag_221\n        /* \"#utility.yul\":3904:3909   */\n      dup2\n        /* \"#utility.yul\":3878:3910   */\n      tag_157\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3779:3916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3922:4249   */\n    tag_31:\n        /* \"#utility.yul\":3980:3986   */\n      0x00\n        /* \"#utility.yul\":4029:4031   */\n      0x20\n        /* \"#utility.yul\":4017:4026   */\n      dup3\n        /* \"#utility.yul\":4008:4015   */\n      dup5\n        /* \"#utility.yul\":4004:4027   */\n      sub\n        /* \"#utility.yul\":4000:4032   */\n      slt\n        /* \"#utility.yul\":3997:4116   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":4035:4114   */\n      tag_224\n      tag_142\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3997:4116   */\n    tag_223:\n        /* \"#utility.yul\":4155:4156   */\n      0x00\n        /* \"#utility.yul\":4180:4232   */\n      tag_225\n        /* \"#utility.yul\":4224:4231   */\n      dup5\n        /* \"#utility.yul\":4215:4221   */\n      dup3\n        /* \"#utility.yul\":4204:4213   */\n      dup6\n        /* \"#utility.yul\":4200:4222   */\n      add\n        /* \"#utility.yul\":4180:4232   */\n      tag_158\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4170:4232   */\n      swap2\n      pop\n        /* \"#utility.yul\":4126:4242   */\n      pop\n        /* \"#utility.yul\":3922:4249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:4435   */\n    tag_159:\n        /* \"#utility.yul\":4303:4380   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4300:4301   */\n      0x00\n        /* \"#utility.yul\":4293:4381   */\n      mstore\n        /* \"#utility.yul\":4400:4404   */\n      0x12\n        /* \"#utility.yul\":4397:4398   */\n      0x04\n        /* \"#utility.yul\":4390:4405   */\n      mstore\n        /* \"#utility.yul\":4424:4428   */\n      0x24\n        /* \"#utility.yul\":4421:4422   */\n      0x00\n        /* \"#utility.yul\":4414:4429   */\n      revert\n        /* \"#utility.yul\":4441:4621   */\n    tag_160:\n        /* \"#utility.yul\":4489:4566   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4486:4487   */\n      0x00\n        /* \"#utility.yul\":4479:4567   */\n      mstore\n        /* \"#utility.yul\":4586:4590   */\n      0x11\n        /* \"#utility.yul\":4583:4584   */\n      0x04\n        /* \"#utility.yul\":4576:4591   */\n      mstore\n        /* \"#utility.yul\":4610:4614   */\n      0x24\n        /* \"#utility.yul\":4607:4608   */\n      0x00\n        /* \"#utility.yul\":4600:4615   */\n      revert\n        /* \"#utility.yul\":4627:4812   */\n    tag_42:\n        /* \"#utility.yul\":4667:4668   */\n      0x00\n        /* \"#utility.yul\":4684:4704   */\n      tag_229\n        /* \"#utility.yul\":4702:4703   */\n      dup3\n        /* \"#utility.yul\":4684:4704   */\n      tag_149\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4679:4704   */\n      swap2\n      pop\n        /* \"#utility.yul\":4718:4738   */\n      tag_230\n        /* \"#utility.yul\":4736:4737   */\n      dup4\n        /* \"#utility.yul\":4718:4738   */\n      tag_149\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4713:4738   */\n      swap3\n      pop\n        /* \"#utility.yul\":4757:4758   */\n      dup3\n        /* \"#utility.yul\":4747:4782   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":4762:4780   */\n      tag_232\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4747:4782   */\n    tag_231:\n        /* \"#utility.yul\":4804:4805   */\n      dup3\n        /* \"#utility.yul\":4801:4802   */\n      dup3\n        /* \"#utility.yul\":4797:4806   */\n      div\n        /* \"#utility.yul\":4792:4806   */\n      swap1\n      pop\n        /* \"#utility.yul\":4627:4812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4818:4920   */\n    tag_161:\n        /* \"#utility.yul\":4860:4868   */\n      0x00\n        /* \"#utility.yul\":4907:4912   */\n      dup2\n        /* \"#utility.yul\":4904:4905   */\n      0x01\n        /* \"#utility.yul\":4900:4913   */\n      shr\n        /* \"#utility.yul\":4879:4913   */\n      swap1\n      pop\n        /* \"#utility.yul\":4818:4920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4926:5774   */\n    tag_162:\n        /* \"#utility.yul\":4987:4992   */\n      0x00\n        /* \"#utility.yul\":4994:4998   */\n      dup1\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5009:5024   */\n      swap2\n      pop\n        /* \"#utility.yul\":5042:5047   */\n      dup4\n        /* \"#utility.yul\":5033:5047   */\n      swap1\n      pop\n        /* \"#utility.yul\":5056:5768   */\n    tag_235:\n        /* \"#utility.yul\":5077:5078   */\n      0x01\n        /* \"#utility.yul\":5067:5075   */\n      dup6\n        /* \"#utility.yul\":5064:5079   */\n      gt\n        /* \"#utility.yul\":5056:5768   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":5172:5176   */\n      dup1\n        /* \"#utility.yul\":5167:5170   */\n      dup7\n        /* \"#utility.yul\":5163:5177   */\n      div\n        /* \"#utility.yul\":5157:5161   */\n      dup2\n        /* \"#utility.yul\":5154:5178   */\n      gt\n        /* \"#utility.yul\":5151:5201   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":5181:5199   */\n      tag_239\n      tag_160\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5151:5201   */\n    tag_238:\n        /* \"#utility.yul\":5231:5232   */\n      0x01\n        /* \"#utility.yul\":5221:5229   */\n      dup6\n        /* \"#utility.yul\":5217:5233   */\n      and\n        /* \"#utility.yul\":5214:5665   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":5646:5650   */\n      dup1\n        /* \"#utility.yul\":5639:5644   */\n      dup3\n        /* \"#utility.yul\":5635:5651   */\n      mul\n        /* \"#utility.yul\":5626:5651   */\n      swap2\n      pop\n        /* \"#utility.yul\":5214:5665   */\n    tag_240:\n        /* \"#utility.yul\":5696:5700   */\n      dup1\n        /* \"#utility.yul\":5690:5694   */\n      dup2\n        /* \"#utility.yul\":5686:5701   */\n      mul\n        /* \"#utility.yul\":5678:5701   */\n      swap1\n      pop\n        /* \"#utility.yul\":5726:5758   */\n      tag_241\n        /* \"#utility.yul\":5749:5757   */\n      dup6\n        /* \"#utility.yul\":5726:5758   */\n      tag_161\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5714:5758   */\n      swap5\n      pop\n        /* \"#utility.yul\":5056:5768   */\n      jump(tag_235)\n    tag_237:\n        /* \"#utility.yul\":4926:5774   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5780:6853   */\n    tag_163:\n        /* \"#utility.yul\":5834:5839   */\n      0x00\n        /* \"#utility.yul\":6025:6033   */\n      dup3\n        /* \"#utility.yul\":6015:6055   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":6046:6047   */\n      0x01\n        /* \"#utility.yul\":6037:6047   */\n      swap1\n      pop\n        /* \"#utility.yul\":6048:6053   */\n      jump(tag_242)\n        /* \"#utility.yul\":6015:6055   */\n    tag_243:\n        /* \"#utility.yul\":6074:6078   */\n      dup2\n        /* \"#utility.yul\":6064:6100   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6091:6092   */\n      0x00\n        /* \"#utility.yul\":6082:6092   */\n      swap1\n      pop\n        /* \"#utility.yul\":6093:6098   */\n      jump(tag_242)\n        /* \"#utility.yul\":6064:6100   */\n    tag_244:\n        /* \"#utility.yul\":6160:6164   */\n      dup2\n        /* \"#utility.yul\":6208:6209   */\n      0x01\n        /* \"#utility.yul\":6203:6230   */\n      dup2\n      eq\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6244:6245   */\n      0x02\n        /* \"#utility.yul\":6239:6430   */\n      dup2\n      eq\n      tag_247\n      jumpi\n        /* \"#utility.yul\":6153:6430   */\n      jump(tag_245)\n        /* \"#utility.yul\":6203:6230   */\n    tag_246:\n        /* \"#utility.yul\":6221:6222   */\n      0x01\n        /* \"#utility.yul\":6212:6222   */\n      swap2\n      pop\n        /* \"#utility.yul\":6223:6228   */\n      pop\n      jump(tag_242)\n        /* \"#utility.yul\":6239:6430   */\n    tag_247:\n        /* \"#utility.yul\":6284:6287   */\n      0xff\n        /* \"#utility.yul\":6274:6282   */\n      dup5\n        /* \"#utility.yul\":6271:6288   */\n      gt\n        /* \"#utility.yul\":6268:6311   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":6291:6309   */\n      tag_249\n      tag_160\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6268:6311   */\n    tag_248:\n        /* \"#utility.yul\":6340:6348   */\n      dup4\n        /* \"#utility.yul\":6337:6338   */\n      0x02\n        /* \"#utility.yul\":6333:6349   */\n      exp\n        /* \"#utility.yul\":6324:6349   */\n      swap2\n      pop\n        /* \"#utility.yul\":6375:6378   */\n      dup5\n        /* \"#utility.yul\":6368:6373   */\n      dup3\n        /* \"#utility.yul\":6365:6379   */\n      gt\n        /* \"#utility.yul\":6362:6402   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":6382:6400   */\n      tag_251\n      tag_160\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6362:6402   */\n    tag_250:\n        /* \"#utility.yul\":6415:6420   */\n      pop\n      jump(tag_242)\n        /* \"#utility.yul\":6153:6430   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":6539:6541   */\n      0x20\n        /* \"#utility.yul\":6529:6537   */\n      dup4\n        /* \"#utility.yul\":6526:6542   */\n      lt\n        /* \"#utility.yul\":6520:6523   */\n      0x0133\n        /* \"#utility.yul\":6514:6518   */\n      dup4\n        /* \"#utility.yul\":6511:6524   */\n      lt\n        /* \"#utility.yul\":6507:6543   */\n      and\n        /* \"#utility.yul\":6489:6491   */\n      0x4e\n        /* \"#utility.yul\":6479:6487   */\n      dup5\n        /* \"#utility.yul\":6476:6492   */\n      lt\n        /* \"#utility.yul\":6471:6473   */\n      0x0b\n        /* \"#utility.yul\":6465:6469   */\n      dup5\n        /* \"#utility.yul\":6462:6474   */\n      lt\n        /* \"#utility.yul\":6458:6493   */\n      and\n        /* \"#utility.yul\":6442:6553   */\n      or\n        /* \"#utility.yul\":6439:6685   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":6595:6603   */\n      dup3\n        /* \"#utility.yul\":6589:6593   */\n      dup3\n        /* \"#utility.yul\":6585:6604   */\n      exp\n        /* \"#utility.yul\":6576:6604   */\n      swap1\n      pop\n        /* \"#utility.yul\":6630:6633   */\n      dup4\n        /* \"#utility.yul\":6623:6628   */\n      dup2\n        /* \"#utility.yul\":6620:6634   */\n      gt\n        /* \"#utility.yul\":6617:6657   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":6637:6655   */\n      tag_254\n      tag_160\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6617:6657   */\n    tag_253:\n        /* \"#utility.yul\":6670:6675   */\n      jump(tag_242)\n        /* \"#utility.yul\":6439:6685   */\n    tag_252:\n        /* \"#utility.yul\":6710:6752   */\n      tag_255\n        /* \"#utility.yul\":6748:6751   */\n      dup5\n        /* \"#utility.yul\":6738:6746   */\n      dup5\n        /* \"#utility.yul\":6732:6736   */\n      dup5\n        /* \"#utility.yul\":6729:6730   */\n      0x01\n        /* \"#utility.yul\":6710:6752   */\n      tag_162\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6695:6752   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":6784:6788   */\n      dup2\n        /* \"#utility.yul\":6779:6782   */\n      dup5\n        /* \"#utility.yul\":6775:6789   */\n      div\n        /* \"#utility.yul\":6768:6773   */\n      dup2\n        /* \"#utility.yul\":6765:6790   */\n      gt\n        /* \"#utility.yul\":6762:6813   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":6793:6811   */\n      tag_257\n      tag_160\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6762:6813   */\n    tag_256:\n        /* \"#utility.yul\":6842:6846   */\n      dup2\n        /* \"#utility.yul\":6835:6840   */\n      dup2\n        /* \"#utility.yul\":6831:6847   */\n      mul\n        /* \"#utility.yul\":6822:6847   */\n      swap1\n      pop\n        /* \"#utility.yul\":5780:6853   */\n    tag_242:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6859:6945   */\n    tag_164:\n        /* \"#utility.yul\":6894:6901   */\n      0x00\n        /* \"#utility.yul\":6934:6938   */\n      0xff\n        /* \"#utility.yul\":6927:6932   */\n      dup3\n        /* \"#utility.yul\":6923:6939   */\n      and\n        /* \"#utility.yul\":6912:6939   */\n      swap1\n      pop\n        /* \"#utility.yul\":6859:6945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6951:7232   */\n    tag_44:\n        /* \"#utility.yul\":7009:7014   */\n      0x00\n        /* \"#utility.yul\":7033:7056   */\n      tag_260\n        /* \"#utility.yul\":7051:7055   */\n      dup3\n        /* \"#utility.yul\":7033:7056   */\n      tag_149\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7025:7056   */\n      swap2\n      pop\n        /* \"#utility.yul\":7077:7102   */\n      tag_261\n        /* \"#utility.yul\":7093:7101   */\n      dup4\n        /* \"#utility.yul\":7077:7102   */\n      tag_164\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7065:7102   */\n      swap3\n      pop\n        /* \"#utility.yul\":7121:7225   */\n      tag_262\n        /* \"#utility.yul\":7158:7224   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7148:7156   */\n      dup5\n        /* \"#utility.yul\":7142:7146   */\n      dup5\n        /* \"#utility.yul\":7121:7225   */\n      tag_163\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7112:7225   */\n      swap1\n      pop\n        /* \"#utility.yul\":6951:7232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7238:7648   */\n    tag_51:\n        /* \"#utility.yul\":7278:7285   */\n      0x00\n        /* \"#utility.yul\":7301:7321   */\n      tag_264\n        /* \"#utility.yul\":7319:7320   */\n      dup3\n        /* \"#utility.yul\":7301:7321   */\n      tag_149\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7296:7321   */\n      swap2\n      pop\n        /* \"#utility.yul\":7335:7355   */\n      tag_265\n        /* \"#utility.yul\":7353:7354   */\n      dup4\n        /* \"#utility.yul\":7335:7355   */\n      tag_149\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7330:7355   */\n      swap3\n      pop\n        /* \"#utility.yul\":7390:7391   */\n      dup3\n        /* \"#utility.yul\":7387:7388   */\n      dup3\n        /* \"#utility.yul\":7383:7392   */\n      mul\n        /* \"#utility.yul\":7412:7442   */\n      tag_266\n        /* \"#utility.yul\":7430:7441   */\n      dup2\n        /* \"#utility.yul\":7412:7442   */\n      tag_149\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7401:7442   */\n      swap2\n      pop\n        /* \"#utility.yul\":7591:7592   */\n      dup3\n        /* \"#utility.yul\":7582:7589   */\n      dup3\n        /* \"#utility.yul\":7578:7593   */\n      div\n        /* \"#utility.yul\":7575:7576   */\n      dup5\n        /* \"#utility.yul\":7572:7594   */\n      eq\n        /* \"#utility.yul\":7552:7553   */\n      dup4\n        /* \"#utility.yul\":7545:7554   */\n      iszero\n        /* \"#utility.yul\":7525:7608   */\n      or\n        /* \"#utility.yul\":7502:7641   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":7621:7639   */\n      tag_268\n      tag_160\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7502:7641   */\n    tag_267:\n        /* \"#utility.yul\":7286:7648   */\n      pop\n        /* \"#utility.yul\":7238:7648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7654:7823   */\n    tag_165:\n        /* \"#utility.yul\":7738:7749   */\n      0x00\n        /* \"#utility.yul\":7772:7778   */\n      dup3\n        /* \"#utility.yul\":7767:7770   */\n      dup3\n        /* \"#utility.yul\":7760:7779   */\n      mstore\n        /* \"#utility.yul\":7812:7816   */\n      0x20\n        /* \"#utility.yul\":7807:7810   */\n      dup3\n        /* \"#utility.yul\":7803:7817   */\n      add\n        /* \"#utility.yul\":7788:7817   */\n      swap1\n      pop\n        /* \"#utility.yul\":7654:7823   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7829:7980   */\n    tag_166:\n        /* \"#utility.yul\":7969:7972   */\n      0x5200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7965:7966   */\n      0x00\n        /* \"#utility.yul\":7957:7963   */\n      dup3\n        /* \"#utility.yul\":7953:7967   */\n      add\n        /* \"#utility.yul\":7946:7973   */\n      mstore\n        /* \"#utility.yul\":7829:7980   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7986:8351   */\n    tag_167:\n        /* \"#utility.yul\":8128:8131   */\n      0x00\n        /* \"#utility.yul\":8149:8215   */\n      tag_272\n        /* \"#utility.yul\":8213:8214   */\n      0x01\n        /* \"#utility.yul\":8208:8211   */\n      dup4\n        /* \"#utility.yul\":8149:8215   */\n      tag_165\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8142:8215   */\n      swap2\n      pop\n        /* \"#utility.yul\":8224:8317   */\n      tag_273\n        /* \"#utility.yul\":8313:8316   */\n      dup3\n        /* \"#utility.yul\":8224:8317   */\n      tag_166\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8342:8344   */\n      0x20\n        /* \"#utility.yul\":8337:8340   */\n      dup3\n        /* \"#utility.yul\":8333:8345   */\n      add\n        /* \"#utility.yul\":8326:8345   */\n      swap1\n      pop\n        /* \"#utility.yul\":7986:8351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8357:8776   */\n    tag_56:\n        /* \"#utility.yul\":8523:8527   */\n      0x00\n        /* \"#utility.yul\":8561:8563   */\n      0x20\n        /* \"#utility.yul\":8550:8559   */\n      dup3\n        /* \"#utility.yul\":8546:8564   */\n      add\n        /* \"#utility.yul\":8538:8564   */\n      swap1\n      pop\n        /* \"#utility.yul\":8610:8619   */\n      dup2\n        /* \"#utility.yul\":8604:8608   */\n      dup2\n        /* \"#utility.yul\":8600:8620   */\n      sub\n        /* \"#utility.yul\":8596:8597   */\n      0x00\n        /* \"#utility.yul\":8585:8594   */\n      dup4\n        /* \"#utility.yul\":8581:8598   */\n      add\n        /* \"#utility.yul\":8574:8621   */\n      mstore\n        /* \"#utility.yul\":8638:8769   */\n      tag_275\n        /* \"#utility.yul\":8764:8768   */\n      dup2\n        /* \"#utility.yul\":8638:8769   */\n      tag_167\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8630:8769   */\n      swap1\n      pop\n        /* \"#utility.yul\":8357:8776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8782:8976   */\n    tag_59:\n        /* \"#utility.yul\":8822:8826   */\n      0x00\n        /* \"#utility.yul\":8842:8862   */\n      tag_277\n        /* \"#utility.yul\":8860:8861   */\n      dup3\n        /* \"#utility.yul\":8842:8862   */\n      tag_149\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":8837:8862   */\n      swap2\n      pop\n        /* \"#utility.yul\":8876:8896   */\n      tag_278\n        /* \"#utility.yul\":8894:8895   */\n      dup4\n        /* \"#utility.yul\":8876:8896   */\n      tag_149\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8871:8896   */\n      swap3\n      pop\n        /* \"#utility.yul\":8920:8921   */\n      dup3\n        /* \"#utility.yul\":8917:8918   */\n      dup3\n        /* \"#utility.yul\":8913:8922   */\n      sub\n        /* \"#utility.yul\":8905:8922   */\n      swap1\n      pop\n        /* \"#utility.yul\":8944:8945   */\n      dup2\n        /* \"#utility.yul\":8938:8942   */\n      dup2\n        /* \"#utility.yul\":8935:8946   */\n      gt\n        /* \"#utility.yul\":8932:8969   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":8949:8967   */\n      tag_280\n      tag_160\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":8932:8969   */\n    tag_279:\n        /* \"#utility.yul\":8782:8976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8982:9354   */\n    tag_63:\n        /* \"#utility.yul\":9021:9025   */\n      0x00\n        /* \"#utility.yul\":9041:9060   */\n      tag_282\n        /* \"#utility.yul\":9058:9059   */\n      dup3\n        /* \"#utility.yul\":9041:9060   */\n      tag_156\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9036:9060   */\n      swap2\n      pop\n        /* \"#utility.yul\":9074:9093   */\n      tag_283\n        /* \"#utility.yul\":9091:9092   */\n      dup4\n        /* \"#utility.yul\":9074:9093   */\n      tag_156\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":9069:9093   */\n      swap3\n      pop\n        /* \"#utility.yul\":9117:9118   */\n      dup3\n        /* \"#utility.yul\":9114:9115   */\n      dup3\n        /* \"#utility.yul\":9110:9119   */\n      sub\n        /* \"#utility.yul\":9102:9119   */\n      swap1\n      pop\n        /* \"#utility.yul\":9311:9312   */\n      dup2\n        /* \"#utility.yul\":9305:9309   */\n      dup2\n        /* \"#utility.yul\":9301:9313   */\n      slt\n        /* \"#utility.yul\":9297:9298   */\n      0x00\n        /* \"#utility.yul\":9294:9295   */\n      dup5\n        /* \"#utility.yul\":9290:9299   */\n      slt\n        /* \"#utility.yul\":9286:9314   */\n      and\n        /* \"#utility.yul\":9269:9270   */\n      dup3\n        /* \"#utility.yul\":9263:9267   */\n      dup3\n        /* \"#utility.yul\":9259:9271   */\n      sgt\n        /* \"#utility.yul\":9254:9255   */\n      0x00\n        /* \"#utility.yul\":9251:9252   */\n      dup6\n        /* \"#utility.yul\":9247:9256   */\n      slt\n        /* \"#utility.yul\":9240:9257   */\n      iszero\n        /* \"#utility.yul\":9236:9272   */\n      and\n        /* \"#utility.yul\":9220:9324   */\n      or\n        /* \"#utility.yul\":9217:9347   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":9327:9345   */\n      tag_285\n      tag_160\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9217:9347   */\n    tag_284:\n        /* \"#utility.yul\":8982:9354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9360:9916   */\n    tag_65:\n        /* \"#utility.yul\":9399:9406   */\n      0x00\n        /* \"#utility.yul\":9422:9441   */\n      tag_287\n        /* \"#utility.yul\":9439:9440   */\n      dup3\n        /* \"#utility.yul\":9422:9441   */\n      tag_156\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9417:9441   */\n      swap2\n      pop\n        /* \"#utility.yul\":9455:9474   */\n      tag_288\n        /* \"#utility.yul\":9472:9473   */\n      dup4\n        /* \"#utility.yul\":9455:9474   */\n      tag_156\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":9450:9474   */\n      swap3\n      pop\n        /* \"#utility.yul\":9509:9510   */\n      dup3\n        /* \"#utility.yul\":9506:9507   */\n      dup3\n        /* \"#utility.yul\":9502:9511   */\n      mul\n        /* \"#utility.yul\":9531:9560   */\n      tag_289\n        /* \"#utility.yul\":9548:9559   */\n      dup2\n        /* \"#utility.yul\":9531:9560   */\n      tag_156\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9520:9560   */\n      swap2\n      pop\n        /* \"#utility.yul\":9618:9684   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9615:9616   */\n      dup5\n        /* \"#utility.yul\":9612:9685   */\n      eq\n        /* \"#utility.yul\":9608:9609   */\n      0x00\n        /* \"#utility.yul\":9605:9606   */\n      dup5\n        /* \"#utility.yul\":9601:9610   */\n      slt\n        /* \"#utility.yul\":9597:9686   */\n      and\n        /* \"#utility.yul\":9594:9709   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":9689:9707   */\n      tag_291\n      tag_160\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9594:9709   */\n    tag_290:\n        /* \"#utility.yul\":9859:9860   */\n      dup3\n        /* \"#utility.yul\":9850:9857   */\n      dup3\n        /* \"#utility.yul\":9845:9861   */\n      sdiv\n        /* \"#utility.yul\":9842:9843   */\n      dup5\n        /* \"#utility.yul\":9839:9862   */\n      eq\n        /* \"#utility.yul\":9819:9820   */\n      dup4\n        /* \"#utility.yul\":9812:9821   */\n      iszero\n        /* \"#utility.yul\":9792:9876   */\n      or\n        /* \"#utility.yul\":9769:9909   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":9889:9907   */\n      tag_293\n      tag_160\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9769:9909   */\n    tag_292:\n        /* \"#utility.yul\":9407:9916   */\n      pop\n        /* \"#utility.yul\":9360:9916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9922:10297   */\n    tag_68:\n        /* \"#utility.yul\":9961:9964   */\n      0x00\n        /* \"#utility.yul\":9980:9999   */\n      tag_295\n        /* \"#utility.yul\":9997:9998   */\n      dup3\n        /* \"#utility.yul\":9980:9999   */\n      tag_156\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9975:9999   */\n      swap2\n      pop\n        /* \"#utility.yul\":10013:10032   */\n      tag_296\n        /* \"#utility.yul\":10030:10031   */\n      dup4\n        /* \"#utility.yul\":10013:10032   */\n      tag_156\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":10008:10032   */\n      swap3\n      pop\n        /* \"#utility.yul\":10055:10056   */\n      dup3\n        /* \"#utility.yul\":10052:10053   */\n      dup3\n        /* \"#utility.yul\":10048:10057   */\n      add\n        /* \"#utility.yul\":10041:10057   */\n      swap1\n      pop\n        /* \"#utility.yul\":10253:10254   */\n      dup3\n        /* \"#utility.yul\":10248:10251   */\n      dup2\n        /* \"#utility.yul\":10244:10255   */\n      slt\n        /* \"#utility.yul\":10237:10256   */\n      iszero\n        /* \"#utility.yul\":10233:10234   */\n      0x00\n        /* \"#utility.yul\":10230:10231   */\n      dup4\n        /* \"#utility.yul\":10226:10235   */\n      slt\n        /* \"#utility.yul\":10222:10257   */\n      and\n        /* \"#utility.yul\":10205:10206   */\n      dup4\n        /* \"#utility.yul\":10200:10203   */\n      dup3\n        /* \"#utility.yul\":10196:10207   */\n      slt\n        /* \"#utility.yul\":10191:10192   */\n      0x00\n        /* \"#utility.yul\":10188:10189   */\n      dup5\n        /* \"#utility.yul\":10184:10193   */\n      slt\n        /* \"#utility.yul\":10177:10194   */\n      iszero\n        /* \"#utility.yul\":10173:10208   */\n      and\n        /* \"#utility.yul\":10157:10267   */\n      or\n        /* \"#utility.yul\":10154:10290   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":10270:10288   */\n      tag_298\n      tag_160\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10154:10290   */\n    tag_297:\n        /* \"#utility.yul\":9922:10297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10303:10494   */\n    tag_78:\n        /* \"#utility.yul\":10343:10346   */\n      0x00\n        /* \"#utility.yul\":10362:10382   */\n      tag_300\n        /* \"#utility.yul\":10380:10381   */\n      dup3\n        /* \"#utility.yul\":10362:10382   */\n      tag_149\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10357:10382   */\n      swap2\n      pop\n        /* \"#utility.yul\":10396:10416   */\n      tag_301\n        /* \"#utility.yul\":10414:10415   */\n      dup4\n        /* \"#utility.yul\":10396:10416   */\n      tag_149\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10391:10416   */\n      swap3\n      pop\n        /* \"#utility.yul\":10439:10440   */\n      dup3\n        /* \"#utility.yul\":10436:10437   */\n      dup3\n        /* \"#utility.yul\":10432:10441   */\n      add\n        /* \"#utility.yul\":10425:10441   */\n      swap1\n      pop\n        /* \"#utility.yul\":10460:10463   */\n      dup1\n        /* \"#utility.yul\":10457:10458   */\n      dup3\n        /* \"#utility.yul\":10454:10464   */\n      gt\n        /* \"#utility.yul\":10451:10487   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":10467:10485   */\n      tag_303\n      tag_160\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10451:10487   */\n    tag_302:\n        /* \"#utility.yul\":10303:10494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10500:10728   */\n    tag_90:\n        /* \"#utility.yul\":10535:10538   */\n      0x00\n        /* \"#utility.yul\":10558:10581   */\n      tag_305\n        /* \"#utility.yul\":10575:10580   */\n      dup3\n        /* \"#utility.yul\":10558:10581   */\n      tag_156\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10549:10581   */\n      swap2\n      pop\n        /* \"#utility.yul\":10603:10669   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10596:10601   */\n      dup3\n        /* \"#utility.yul\":10593:10670   */\n      sub\n        /* \"#utility.yul\":10590:10693   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":10673:10691   */\n      tag_307\n      tag_160\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10590:10693   */\n    tag_306:\n        /* \"#utility.yul\":10716:10721   */\n      dup2\n        /* \"#utility.yul\":10713:10714   */\n      0x00\n        /* \"#utility.yul\":10709:10722   */\n      sub\n        /* \"#utility.yul\":10702:10722   */\n      swap1\n      pop\n        /* \"#utility.yul\":10500:10728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10734:10885   */\n    tag_168:\n        /* \"#utility.yul\":10874:10877   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10870:10871   */\n      0x00\n        /* \"#utility.yul\":10862:10868   */\n      dup3\n        /* \"#utility.yul\":10858:10872   */\n      add\n        /* \"#utility.yul\":10851:10878   */\n      mstore\n        /* \"#utility.yul\":10734:10885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10891:11256   */\n    tag_169:\n        /* \"#utility.yul\":11033:11036   */\n      0x00\n        /* \"#utility.yul\":11054:11120   */\n      tag_310\n        /* \"#utility.yul\":11118:11119   */\n      0x01\n        /* \"#utility.yul\":11113:11116   */\n      dup4\n        /* \"#utility.yul\":11054:11120   */\n      tag_165\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":11047:11120   */\n      swap2\n      pop\n        /* \"#utility.yul\":11129:11222   */\n      tag_311\n        /* \"#utility.yul\":11218:11221   */\n      dup3\n        /* \"#utility.yul\":11129:11222   */\n      tag_168\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11247:11249   */\n      0x20\n        /* \"#utility.yul\":11242:11245   */\n      dup3\n        /* \"#utility.yul\":11238:11250   */\n      add\n        /* \"#utility.yul\":11231:11250   */\n      swap1\n      pop\n        /* \"#utility.yul\":10891:11256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11262:11681   */\n    tag_93:\n        /* \"#utility.yul\":11428:11432   */\n      0x00\n        /* \"#utility.yul\":11466:11468   */\n      0x20\n        /* \"#utility.yul\":11455:11464   */\n      dup3\n        /* \"#utility.yul\":11451:11469   */\n      add\n        /* \"#utility.yul\":11443:11469   */\n      swap1\n      pop\n        /* \"#utility.yul\":11515:11524   */\n      dup2\n        /* \"#utility.yul\":11509:11513   */\n      dup2\n        /* \"#utility.yul\":11505:11525   */\n      sub\n        /* \"#utility.yul\":11501:11502   */\n      0x00\n        /* \"#utility.yul\":11490:11499   */\n      dup4\n        /* \"#utility.yul\":11486:11503   */\n      add\n        /* \"#utility.yul\":11479:11526   */\n      mstore\n        /* \"#utility.yul\":11543:11674   */\n      tag_313\n        /* \"#utility.yul\":11669:11673   */\n      dup2\n        /* \"#utility.yul\":11543:11674   */\n      tag_169\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11535:11674   */\n      swap1\n      pop\n        /* \"#utility.yul\":11262:11681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11687:11863   */\n    tag_137:\n        /* \"#utility.yul\":11719:11720   */\n      0x00\n        /* \"#utility.yul\":11736:11756   */\n      tag_315\n        /* \"#utility.yul\":11754:11755   */\n      dup3\n        /* \"#utility.yul\":11736:11756   */\n      tag_149\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11731:11756   */\n      swap2\n      pop\n        /* \"#utility.yul\":11770:11790   */\n      tag_316\n        /* \"#utility.yul\":11788:11789   */\n      dup4\n        /* \"#utility.yul\":11770:11790   */\n      tag_149\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":11765:11790   */\n      swap3\n      pop\n        /* \"#utility.yul\":11809:11810   */\n      dup3\n        /* \"#utility.yul\":11799:11834   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":11814:11832   */\n      tag_318\n      tag_159\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":11799:11834   */\n    tag_317:\n        /* \"#utility.yul\":11855:11856   */\n      dup3\n        /* \"#utility.yul\":11852:11853   */\n      dup3\n        /* \"#utility.yul\":11848:11857   */\n      mod\n        /* \"#utility.yul\":11843:11857   */\n      swap1\n      pop\n        /* \"#utility.yul\":11687:11863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d396a43a9d5c62dc516142a4f38aa1e2eec31e1cadcc8c76f06a28c1126c06de64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6112c4610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c80630a817037146100665780639400ff9a14610096578063aa52cba7146100c6578063b35e24d2146100f6578063b3e3005114610126575b600080fd5b610080600480360381019061007b9190610b92565b610156565b60405161008d9190610bdb565b60405180910390f35b6100b060048036038101906100ab9190610c2c565b610168565b6040516100bd9190610c68565b60405180910390f35b6100e060048036038101906100db9190610b92565b61017a565b6040516100ed9190610c68565b60405180910390f35b610110600480360381019061010b9190610caf565b6101df565b60405161011d9190610ceb565b60405180910390f35b610140600480360381019061013b9190610d3c565b6101f1565b60405161014d9190610ceb565b60405180910390f35b600061016182610226565b9050919050565b600061017382610625565b9050919050565b60008060026c010000000000000000000000008473ffffffffffffffffffffffffffffffffffffffff166101ae9190610dc7565b6101b89190610f38565b905060008173ffffffffffffffffffffffffffffffffffffffff1690508092505050919050565b60006101ea8261069f565b9050919050565b6000806c0100000000000000000000000061020b84610625565b6102159190610f83565b905060008190508092505050919050565b60006401000276a373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16101580156102a8575073fffd8963efd1fc6a506488495d951d5263988d2673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16105b6102e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102de90611022565b60405180910390fd5b600060208373ffffffffffffffffffffffffffffffffffffffff16901b9050600081905060006fffffffffffffffffffffffffffffffff821160071b808217915082811c92505067ffffffffffffffff821160061b808217915082811c92505063ffffffff821160051b808217915082811c92505061ffff821160041b808217915082811c92505060ff821160031b808217915082811c925050600f821160021b808217915082811c9250506003821160011b808217915082811c92505060018211808217915050608081106103ce57607f816103c49190611042565b83901c91506103e1565b80607f6103db9190611042565b83901b91505b600060406080836103f29190611076565b901b9050828302607f1c92508260801c80603f1b8217915083811c935050828302607f1c92508260801c80603e1b8217915083811c935050828302607f1c92508260801c80603d1b8217915083811c935050828302607f1c92508260801c80603c1b8217915083811c935050828302607f1c92508260801c80603b1b8217915083811c935050828302607f1c92508260801c80603a1b8217915083811c935050828302607f1c92508260801c8060391b8217915083811c935050828302607f1c92508260801c8060381b8217915083811c935050828302607f1c92508260801c8060371b8217915083811c935050828302607f1c92508260801c8060361b8217915083811c935050828302607f1c92508260801c8060351b8217915083811c935050828302607f1c92508260801c8060341b8217915083811c935050828302607f1c92508260801c8060331b8217915083811c935050828302607f1c92508260801c8060321b82179150506000693627a301d71055774c858261057591906110b9565b9050600060806f028f6481ab7f045a5af012a19d003aaa836105979190611076565b901d9050600060806fdb2df09e81959a81455e260799a0632f846105bb9190611131565b901d90508060020b8260020b14610615578873ffffffffffffffffffffffffffffffffffffffff166105ec8261069f565b73ffffffffffffffffffffffffffffffffffffffff16111561060e5781610610565b805b610617565b815b975050505050505050919050565b6000600382111561068c57819050600060016002846106449190610dc7565b61064e9190611175565b90505b8181101561068657809150600281828561066b9190610dc7565b6106759190611175565b61067f9190610dc7565b9050610651565b5061069a565b6000821461069957600190505b5b919050565b60008060008360020b126106b6578260020b6106c4565b8260020b6106c3906111a9565b5b9050620d89e881111561070c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107039061123d565b60405180910390fd5b600080600183160361072f57700100000000000000000000000000000000610741565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600060028316146107845760806ffff97272373d413259a46990580e213a8261077f9190610f83565b901c90505b600060048316146107b25760806ffff2e50f5f656932ef12357cf3c7fdcc826107ad9190610f83565b901c90505b600060088316146107e05760806fffe5caca7e10e4e61c3624eaa0941cd0826107db9190610f83565b901c90505b6000601083161461080e5760806fffcb9843d60f6159c9db58835c926644826108099190610f83565b901c90505b6000602083161461083c5760806fff973b41fa98c081472e6896dfb254c0826108379190610f83565b901c90505b6000604083161461086a5760806fff2ea16466c96a3843ec78b326b52861826108659190610f83565b901c90505b600060808316146108985760806ffe5dee046a99a2a811c461f1969c3053826108939190610f83565b901c90505b60006101008316146108c75760806ffcbe86c7900a88aedcffc83b479aa3a4826108c29190610f83565b901c90505b60006102008316146108f65760806ff987a7253ac413176f2b074cf7815e54826108f19190610f83565b901c90505b60006104008316146109255760806ff3392b0822b70005940c7a398e4b70f3826109209190610f83565b901c90505b60006108008316146109545760806fe7159475a2c29b7443b29c7fa6e889d98261094f9190610f83565b901c90505b60006110008316146109835760806fd097f3bdfd2022b8845ad8f792aa58258261097e9190610f83565b901c90505b60006120008316146109b25760806fa9f746462d870fdf8a65dc1f90e061e5826109ad9190610f83565b901c90505b60006140008316146109e15760806f70d869a156d2a1b890bb3df62baf32f7826109dc9190610f83565b901c90505b6000618000831614610a105760806f31be135f97d08fd981231505542fcfa682610a0b9190610f83565b901c90505b600062010000831614610a405760806f09aa508b5b7a84e1c677de54f3e99bc982610a3b9190610f83565b901c90505b600062020000831614610a6f5760806e5d6af8dedb81196699c329225ee60482610a6a9190610f83565b901c90505b600062040000831614610a9d5760806d2216e584f5fa1ea926041bedfe9882610a989190610f83565b901c90505b600062080000831614610ac95760806b048a170391f7dc42444e8fa282610ac49190610f83565b901c90505b60008460020b1315610b0457807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610b019190610dc7565b90505b600064010000000082610b17919061125d565b14610b23576001610b26565b60005b60ff16602082901c610b389190611175565b92505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610b6f81610b46565b8114610b7a57600080fd5b50565b600081359050610b8c81610b66565b92915050565b600060208284031215610ba857610ba7610b41565b5b6000610bb684828501610b7d565b91505092915050565b60008160020b9050919050565b610bd581610bbf565b82525050565b6000602082019050610bf06000830184610bcc565b92915050565b6000819050919050565b610c0981610bf6565b8114610c1457600080fd5b50565b600081359050610c2681610c00565b92915050565b600060208284031215610c4257610c41610b41565b5b6000610c5084828501610c17565b91505092915050565b610c6281610bf6565b82525050565b6000602082019050610c7d6000830184610c59565b92915050565b610c8c81610bbf565b8114610c9757600080fd5b50565b600081359050610ca981610c83565b92915050565b600060208284031215610cc557610cc4610b41565b5b6000610cd384828501610c9a565b91505092915050565b610ce581610b46565b82525050565b6000602082019050610d006000830184610cdc565b92915050565b6000819050919050565b610d1981610d06565b8114610d2457600080fd5b50565b600081359050610d3681610d10565b92915050565b600060208284031215610d5257610d51610b41565b5b6000610d6084828501610d27565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd282610bf6565b9150610ddd83610bf6565b925082610ded57610dec610d69565b5b828204905092915050565b60008160011c9050919050565b6000808291508390505b6001851115610e4f57808604811115610e2b57610e2a610d98565b5b6001851615610e3a5780820291505b8081029050610e4885610df8565b9450610e0f565b94509492505050565b600082610e685760019050610f24565b81610e765760009050610f24565b8160018114610e8c5760028114610e9657610ec5565b6001915050610f24565b60ff841115610ea857610ea7610d98565b5b8360020a915084821115610ebf57610ebe610d98565b5b50610f24565b5060208310610133831016604e8410600b8410161715610efa5782820a905083811115610ef557610ef4610d98565b5b610f24565b610f078484846001610e05565b92509050818404811115610f1e57610f1d610d98565b5b81810290505b9392505050565b600060ff82169050919050565b6000610f4382610bf6565b9150610f4e83610f2b565b9250610f7b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610e58565b905092915050565b6000610f8e82610bf6565b9150610f9983610bf6565b9250828202610fa781610bf6565b91508282048414831517610fbe57610fbd610d98565b5b5092915050565b600082825260208201905092915050565b7f5200000000000000000000000000000000000000000000000000000000000000600082015250565b600061100c600183610fc5565b915061101782610fd6565b602082019050919050565b6000602082019050818103600083015261103b81610fff565b9050919050565b600061104d82610bf6565b915061105883610bf6565b92508282039050818111156110705761106f610d98565b5b92915050565b600061108182610d06565b915061108c83610d06565b92508282039050818112600084121682821360008512151617156110b3576110b2610d98565b5b92915050565b60006110c482610d06565b91506110cf83610d06565b92508282026110dd81610d06565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561111557611114610d98565b5b828205841483151761112a57611129610d98565b5b5092915050565b600061113c82610d06565b915061114783610d06565b92508282019050828112156000831216838212600084121516171561116f5761116e610d98565b5b92915050565b600061118082610bf6565b915061118b83610bf6565b92508282019050808211156111a3576111a2610d98565b5b92915050565b60006111b482610d06565b91507f800000000000000000000000000000000000000000000000000000000000000082036111e6576111e5610d98565b5b816000039050919050565b7f5400000000000000000000000000000000000000000000000000000000000000600082015250565b6000611227600183610fc5565b9150611232826111f1565b602082019050919050565b600060208201905081810360008301526112568161121a565b9050919050565b600061126882610bf6565b915061127383610bf6565b92508261128357611282610d69565b5b82820690509291505056fea2646970667358221220d396a43a9d5c62dc516142a4f38aa1e2eec31e1cadcc8c76f06a28c1126c06de64736f6c63430008120033",
							"opcodes": "PUSH2 0x12C4 PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA817037 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x9400FF9A EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xAA52CBA7 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xB35E24D2 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xB3E30051 EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0xC2C JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x161 DUP3 PUSH2 0x226 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173 DUP3 PUSH2 0x625 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH13 0x1000000000000000000000000 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA DUP3 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH13 0x1000000000000000000000000 PUSH2 0x20B DUP5 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x1000276A3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x2A8 JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST PUSH2 0x2E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DE SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x7 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x6 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH4 0xFFFFFFFF DUP3 GT PUSH1 0x5 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH2 0xFFFF DUP3 GT PUSH1 0x4 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0xFF DUP3 GT PUSH1 0x3 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0xF DUP3 GT PUSH1 0x2 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0x3 DUP3 GT PUSH1 0x1 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0x1 DUP3 GT DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x80 DUP2 LT PUSH2 0x3CE JUMPI PUSH1 0x7F DUP2 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST DUP4 SWAP1 SHR SWAP2 POP PUSH2 0x3E1 JUMP JUMPDEST DUP1 PUSH1 0x7F PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST DUP4 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH1 0x80 DUP4 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST SWAP1 SHL SWAP1 POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3F SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3E SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3D SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3C SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3B SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3A SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x39 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x38 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x37 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x36 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x35 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x34 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x33 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x32 SHL DUP3 OR SWAP2 POP POP PUSH1 0x0 PUSH10 0x3627A301D71055774C85 DUP3 PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x80 PUSH16 0x28F6481AB7F045A5AF012A19D003AAA DUP4 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH1 0x80 PUSH16 0xDB2DF09E81959A81455E260799A0632F DUP5 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP1 SAR SWAP1 POP DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND EQ PUSH2 0x615 JUMPI DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5EC DUP3 PUSH2 0x69F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x60E JUMPI DUP2 PUSH2 0x610 JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x617 JUMP JUMPDEST DUP2 JUMPDEST SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x68C JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x644 SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x67F SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x651 JUMP JUMPDEST POP PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x699 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x6B6 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x6C4 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x6C3 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x703 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND SUB PUSH2 0x72F JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x741 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x784 JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x7B2 JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x7E0 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x80E JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x83C JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x86A JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 PUSH2 0x865 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x898 JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 PUSH2 0x893 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0x8C7 JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 PUSH2 0x8C2 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0x8F6 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0x925 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 PUSH2 0x920 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0x954 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 PUSH2 0x94F SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0x983 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 PUSH2 0x97E SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0x9B2 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0x9E1 JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0xA10 JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0xA40 JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0xA6F JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0xA9D JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 PUSH2 0xA98 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0xAC9 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0xB04 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0x125D JUMP JUMPDEST EQ PUSH2 0xB23 JUMPI PUSH1 0x1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6F DUP2 PUSH2 0xB46 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8C DUP2 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA8 JUMPI PUSH2 0xBA7 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB6 DUP5 DUP3 DUP6 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD5 DUP2 PUSH2 0xBBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC09 DUP2 PUSH2 0xBF6 JUMP JUMPDEST DUP2 EQ PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC26 DUP2 PUSH2 0xC00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC41 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC50 DUP5 DUP3 DUP6 ADD PUSH2 0xC17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xBF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC8C DUP2 PUSH2 0xBBF JUMP JUMPDEST DUP2 EQ PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCA9 DUP2 PUSH2 0xC83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC5 JUMPI PUSH2 0xCC4 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCD3 DUP5 DUP3 DUP6 ADD PUSH2 0xC9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE5 DUP2 PUSH2 0xB46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD00 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD19 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP2 EQ PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD36 DUP2 PUSH2 0xD10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH2 0xD51 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD60 DUP5 DUP3 DUP6 ADD PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDD2 DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDD DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0xD69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xE4F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xE2B JUMPI PUSH2 0xE2A PUSH2 0xD98 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xE3A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xE48 DUP6 PUSH2 0xDF8 JUMP JUMPDEST SWAP5 POP PUSH2 0xE0F JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE68 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xF24 JUMP JUMPDEST DUP2 PUSH2 0xE76 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF24 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE8C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE96 JUMPI PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF24 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xD98 JUMP JUMPDEST JUMPDEST POP PUSH2 0xF24 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xEFA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xEF5 JUMPI PUSH2 0xEF4 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST PUSH2 0xF24 JUMP JUMPDEST PUSH2 0xF07 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xD98 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4E DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP3 POP PUSH2 0xF7B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8E DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF99 DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xFA7 DUP2 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0xD98 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100C PUSH1 0x1 DUP4 PUSH2 0xFC5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP3 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103B DUP2 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104D DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1058 DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1070 JUMPI PUSH2 0x106F PUSH2 0xD98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1081 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x108C DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C4 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x10CF DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x10DD DUP2 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x112A JUMPI PUSH2 0x1129 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT AND DUP4 DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x116F JUMPI PUSH2 0x116E PUSH2 0xD98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x118B DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B4 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x11E6 JUMPI PUSH2 0x11E5 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1227 PUSH1 0x1 DUP4 PUSH2 0xFC5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1232 DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1256 DUP2 PUSH2 0x121A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1268 DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1273 DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1283 JUMPI PUSH2 0x1282 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SWAP7 LOG4 GASPRICE SWAP14 0x5C PUSH3 0xDC5161 TIMESTAMP LOG4 RETURN DUP11 LOG1 0xE2 0xEE 0xC3 0x1E SHR 0xAD 0xCC DUP13 PUSH23 0xF06A28C1126C06DE64736F6C6343000812003300000000 ",
							"sourceMap": "137:958:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getSqrtRatioAtTick_512": {
									"entryPoint": 1695,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTickAtSqrtRatio_651": {
									"entryPoint": 550,
									"id": 651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@priceToSqrtPriceX96_77": {
									"entryPoint": 497,
									"id": 77,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sqrtPriceX96ToPrice_44": {
									"entryPoint": 378,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sqrtPriceX96ToTick_90": {
									"entryPoint": 342,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sqrtPrice_116": {
									"entryPoint": 360,
									"id": 116,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sqrt_708": {
									"entryPoint": 1573,
									"id": 708,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tickToSqrtPriceX96_103": {
									"entryPoint": 479,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_int24": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160": {
									"entryPoint": 2941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int24": {
									"entryPoint": 3247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_int24_to_t_int24_fromStack_library": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack_library": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_int24__to_t_int24__fromStack_library_reversed": {
									"entryPoint": 3035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint160__to_t_uint160__fromStack_library_reversed": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 3176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 4281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc": {
									"entryPoint": 4593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2": {
									"entryPoint": 4054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 3344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11866:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "509:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "566:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "575:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "578:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "568:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "568:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "532:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "557:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "539:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "539:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "529:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "522:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:43:4"
															},
															"nodeType": "YulIf",
															"src": "519:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "502:5:4",
														"type": ""
													}
												],
												"src": "466:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "646:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "656:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "665:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "656:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "721:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "694:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "694:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "624:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "632:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "640:5:4",
														"type": ""
													}
												],
												"src": "594:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "805:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "851:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "853:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "853:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "853:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "826:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "835:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "822:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "822:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "847:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:32:4"
															},
															"nodeType": "YulIf",
															"src": "815:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "944:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "959:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "973:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "963:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "988:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1023:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1034:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1019:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1019:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "998:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "998:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "988:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "775:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "786:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "798:6:4",
														"type": ""
													}
												],
												"src": "739:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:47:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1127:31:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1149:1:4",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1152:5:4"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "1138:10:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:20:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1127:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1099:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1109:7:4",
														"type": ""
													}
												],
												"src": "1074:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1256:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1277:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int24",
																			"nodeType": "YulIdentifier",
																			"src": "1261:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1261:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:35:4"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1227:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1234:3:4",
														"type": ""
													}
												],
												"src": "1170:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:128:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1492:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1505:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1516:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1444:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:75:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:75:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_int24__to_t_int24__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:4",
														"type": ""
													}
												],
												"src": "1296:230:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1587:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1598:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1587:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1559:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1569:7:4",
														"type": ""
													}
												],
												"src": "1532:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1715:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1727:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1717:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1717:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1681:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1706:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1688:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1688:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1678:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1678:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:43:4"
															},
															"nodeType": "YulIf",
															"src": "1668:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1651:5:4",
														"type": ""
													}
												],
												"src": "1615:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1805:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1827:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1814:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1814:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1805:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1870:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1843:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1773:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1781:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1789:5:4",
														"type": ""
													}
												],
												"src": "1743:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1954:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2000:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2002:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2002:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2002:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1975:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1984:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1967:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:32:4"
															},
															"nodeType": "YulIf",
															"src": "1964:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2093:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2108:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2112:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2137:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2172:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2183:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2168:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2168:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2192:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2147:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2147:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2137:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1924:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1935:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1947:6:4",
														"type": ""
													}
												],
												"src": "1888:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2296:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2313:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2336:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2318:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2318:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2306:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2284:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2291:3:4",
														"type": ""
													}
												],
												"src": "2223:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2461:132:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2471:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2483:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2494:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2479:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2479:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2471:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2559:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2572:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2583:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2568:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2568:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "2507:51:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2507:79:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2507:79:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2433:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2445:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2456:4:4",
														"type": ""
													}
												],
												"src": "2355:238:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2640:77:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2695:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2704:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2707:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2697:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2697:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2697:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2663:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2686:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nodeType": "YulIdentifier",
																					"src": "2670:15:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2670:22:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2660:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:33:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:41:4"
															},
															"nodeType": "YulIf",
															"src": "2650:61:4"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2633:5:4",
														"type": ""
													}
												],
												"src": "2599:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2773:85:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2783:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2805:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2792:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2792:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2783:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2846:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "2821:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2821:31:4"
														}
													]
												},
												"name": "abi_decode_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2751:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2759:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2767:5:4",
														"type": ""
													}
												],
												"src": "2723:135:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2928:261:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2974:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2976:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2976:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2976:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2949:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2958:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2945:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2945:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2970:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2941:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:32:4"
															},
															"nodeType": "YulIf",
															"src": "2938:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3067:115:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3082:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3096:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3086:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3111:61:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3144:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3155:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3140:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3140:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3164:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nodeType": "YulIdentifier",
																			"src": "3121:18:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:51:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3111:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2898:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2909:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2921:6:4",
														"type": ""
													}
												],
												"src": "2864:325:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3285:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3308:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "3290:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3290:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3256:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3263:3:4",
														"type": ""
													}
												],
												"src": "3195:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3433:132:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3443:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3455:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3451:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3451:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3443:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3531:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3544:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3555:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3540:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3540:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "3479:51:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:79:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3479:79:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint160__to_t_uint160__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3405:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3417:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3428:4:4",
														"type": ""
													}
												],
												"src": "3327:238:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3615:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3625:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3636:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3625:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3597:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3607:7:4",
														"type": ""
													}
												],
												"src": "3571:76:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3695:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3751:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3760:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3763:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3753:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3753:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3753:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3718:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3742:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "3725:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3725:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3715:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3715:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3708:42:4"
															},
															"nodeType": "YulIf",
															"src": "3705:62:4"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3688:5:4",
														"type": ""
													}
												],
												"src": "3653:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3830:86:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3840:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3862:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3849:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3849:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3840:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3904:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "3878:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3878:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3878:32:4"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3808:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3816:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3824:5:4",
														"type": ""
													}
												],
												"src": "3779:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3987:262:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4033:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4035:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4035:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4035:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4008:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4017:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4004:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4029:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4000:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:32:4"
															},
															"nodeType": "YulIf",
															"src": "3997:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4126:116:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4141:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4155:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4145:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4170:62:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4204:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4215:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4200:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4224:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "4180:19:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4180:52:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4170:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3957:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3968:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3980:6:4",
														"type": ""
													}
												],
												"src": "3922:327:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4283:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4300:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4293:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4293:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4397:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4400:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4390:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4390:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4421:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4414:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4414:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4414:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4255:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4469:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4486:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4489:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4479:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4479:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4576:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4576:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4610:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4600:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4600:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4600:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4441:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4669:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4679:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4702:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4684:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4679:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4713:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4736:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4718:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4718:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4713:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4760:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4762:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4762:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4762:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4757:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4750:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:9:4"
															},
															"nodeType": "YulIf",
															"src": "4747:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4792:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4801:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4804:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4797:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4797:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4792:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4658:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4661:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4667:1:4",
														"type": ""
													}
												],
												"src": "4627:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4869:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4879:34:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4904:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4907:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4900:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:13:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4879:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4850:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4860:8:4",
														"type": ""
													}
												],
												"src": "4818:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4999:775:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5009:15:4",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "5018:6:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5009:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5033:14:4",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "5042:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5033:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5091:677:4",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5179:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5181:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5181:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5181:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5157:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "5167:3:4"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5172:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5163:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5163:14:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5154:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5154:24:4"
																		},
																		"nodeType": "YulIf",
																		"src": "5151:50:4"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5246:419:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5626:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "5639:5:4"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "5646:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "5635:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5635:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "5626:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5221:8:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5231:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5217:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5217:16:4"
																		},
																		"nodeType": "YulIf",
																		"src": "5214:451:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5678:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5690:4:4"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5696:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "5686:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5686:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "5678:4:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5714:44:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5749:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "5726:22:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5726:32:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5714:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5067:8:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5077:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5064:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5080:2:4",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5060:3:4",
																"statements": []
															},
															"src": "5056:712:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "4954:6:4",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "4962:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4969:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "4979:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4987:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4994:4:4",
														"type": ""
													}
												],
												"src": "4926:848:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5840:1013:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6035:20:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6046:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6037:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6048:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6025:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6018:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6018:16:4"
															},
															"nodeType": "YulIf",
															"src": "6015:40:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6080:20:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6082:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6091:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6082:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6093:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6074:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6067:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6067:12:4"
															},
															"nodeType": "YulIf",
															"src": "6064:36:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6210:20:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "6212:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6221:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6212:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6223:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6203:27:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6208:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6254:176:4",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6289:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6291:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6291:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6291:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6274:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6284:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6271:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6271:17:4"
																				},
																				"nodeType": "YulIf",
																				"src": "6268:43:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6324:25:4",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6337:1:4",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6340:8:4"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "6333:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6333:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6324:5:4"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6380:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6382:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6382:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6382:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6368:5:4"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6375:3:4"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6365:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6365:14:4"
																				},
																				"nodeType": "YulIf",
																				"src": "6362:40:4"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6415:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6239:191:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6244:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6160:4:4"
															},
															"nodeType": "YulSwitch",
															"src": "6153:277:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6562:123:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6576:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6589:4:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6595:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "6585:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6585:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6576:5:4"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6635:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "6637:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6637:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6637:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "6623:5:4"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "6630:3:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "6620:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6620:14:4"
																		},
																		"nodeType": "YulIf",
																		"src": "6617:40:4"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6670:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "6465:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6471:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6462:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6462:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "6479:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6489:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6476:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6476:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6458:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6458:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "6514:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6520:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6511:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6511:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "6529:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6539:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6526:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6526:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6507:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6507:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6442:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6442:111:4"
															},
															"nodeType": "YulIf",
															"src": "6439:246:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6695:57:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6729:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6732:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6738:8:4"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "6748:3:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "6710:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6710:42:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6695:5:4"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6702:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6791:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6793:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6793:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6793:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "6768:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "6779:3:4"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6784:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6775:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6775:14:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6765:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6765:25:4"
															},
															"nodeType": "YulIf",
															"src": "6762:51:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6822:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "6835:5:4"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6842:4:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6831:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:16:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6822:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5810:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5816:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "5826:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5834:5:4",
														"type": ""
													}
												],
												"src": "5780:1073:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6902:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6912:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6927:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6934:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6923:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6923:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6912:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6884:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6894:7:4",
														"type": ""
													}
												],
												"src": "6859:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7015:217:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7025:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7051:4:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7033:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7033:23:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7025:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7065:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7093:8:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "7077:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7077:25:4"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7065:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7112:113:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7142:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7148:8:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7158:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "7121:20:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7121:104:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7112:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6990:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6996:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7009:5:4",
														"type": ""
													}
												],
												"src": "6951:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7286:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7296:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7319:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7301:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7296:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7330:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7353:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7335:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7335:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7330:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7364:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7387:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7390:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7383:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7383:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7368:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7401:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "7430:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7412:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7412:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7401:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7619:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7621:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7621:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7621:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7552:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7545:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7545:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7575:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7582:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7591:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7578:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7578:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7572:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7572:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7525:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7525:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:113:4"
															},
															"nodeType": "YulIf",
															"src": "7502:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7269:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7272:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7278:7:4",
														"type": ""
													}
												],
												"src": "7238:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7750:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7767:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7772:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7760:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7760:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7760:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7788:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7807:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7803:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7803:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7788:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7722:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7727:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7738:11:4",
														"type": ""
													}
												],
												"src": "7654:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7935:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7957:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7965:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7953:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7953:14:4"
																	},
																	{
																		"hexValue": "52",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7969:3:4",
																		"type": "",
																		"value": "R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7946:27:4"
														}
													]
												},
												"name": "store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7927:6:4",
														"type": ""
													}
												],
												"src": "7829:151:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8132:219:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8142:73:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8208:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8213:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8149:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8149:66:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8142:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8313:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																	"nodeType": "YulIdentifier",
																	"src": "8224:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8224:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8224:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8326:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8337:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8342:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8333:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8326:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8120:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8128:3:4",
														"type": ""
													}
												],
												"src": "7986:365:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8528:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8538:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8550:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8561:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8546:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8538:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8585:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8596:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8581:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8581:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8604:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8610:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8600:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8574:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8574:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8574:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8630:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8764:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8638:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8638:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8630:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8508:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8523:4:4",
														"type": ""
													}
												],
												"src": "8357:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8827:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8837:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8860:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8842:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8842:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8837:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8871:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8894:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8876:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8876:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8871:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8905:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8917:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8920:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8913:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8913:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8905:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8947:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8949:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8949:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8949:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8938:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8944:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8935:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8935:11:4"
															},
															"nodeType": "YulIf",
															"src": "8932:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8813:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8816:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8822:4:4",
														"type": ""
													}
												],
												"src": "8782:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9026:328:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9036:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9058:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9041:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9041:19:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9036:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9069:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9091:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9074:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9074:19:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9069:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9102:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9114:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9117:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9110:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9110:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9102:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9325:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9327:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9327:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9327:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nodeType": "YulIdentifier",
																								"src": "9251:1:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9254:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nodeType": "YulIdentifier",
																							"src": "9247:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9247:9:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9240:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9240:17:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nodeType": "YulIdentifier",
																						"src": "9263:4:4"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9269:1:4"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "9259:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9259:12:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9236:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9236:36:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9294:1:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9297:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "9290:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9290:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nodeType": "YulIdentifier",
																						"src": "9305:4:4"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9311:1:4"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "9301:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9301:12:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9286:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9286:28:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9220:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9220:104:4"
															},
															"nodeType": "YulIf",
															"src": "9217:130:4"
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9012:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9015:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9021:4:4",
														"type": ""
													}
												],
												"src": "8982:372:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9407:509:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9417:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9439:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9422:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9422:19:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9417:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9450:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9472:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9455:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9455:19:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9450:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9483:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9506:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9509:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9502:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "9487:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9520:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "9548:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9531:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9531:29:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9520:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9687:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9689:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9689:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9689:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9605:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9608:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9601:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9601:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9615:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:66:4",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9612:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9612:73:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9597:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9597:89:4"
															},
															"nodeType": "YulIf",
															"src": "9594:115:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9887:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9889:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9889:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9889:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9819:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9812:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9812:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9842:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9850:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9859:1:4"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nodeType": "YulIdentifier",
																							"src": "9845:4:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9845:16:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9839:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9839:23:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9792:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9792:84:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9772:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9772:114:4"
															},
															"nodeType": "YulIf",
															"src": "9769:140:4"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9390:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9393:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9399:7:4",
														"type": ""
													}
												],
												"src": "9360:556:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9965:332:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9975:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9997:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9980:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9980:19:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9975:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10008:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10030:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "10013:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10013:19:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10008:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10041:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10052:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10055:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10048:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10048:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10041:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10268:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10270:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10270:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10270:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10188:1:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10191:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nodeType": "YulIdentifier",
																							"src": "10184:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10184:9:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10177:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10177:17:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "sum",
																						"nodeType": "YulIdentifier",
																						"src": "10200:3:4"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10205:1:4"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "10196:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10196:11:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10173:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10173:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10230:1:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10233:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "10226:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10226:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "sum",
																								"nodeType": "YulIdentifier",
																								"src": "10248:3:4"
																							},
																							{
																								"name": "y",
																								"nodeType": "YulIdentifier",
																								"src": "10253:1:4"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nodeType": "YulIdentifier",
																							"src": "10244:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10244:11:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10237:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10237:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10222:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10222:35:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10157:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:110:4"
															},
															"nodeType": "YulIf",
															"src": "10154:136:4"
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9952:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9955:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9961:3:4",
														"type": ""
													}
												],
												"src": "9922:375:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10347:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10357:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10380:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10362:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10362:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10357:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10391:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10414:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10396:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10396:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10391:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10425:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10436:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10439:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10432:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10432:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10425:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10465:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10467:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10467:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10467:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10457:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10460:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10454:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10454:10:4"
															},
															"nodeType": "YulIf",
															"src": "10451:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10334:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10337:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10343:3:4",
														"type": ""
													}
												],
												"src": "10303:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10539:189:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10549:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10575:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "10558:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10558:23:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10549:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10671:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10673:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10673:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10673:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10596:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10603:66:4",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10593:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10593:77:4"
															},
															"nodeType": "YulIf",
															"src": "10590:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10702:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10713:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10716:5:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10709:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10709:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10702:3:4"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10525:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10535:3:4",
														"type": ""
													}
												],
												"src": "10500:228:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10840:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10862:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10870:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10858:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10858:14:4"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10874:3:4",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10851:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10851:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10851:27:4"
														}
													]
												},
												"name": "store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10832:6:4",
														"type": ""
													}
												],
												"src": "10734:151:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11037:219:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11047:73:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11113:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11118:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11054:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11054:66:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11047:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11218:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																	"nodeType": "YulIdentifier",
																	"src": "11129:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11129:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11129:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11231:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11242:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11247:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11238:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11238:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11231:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11025:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11033:3:4",
														"type": ""
													}
												],
												"src": "10891:365:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11433:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11443:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11455:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11466:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11451:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11451:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11443:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11490:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11501:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11486:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11486:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11509:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11515:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11505:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11505:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11479:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11479:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11479:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11535:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11669:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11543:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11543:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11535:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11413:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11428:4:4",
														"type": ""
													}
												],
												"src": "11262:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11721:142:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11731:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11754:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11736:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11731:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11765:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11788:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11770:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11770:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11765:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11812:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11814:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11814:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11814:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11809:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11802:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11802:9:4"
															},
															"nodeType": "YulIf",
															"src": "11799:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11843:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11852:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11855:1:4"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11848:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11848:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11843:1:4"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11710:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11713:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11719:1:4",
														"type": ""
													}
												],
												"src": "11687:176:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function abi_decode_tuple_t_uint160(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function abi_encode_t_int24_to_t_int24_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_int24(value))\n    }\n\n    function abi_encode_tuple_t_int24__to_t_int24__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int24_to_t_int24_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function abi_decode_tuple_t_int24(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_tuple_t_uint160__to_t_uint160__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint160_to_t_uint160_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"R\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 1)\n        store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        diff := sub(x, y)\n\n        // underflow, if y >= 0 and diff > x\n        // overflow, if y < 0 and diff < x\n        if or(\n            and(iszero(slt(y, 0)), sgt(diff, x)),\n            and(slt(y, 0), slt(diff, x))\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int256(product_raw)\n\n        // special case\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, sdiv(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        sum := add(x, y)\n\n        // overflow, if x >= 0 and sum < y\n        // underflow, if x < 0 and sum >= y\n        if or(\n            and(iszero(slt(x, 0)), slt(sum, y)),\n            and(slt(x, 0), iszero(slt(sum, y)))\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 1)\n        store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c80630a817037146100665780639400ff9a14610096578063aa52cba7146100c6578063b35e24d2146100f6578063b3e3005114610126575b600080fd5b610080600480360381019061007b9190610b92565b610156565b60405161008d9190610bdb565b60405180910390f35b6100b060048036038101906100ab9190610c2c565b610168565b6040516100bd9190610c68565b60405180910390f35b6100e060048036038101906100db9190610b92565b61017a565b6040516100ed9190610c68565b60405180910390f35b610110600480360381019061010b9190610caf565b6101df565b60405161011d9190610ceb565b60405180910390f35b610140600480360381019061013b9190610d3c565b6101f1565b60405161014d9190610ceb565b60405180910390f35b600061016182610226565b9050919050565b600061017382610625565b9050919050565b60008060026c010000000000000000000000008473ffffffffffffffffffffffffffffffffffffffff166101ae9190610dc7565b6101b89190610f38565b905060008173ffffffffffffffffffffffffffffffffffffffff1690508092505050919050565b60006101ea8261069f565b9050919050565b6000806c0100000000000000000000000061020b84610625565b6102159190610f83565b905060008190508092505050919050565b60006401000276a373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16101580156102a8575073fffd8963efd1fc6a506488495d951d5263988d2673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16105b6102e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102de90611022565b60405180910390fd5b600060208373ffffffffffffffffffffffffffffffffffffffff16901b9050600081905060006fffffffffffffffffffffffffffffffff821160071b808217915082811c92505067ffffffffffffffff821160061b808217915082811c92505063ffffffff821160051b808217915082811c92505061ffff821160041b808217915082811c92505060ff821160031b808217915082811c925050600f821160021b808217915082811c9250506003821160011b808217915082811c92505060018211808217915050608081106103ce57607f816103c49190611042565b83901c91506103e1565b80607f6103db9190611042565b83901b91505b600060406080836103f29190611076565b901b9050828302607f1c92508260801c80603f1b8217915083811c935050828302607f1c92508260801c80603e1b8217915083811c935050828302607f1c92508260801c80603d1b8217915083811c935050828302607f1c92508260801c80603c1b8217915083811c935050828302607f1c92508260801c80603b1b8217915083811c935050828302607f1c92508260801c80603a1b8217915083811c935050828302607f1c92508260801c8060391b8217915083811c935050828302607f1c92508260801c8060381b8217915083811c935050828302607f1c92508260801c8060371b8217915083811c935050828302607f1c92508260801c8060361b8217915083811c935050828302607f1c92508260801c8060351b8217915083811c935050828302607f1c92508260801c8060341b8217915083811c935050828302607f1c92508260801c8060331b8217915083811c935050828302607f1c92508260801c8060321b82179150506000693627a301d71055774c858261057591906110b9565b9050600060806f028f6481ab7f045a5af012a19d003aaa836105979190611076565b901d9050600060806fdb2df09e81959a81455e260799a0632f846105bb9190611131565b901d90508060020b8260020b14610615578873ffffffffffffffffffffffffffffffffffffffff166105ec8261069f565b73ffffffffffffffffffffffffffffffffffffffff16111561060e5781610610565b805b610617565b815b975050505050505050919050565b6000600382111561068c57819050600060016002846106449190610dc7565b61064e9190611175565b90505b8181101561068657809150600281828561066b9190610dc7565b6106759190611175565b61067f9190610dc7565b9050610651565b5061069a565b6000821461069957600190505b5b919050565b60008060008360020b126106b6578260020b6106c4565b8260020b6106c3906111a9565b5b9050620d89e881111561070c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107039061123d565b60405180910390fd5b600080600183160361072f57700100000000000000000000000000000000610741565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600060028316146107845760806ffff97272373d413259a46990580e213a8261077f9190610f83565b901c90505b600060048316146107b25760806ffff2e50f5f656932ef12357cf3c7fdcc826107ad9190610f83565b901c90505b600060088316146107e05760806fffe5caca7e10e4e61c3624eaa0941cd0826107db9190610f83565b901c90505b6000601083161461080e5760806fffcb9843d60f6159c9db58835c926644826108099190610f83565b901c90505b6000602083161461083c5760806fff973b41fa98c081472e6896dfb254c0826108379190610f83565b901c90505b6000604083161461086a5760806fff2ea16466c96a3843ec78b326b52861826108659190610f83565b901c90505b600060808316146108985760806ffe5dee046a99a2a811c461f1969c3053826108939190610f83565b901c90505b60006101008316146108c75760806ffcbe86c7900a88aedcffc83b479aa3a4826108c29190610f83565b901c90505b60006102008316146108f65760806ff987a7253ac413176f2b074cf7815e54826108f19190610f83565b901c90505b60006104008316146109255760806ff3392b0822b70005940c7a398e4b70f3826109209190610f83565b901c90505b60006108008316146109545760806fe7159475a2c29b7443b29c7fa6e889d98261094f9190610f83565b901c90505b60006110008316146109835760806fd097f3bdfd2022b8845ad8f792aa58258261097e9190610f83565b901c90505b60006120008316146109b25760806fa9f746462d870fdf8a65dc1f90e061e5826109ad9190610f83565b901c90505b60006140008316146109e15760806f70d869a156d2a1b890bb3df62baf32f7826109dc9190610f83565b901c90505b6000618000831614610a105760806f31be135f97d08fd981231505542fcfa682610a0b9190610f83565b901c90505b600062010000831614610a405760806f09aa508b5b7a84e1c677de54f3e99bc982610a3b9190610f83565b901c90505b600062020000831614610a6f5760806e5d6af8dedb81196699c329225ee60482610a6a9190610f83565b901c90505b600062040000831614610a9d5760806d2216e584f5fa1ea926041bedfe9882610a989190610f83565b901c90505b600062080000831614610ac95760806b048a170391f7dc42444e8fa282610ac49190610f83565b901c90505b60008460020b1315610b0457807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610b019190610dc7565b90505b600064010000000082610b17919061125d565b14610b23576001610b26565b60005b60ff16602082901c610b389190611175565b92505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610b6f81610b46565b8114610b7a57600080fd5b50565b600081359050610b8c81610b66565b92915050565b600060208284031215610ba857610ba7610b41565b5b6000610bb684828501610b7d565b91505092915050565b60008160020b9050919050565b610bd581610bbf565b82525050565b6000602082019050610bf06000830184610bcc565b92915050565b6000819050919050565b610c0981610bf6565b8114610c1457600080fd5b50565b600081359050610c2681610c00565b92915050565b600060208284031215610c4257610c41610b41565b5b6000610c5084828501610c17565b91505092915050565b610c6281610bf6565b82525050565b6000602082019050610c7d6000830184610c59565b92915050565b610c8c81610bbf565b8114610c9757600080fd5b50565b600081359050610ca981610c83565b92915050565b600060208284031215610cc557610cc4610b41565b5b6000610cd384828501610c9a565b91505092915050565b610ce581610b46565b82525050565b6000602082019050610d006000830184610cdc565b92915050565b6000819050919050565b610d1981610d06565b8114610d2457600080fd5b50565b600081359050610d3681610d10565b92915050565b600060208284031215610d5257610d51610b41565b5b6000610d6084828501610d27565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd282610bf6565b9150610ddd83610bf6565b925082610ded57610dec610d69565b5b828204905092915050565b60008160011c9050919050565b6000808291508390505b6001851115610e4f57808604811115610e2b57610e2a610d98565b5b6001851615610e3a5780820291505b8081029050610e4885610df8565b9450610e0f565b94509492505050565b600082610e685760019050610f24565b81610e765760009050610f24565b8160018114610e8c5760028114610e9657610ec5565b6001915050610f24565b60ff841115610ea857610ea7610d98565b5b8360020a915084821115610ebf57610ebe610d98565b5b50610f24565b5060208310610133831016604e8410600b8410161715610efa5782820a905083811115610ef557610ef4610d98565b5b610f24565b610f078484846001610e05565b92509050818404811115610f1e57610f1d610d98565b5b81810290505b9392505050565b600060ff82169050919050565b6000610f4382610bf6565b9150610f4e83610f2b565b9250610f7b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610e58565b905092915050565b6000610f8e82610bf6565b9150610f9983610bf6565b9250828202610fa781610bf6565b91508282048414831517610fbe57610fbd610d98565b5b5092915050565b600082825260208201905092915050565b7f5200000000000000000000000000000000000000000000000000000000000000600082015250565b600061100c600183610fc5565b915061101782610fd6565b602082019050919050565b6000602082019050818103600083015261103b81610fff565b9050919050565b600061104d82610bf6565b915061105883610bf6565b92508282039050818111156110705761106f610d98565b5b92915050565b600061108182610d06565b915061108c83610d06565b92508282039050818112600084121682821360008512151617156110b3576110b2610d98565b5b92915050565b60006110c482610d06565b91506110cf83610d06565b92508282026110dd81610d06565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561111557611114610d98565b5b828205841483151761112a57611129610d98565b5b5092915050565b600061113c82610d06565b915061114783610d06565b92508282019050828112156000831216838212600084121516171561116f5761116e610d98565b5b92915050565b600061118082610bf6565b915061118b83610bf6565b92508282019050808211156111a3576111a2610d98565b5b92915050565b60006111b482610d06565b91507f800000000000000000000000000000000000000000000000000000000000000082036111e6576111e5610d98565b5b816000039050919050565b7f5400000000000000000000000000000000000000000000000000000000000000600082015250565b6000611227600183610fc5565b9150611232826111f1565b602082019050919050565b600060208201905081810360008301526112568161121a565b9050919050565b600061126882610bf6565b915061127383610bf6565b92508261128357611282610d69565b5b82820690509291505056fea2646970667358221220d396a43a9d5c62dc516142a4f38aa1e2eec31e1cadcc8c76f06a28c1126c06de64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA817037 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x9400FF9A EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xAA52CBA7 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xB35E24D2 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xB3E30051 EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0xC2C JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x161 DUP3 PUSH2 0x226 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173 DUP3 PUSH2 0x625 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH13 0x1000000000000000000000000 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA DUP3 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH13 0x1000000000000000000000000 PUSH2 0x20B DUP5 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x1000276A3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x2A8 JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST PUSH2 0x2E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DE SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x7 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x6 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH4 0xFFFFFFFF DUP3 GT PUSH1 0x5 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH2 0xFFFF DUP3 GT PUSH1 0x4 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0xFF DUP3 GT PUSH1 0x3 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0xF DUP3 GT PUSH1 0x2 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0x3 DUP3 GT PUSH1 0x1 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0x1 DUP3 GT DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x80 DUP2 LT PUSH2 0x3CE JUMPI PUSH1 0x7F DUP2 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST DUP4 SWAP1 SHR SWAP2 POP PUSH2 0x3E1 JUMP JUMPDEST DUP1 PUSH1 0x7F PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST DUP4 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH1 0x80 DUP4 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST SWAP1 SHL SWAP1 POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3F SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3E SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3D SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3C SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3B SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3A SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x39 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x38 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x37 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x36 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x35 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x34 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x33 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x32 SHL DUP3 OR SWAP2 POP POP PUSH1 0x0 PUSH10 0x3627A301D71055774C85 DUP3 PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x80 PUSH16 0x28F6481AB7F045A5AF012A19D003AAA DUP4 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH1 0x80 PUSH16 0xDB2DF09E81959A81455E260799A0632F DUP5 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP1 SAR SWAP1 POP DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND EQ PUSH2 0x615 JUMPI DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5EC DUP3 PUSH2 0x69F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x60E JUMPI DUP2 PUSH2 0x610 JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x617 JUMP JUMPDEST DUP2 JUMPDEST SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x68C JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x644 SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x67F SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x651 JUMP JUMPDEST POP PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x699 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x6B6 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x6C4 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x6C3 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x703 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND SUB PUSH2 0x72F JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x741 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x784 JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x7B2 JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x7E0 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x80E JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x83C JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x86A JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 PUSH2 0x865 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x898 JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 PUSH2 0x893 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0x8C7 JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 PUSH2 0x8C2 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0x8F6 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0x925 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 PUSH2 0x920 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0x954 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 PUSH2 0x94F SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0x983 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 PUSH2 0x97E SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0x9B2 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0x9E1 JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0xA10 JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0xA40 JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0xA6F JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0xA9D JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 PUSH2 0xA98 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0xAC9 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0xB04 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0x125D JUMP JUMPDEST EQ PUSH2 0xB23 JUMPI PUSH1 0x1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6F DUP2 PUSH2 0xB46 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8C DUP2 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA8 JUMPI PUSH2 0xBA7 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB6 DUP5 DUP3 DUP6 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD5 DUP2 PUSH2 0xBBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC09 DUP2 PUSH2 0xBF6 JUMP JUMPDEST DUP2 EQ PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC26 DUP2 PUSH2 0xC00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC41 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC50 DUP5 DUP3 DUP6 ADD PUSH2 0xC17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xBF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC8C DUP2 PUSH2 0xBBF JUMP JUMPDEST DUP2 EQ PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCA9 DUP2 PUSH2 0xC83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC5 JUMPI PUSH2 0xCC4 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCD3 DUP5 DUP3 DUP6 ADD PUSH2 0xC9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE5 DUP2 PUSH2 0xB46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD00 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD19 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP2 EQ PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD36 DUP2 PUSH2 0xD10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH2 0xD51 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD60 DUP5 DUP3 DUP6 ADD PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDD2 DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDD DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0xD69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xE4F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xE2B JUMPI PUSH2 0xE2A PUSH2 0xD98 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xE3A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xE48 DUP6 PUSH2 0xDF8 JUMP JUMPDEST SWAP5 POP PUSH2 0xE0F JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE68 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xF24 JUMP JUMPDEST DUP2 PUSH2 0xE76 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF24 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE8C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE96 JUMPI PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF24 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xD98 JUMP JUMPDEST JUMPDEST POP PUSH2 0xF24 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xEFA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xEF5 JUMPI PUSH2 0xEF4 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST PUSH2 0xF24 JUMP JUMPDEST PUSH2 0xF07 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xD98 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4E DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP3 POP PUSH2 0xF7B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8E DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF99 DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xFA7 DUP2 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0xD98 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100C PUSH1 0x1 DUP4 PUSH2 0xFC5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP3 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103B DUP2 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104D DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1058 DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1070 JUMPI PUSH2 0x106F PUSH2 0xD98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1081 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x108C DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C4 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x10CF DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x10DD DUP2 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x112A JUMPI PUSH2 0x1129 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT AND DUP4 DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x116F JUMPI PUSH2 0x116E PUSH2 0xD98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x118B DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B4 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x11E6 JUMPI PUSH2 0x11E5 PUSH2 0xD98 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1227 PUSH1 0x1 DUP4 PUSH2 0xFC5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1232 DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1256 DUP2 PUSH2 0x121A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1268 DUP3 PUSH2 0xBF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1273 DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1283 JUMPI PUSH2 0x1282 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SWAP7 LOG4 GASPRICE SWAP14 0x5C PUSH3 0xDC5161 TIMESTAMP LOG4 RETURN DUP11 LOG1 0xE2 0xEE 0xC3 0x1E SHR 0xAD 0xCC DUP13 PUSH23 0xF06A28C1126C06DE64736F6C6343000812003300000000 ",
							"sourceMap": "137:958:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;721:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;989:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;161:268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;435:280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:129;785:5;809:34;837:5;809:27;:34::i;:::-;802:41;;721:129;;;:::o;989:104::-;1044:7;1070:16;1080:5;1070:9;:16::i;:::-;1063:23;;989:104;;;:::o;161:268::-;257:7;280:13;339:1;357:27:0;305:12:1;:31;;;;;;:::i;:::-;304:36;;;;:::i;:::-;280:61;;351:22;384:5;376:14;;351:39;;408:14;401:21;;;;161:268;;;:::o;856:127::-;917:7;943:33;971:4;943:27;:33::i;:::-;936:40;;856:127;;;:::o;435:280::-;499:7;518:20;357:27:0;549:25:1;567:5;549:9;:25::i;:::-;541:65;;;;:::i;:::-;518:88;;616:29;656:12;616:53;;687:21;680:28;;;;435:280;;;:::o;4412:4424:2:-;4485:10;830;4616:30;;:12;:30;;;;:63;;;;;1012:49;4650:29;;:12;:29;;;4616:63;4608:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4696:13;4737:2;4720:12;4712:21;;:27;;4696:43;;4752:9;4764:5;4752:17;;4780:11;4854:34;4851:1;4848:41;4845:1;4841:49;4919:1;4914:3;4911:10;4904:17;;4947:1;4944;4940:9;4935:14;;4817:143;5016:18;5013:1;5010:25;5007:1;5003:33;5065:1;5060:3;5057:10;5050:17;;5093:1;5090;5086:9;5081:14;;4979:127;5162:10;5159:1;5156:17;5153:1;5149:25;5203:1;5198:3;5195:10;5188:17;;5231:1;5228;5224:9;5219:14;;5125:119;5300:6;5297:1;5294:13;5291:1;5287:21;5337:1;5332:3;5329:10;5322:17;;5365:1;5362;5358:9;5353:14;;5263:115;5434:4;5431:1;5428:11;5425:1;5421:19;5469:1;5464:3;5461:10;5454:17;;5497:1;5494;5490:9;5485:14;;5397:113;5566:3;5563:1;5560:10;5557:1;5553:18;5600:1;5595:3;5592:10;5585:17;;5628:1;5625;5621:9;5616:14;;5529:112;5697:3;5694:1;5691:10;5688:1;5684:18;5731:1;5726:3;5723:10;5716:17;;5759:1;5756;5752:9;5747:14;;5660:112;5821:3;5818:1;5815:10;5854:1;5849:3;5846:10;5839:17;;5791:76;5890:3;5883;:10;5879:80;;5915:3;5909;:9;;;;:::i;:::-;5899:5;:20;;5895:24;;5879:80;;;5955:3;5949;:9;;;;:::i;:::-;5939:5;:20;;5935:24;;5879:80;5972:12;6010:2;6002:3;5995;5988:17;;;;:::i;:::-;5987:25;;5972:40;;6070:1;6067;6063:9;6058:3;6054:19;6049:24;;6105:1;6100:3;6096:11;6148:1;6144:2;6140:10;6133:5;6130:21;6121:30;;6177:1;6174;6170:9;6165:14;;6034:156;6245:1;6242;6238:9;6233:3;6229:19;6224:24;;6280:1;6275:3;6271:11;6323:1;6319:2;6315:10;6308:5;6305:21;6296:30;;6352:1;6349;6345:9;6340:14;;6209:156;6420:1;6417;6413:9;6408:3;6404:19;6399:24;;6455:1;6450:3;6446:11;6498:1;6494:2;6490:10;6483:5;6480:21;6471:30;;6527:1;6524;6520:9;6515:14;;6384:156;6595:1;6592;6588:9;6583:3;6579:19;6574:24;;6630:1;6625:3;6621:11;6673:1;6669:2;6665:10;6658:5;6655:21;6646:30;;6702:1;6699;6695:9;6690:14;;6559:156;6770:1;6767;6763:9;6758:3;6754:19;6749:24;;6805:1;6800:3;6796:11;6848:1;6844:2;6840:10;6833:5;6830:21;6821:30;;6877:1;6874;6870:9;6865:14;;6734:156;6945:1;6942;6938:9;6933:3;6929:19;6924:24;;6980:1;6975:3;6971:11;7023:1;7019:2;7015:10;7008:5;7005:21;6996:30;;7052:1;7049;7045:9;7040:14;;6909:156;7120:1;7117;7113:9;7108:3;7104:19;7099:24;;7155:1;7150:3;7146:11;7198:1;7194:2;7190:10;7183:5;7180:21;7171:30;;7227:1;7224;7220:9;7215:14;;7084:156;7295:1;7292;7288:9;7283:3;7279:19;7274:24;;7330:1;7325:3;7321:11;7373:1;7369:2;7365:10;7358:5;7355:21;7346:30;;7402:1;7399;7395:9;7390:14;;7259:156;7470:1;7467;7463:9;7458:3;7454:19;7449:24;;7505:1;7500:3;7496:11;7548:1;7544:2;7540:10;7533:5;7530:21;7521:30;;7577:1;7574;7570:9;7565:14;;7434:156;7645:1;7642;7638:9;7633:3;7629:19;7624:24;;7680:1;7675:3;7671:11;7723:1;7719:2;7715:10;7708:5;7705:21;7696:30;;7752:1;7749;7745:9;7740:14;;7609:156;7820:1;7817;7813:9;7808:3;7804:19;7799:24;;7855:1;7850:3;7846:11;7898:1;7894:2;7890:10;7883:5;7880:21;7871:30;;7927:1;7924;7920:9;7915:14;;7784:156;7995:1;7992;7988:9;7983:3;7979:19;7974:24;;8030:1;8025:3;8021:11;8073:1;8069:2;8065:10;8058:5;8055:21;8046:30;;8102:1;8099;8095:9;8090:14;;7959:156;8170:1;8167;8163:9;8158:3;8154:19;8149:24;;8205:1;8200:3;8196:11;8248:1;8244:2;8240:10;8233:5;8230:21;8221:30;;8277:1;8274;8270:9;8265:14;;8134:156;8345:1;8342;8338:9;8333:3;8329:19;8324:24;;8380:1;8375:3;8371:11;8423:1;8419:2;8415:10;8408:5;8405:21;8396:30;;8309:128;8449:20;8480:24;8472:5;:32;;;;:::i;:::-;8449:55;;8535:13;8616:3;8574:37;8558:13;:53;;;;:::i;:::-;8557:62;;8535:85;;8631:12;8713:3;8669:39;8653:13;:55;;;;:::i;:::-;8652:64;;8631:86;;8748:6;8737:17;;:7;:17;;;:91;;8797:12;8767:42;;:26;8786:6;8767:18;:26::i;:::-;:42;;;;:61;;8821:7;8767:61;;;8812:6;8767:61;8737:91;;;8757:7;8737:91;8730:98;;4497:4339;;;;;;;4412:4424;;;:::o;81:342:3:-;126:6;153:1;149;:5;145:232;;;175:1;171:5;;191:6;208:1;204;200;:5;;;;:::i;:::-;:9;;;;:::i;:::-;191:18;;224:92;235:1;231;:5;224:92;;;261:1;257:5;;299:1;294;290;286;:5;;;;:::i;:::-;:9;;;;:::i;:::-;285:15;;;;:::i;:::-;281:19;;224:92;;;156:171;145:232;;;342:1;337;:6;333:44;;364:1;360:5;;333:44;145:232;81:342;;;:::o;1377:2609:2:-;1440:20;1473:15;1498:1;1491:4;:8;;;:57;;1542:4;1535:12;;1491:57;;;1518:4;1511:12;;1510:13;;;:::i;:::-;1491:57;1473:75;;1586:6;1567:7;:26;;1559:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:13;1645:1;1638:3;1628:7;:13;:18;:93;;1686:35;1628:93;;;1649:34;1628:93;1612:109;;;;1753:1;1746:3;1736:7;:13;:18;1732:83;;1812:3;1773:34;1765:5;:42;;;;:::i;:::-;1764:51;;1756:59;;1732:83;1847:1;1840:3;1830:7;:13;:18;1826:83;;1906:3;1867:34;1859:5;:42;;;;:::i;:::-;1858:51;;1850:59;;1826:83;1941:1;1934:3;1924:7;:13;:18;1920:83;;2000:3;1961:34;1953:5;:42;;;;:::i;:::-;1952:51;;1944:59;;1920:83;2036:1;2028:4;2018:7;:14;:19;2014:84;;2095:3;2056:34;2048:5;:42;;;;:::i;:::-;2047:51;;2039:59;;2014:84;2131:1;2123:4;2113:7;:14;:19;2109:84;;2190:3;2151:34;2143:5;:42;;;;:::i;:::-;2142:51;;2134:59;;2109:84;2226:1;2218:4;2208:7;:14;:19;2204:84;;2285:3;2246:34;2238:5;:42;;;;:::i;:::-;2237:51;;2229:59;;2204:84;2321:1;2313:4;2303:7;:14;:19;2299:84;;2380:3;2341:34;2333:5;:42;;;;:::i;:::-;2332:51;;2324:59;;2299:84;2417:1;2408:5;2398:7;:15;:20;2394:85;;2476:3;2437:34;2429:5;:42;;;;:::i;:::-;2428:51;;2420:59;;2394:85;2513:1;2504:5;2494:7;:15;:20;2490:85;;2572:3;2533:34;2525:5;:42;;;;:::i;:::-;2524:51;;2516:59;;2490:85;2609:1;2600:5;2590:7;:15;:20;2586:85;;2668:3;2629:34;2621:5;:42;;;;:::i;:::-;2620:51;;2612:59;;2586:85;2705:1;2696:5;2686:7;:15;:20;2682:85;;2764:3;2725:34;2717:5;:42;;;;:::i;:::-;2716:51;;2708:59;;2682:85;2802:1;2792:6;2782:7;:16;:21;2778:86;;2861:3;2822:34;2814:5;:42;;;;:::i;:::-;2813:51;;2805:59;;2778:86;2899:1;2889:6;2879:7;:16;:21;2875:86;;2958:3;2919:34;2911:5;:42;;;;:::i;:::-;2910:51;;2902:59;;2875:86;2996:1;2986:6;2976:7;:16;:21;2972:86;;3055:3;3016:34;3008:5;:42;;;;:::i;:::-;3007:51;;2999:59;;2972:86;3093:1;3083:6;3073:7;:16;:21;3069:86;;3152:3;3113:34;3105:5;:42;;;;:::i;:::-;3104:51;;3096:59;;3069:86;3191:1;3180:7;3170;:17;:22;3166:86;;3249:3;3211:33;3203:5;:41;;;;:::i;:::-;3202:50;;3194:58;;3166:86;3288:1;3277:7;3267;:17;:22;3263:85;;3345:3;3308:32;3300:5;:40;;;;:::i;:::-;3299:49;;3291:57;;3263:85;3384:1;3373:7;3363;:17;:22;3359:83;;3439:3;3404:30;3396:5;:38;;;;:::i;:::-;3395:47;;3387:55;;3359:83;3478:1;3467:7;3457;:17;:22;3453:78;;3528:3;3498:25;3490:5;:33;;;;:::i;:::-;3489:42;;3481:50;;3453:78;3555:1;3548:4;:8;;;3544:47;;;3586:5;3566:17;:25;;;;:::i;:::-;3558:33;;3544:47;3967:1;3955:7;3946:5;:17;;;;:::i;:::-;:22;:30;;3975:1;3946:30;;;3971:1;3946:30;3929:48;;3939:2;3930:5;:11;;3929:48;;;;:::i;:::-;3906:72;;1462:2524;;1377:2609;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:122::-;539:24;557:5;539:24;:::i;:::-;532:5;529:35;519:63;;578:1;575;568:12;519:63;466:122;:::o;594:139::-;640:5;678:6;665:20;656:29;;694:33;721:5;694:33;:::i;:::-;594:139;;;;:::o;739:329::-;798:6;847:2;835:9;826:7;822:23;818:32;815:119;;;853:79;;:::i;:::-;815:119;973:1;998:53;1043:7;1034:6;1023:9;1019:22;998:53;:::i;:::-;988:63;;944:117;739:329;;;;:::o;1074:90::-;1109:7;1152:5;1149:1;1138:20;1127:31;;1074:90;;;:::o;1170:120::-;1261:22;1277:5;1261:22;:::i;:::-;1256:3;1249:35;1170:120;;:::o;1296:230::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:75;1516:1;1505:9;1501:17;1492:6;1444:75;:::i;:::-;1296:230;;;;:::o;1532:77::-;1569:7;1598:5;1587:16;;1532:77;;;:::o;1615:122::-;1688:24;1706:5;1688:24;:::i;:::-;1681:5;1678:35;1668:63;;1727:1;1724;1717:12;1668:63;1615:122;:::o;1743:139::-;1789:5;1827:6;1814:20;1805:29;;1843:33;1870:5;1843:33;:::i;:::-;1743:139;;;;:::o;1888:329::-;1947:6;1996:2;1984:9;1975:7;1971:23;1967:32;1964:119;;;2002:79;;:::i;:::-;1964:119;2122:1;2147:53;2192:7;2183:6;2172:9;2168:22;2147:53;:::i;:::-;2137:63;;2093:117;1888:329;;;;:::o;2223:126::-;2318:24;2336:5;2318:24;:::i;:::-;2313:3;2306:37;2223:126;;:::o;2355:238::-;2456:4;2494:2;2483:9;2479:18;2471:26;;2507:79;2583:1;2572:9;2568:17;2559:6;2507:79;:::i;:::-;2355:238;;;;:::o;2599:118::-;2670:22;2686:5;2670:22;:::i;:::-;2663:5;2660:33;2650:61;;2707:1;2704;2697:12;2650:61;2599:118;:::o;2723:135::-;2767:5;2805:6;2792:20;2783:29;;2821:31;2846:5;2821:31;:::i;:::-;2723:135;;;;:::o;2864:325::-;2921:6;2970:2;2958:9;2949:7;2945:23;2941:32;2938:119;;;2976:79;;:::i;:::-;2938:119;3096:1;3121:51;3164:7;3155:6;3144:9;3140:22;3121:51;:::i;:::-;3111:61;;3067:115;2864:325;;;;:::o;3195:126::-;3290:24;3308:5;3290:24;:::i;:::-;3285:3;3278:37;3195:126;;:::o;3327:238::-;3428:4;3466:2;3455:9;3451:18;3443:26;;3479:79;3555:1;3544:9;3540:17;3531:6;3479:79;:::i;:::-;3327:238;;;;:::o;3571:76::-;3607:7;3636:5;3625:16;;3571:76;;;:::o;3653:120::-;3725:23;3742:5;3725:23;:::i;:::-;3718:5;3715:34;3705:62;;3763:1;3760;3753:12;3705:62;3653:120;:::o;3779:137::-;3824:5;3862:6;3849:20;3840:29;;3878:32;3904:5;3878:32;:::i;:::-;3779:137;;;;:::o;3922:327::-;3980:6;4029:2;4017:9;4008:7;4004:23;4000:32;3997:119;;;4035:79;;:::i;:::-;3997:119;4155:1;4180:52;4224:7;4215:6;4204:9;4200:22;4180:52;:::i;:::-;4170:62;;4126:116;3922:327;;;;:::o;4255:180::-;4303:77;4300:1;4293:88;4400:4;4397:1;4390:15;4424:4;4421:1;4414:15;4441:180;4489:77;4486:1;4479:88;4586:4;4583:1;4576:15;4610:4;4607:1;4600:15;4627:185;4667:1;4684:20;4702:1;4684:20;:::i;:::-;4679:25;;4718:20;4736:1;4718:20;:::i;:::-;4713:25;;4757:1;4747:35;;4762:18;;:::i;:::-;4747:35;4804:1;4801;4797:9;4792:14;;4627:185;;;;:::o;4818:102::-;4860:8;4907:5;4904:1;4900:13;4879:34;;4818:102;;;:::o;4926:848::-;4987:5;4994:4;5018:6;5009:15;;5042:5;5033:14;;5056:712;5077:1;5067:8;5064:15;5056:712;;;5172:4;5167:3;5163:14;5157:4;5154:24;5151:50;;;5181:18;;:::i;:::-;5151:50;5231:1;5221:8;5217:16;5214:451;;;5646:4;5639:5;5635:16;5626:25;;5214:451;5696:4;5690;5686:15;5678:23;;5726:32;5749:8;5726:32;:::i;:::-;5714:44;;5056:712;;;4926:848;;;;;;;:::o;5780:1073::-;5834:5;6025:8;6015:40;;6046:1;6037:10;;6048:5;;6015:40;6074:4;6064:36;;6091:1;6082:10;;6093:5;;6064:36;6160:4;6208:1;6203:27;;;;6244:1;6239:191;;;;6153:277;;6203:27;6221:1;6212:10;;6223:5;;;6239:191;6284:3;6274:8;6271:17;6268:43;;;6291:18;;:::i;:::-;6268:43;6340:8;6337:1;6333:16;6324:25;;6375:3;6368:5;6365:14;6362:40;;;6382:18;;:::i;:::-;6362:40;6415:5;;;6153:277;;6539:2;6529:8;6526:16;6520:3;6514:4;6511:13;6507:36;6489:2;6479:8;6476:16;6471:2;6465:4;6462:12;6458:35;6442:111;6439:246;;;6595:8;6589:4;6585:19;6576:28;;6630:3;6623:5;6620:14;6617:40;;;6637:18;;:::i;:::-;6617:40;6670:5;;6439:246;6710:42;6748:3;6738:8;6732:4;6729:1;6710:42;:::i;:::-;6695:57;;;;6784:4;6779:3;6775:14;6768:5;6765:25;6762:51;;;6793:18;;:::i;:::-;6762:51;6842:4;6835:5;6831:16;6822:25;;5780:1073;;;;;;:::o;6859:86::-;6894:7;6934:4;6927:5;6923:16;6912:27;;6859:86;;;:::o;6951:281::-;7009:5;7033:23;7051:4;7033:23;:::i;:::-;7025:31;;7077:25;7093:8;7077:25;:::i;:::-;7065:37;;7121:104;7158:66;7148:8;7142:4;7121:104;:::i;:::-;7112:113;;6951:281;;;;:::o;7238:410::-;7278:7;7301:20;7319:1;7301:20;:::i;:::-;7296:25;;7335:20;7353:1;7335:20;:::i;:::-;7330:25;;7390:1;7387;7383:9;7412:30;7430:11;7412:30;:::i;:::-;7401:41;;7591:1;7582:7;7578:15;7575:1;7572:22;7552:1;7545:9;7525:83;7502:139;;7621:18;;:::i;:::-;7502:139;7286:362;7238:410;;;;:::o;7654:169::-;7738:11;7772:6;7767:3;7760:19;7812:4;7807:3;7803:14;7788:29;;7654:169;;;;:::o;7829:151::-;7969:3;7965:1;7957:6;7953:14;7946:27;7829:151;:::o;7986:365::-;8128:3;8149:66;8213:1;8208:3;8149:66;:::i;:::-;8142:73;;8224:93;8313:3;8224:93;:::i;:::-;8342:2;8337:3;8333:12;8326:19;;7986:365;;;:::o;8357:419::-;8523:4;8561:2;8550:9;8546:18;8538:26;;8610:9;8604:4;8600:20;8596:1;8585:9;8581:17;8574:47;8638:131;8764:4;8638:131;:::i;:::-;8630:139;;8357:419;;;:::o;8782:194::-;8822:4;8842:20;8860:1;8842:20;:::i;:::-;8837:25;;8876:20;8894:1;8876:20;:::i;:::-;8871:25;;8920:1;8917;8913:9;8905:17;;8944:1;8938:4;8935:11;8932:37;;;8949:18;;:::i;:::-;8932:37;8782:194;;;;:::o;8982:372::-;9021:4;9041:19;9058:1;9041:19;:::i;:::-;9036:24;;9074:19;9091:1;9074:19;:::i;:::-;9069:24;;9117:1;9114;9110:9;9102:17;;9311:1;9305:4;9301:12;9297:1;9294;9290:9;9286:28;9269:1;9263:4;9259:12;9254:1;9251;9247:9;9240:17;9236:36;9220:104;9217:130;;;9327:18;;:::i;:::-;9217:130;8982:372;;;;:::o;9360:556::-;9399:7;9422:19;9439:1;9422:19;:::i;:::-;9417:24;;9455:19;9472:1;9455:19;:::i;:::-;9450:24;;9509:1;9506;9502:9;9531:29;9548:11;9531:29;:::i;:::-;9520:40;;9618:66;9615:1;9612:73;9608:1;9605;9601:9;9597:89;9594:115;;;9689:18;;:::i;:::-;9594:115;9859:1;9850:7;9845:16;9842:1;9839:23;9819:1;9812:9;9792:84;9769:140;;9889:18;;:::i;:::-;9769:140;9407:509;9360:556;;;;:::o;9922:375::-;9961:3;9980:19;9997:1;9980:19;:::i;:::-;9975:24;;10013:19;10030:1;10013:19;:::i;:::-;10008:24;;10055:1;10052;10048:9;10041:16;;10253:1;10248:3;10244:11;10237:19;10233:1;10230;10226:9;10222:35;10205:1;10200:3;10196:11;10191:1;10188;10184:9;10177:17;10173:35;10157:110;10154:136;;;10270:18;;:::i;:::-;10154:136;9922:375;;;;:::o;10303:191::-;10343:3;10362:20;10380:1;10362:20;:::i;:::-;10357:25;;10396:20;10414:1;10396:20;:::i;:::-;10391:25;;10439:1;10436;10432:9;10425:16;;10460:3;10457:1;10454:10;10451:36;;;10467:18;;:::i;:::-;10451:36;10303:191;;;;:::o;10500:228::-;10535:3;10558:23;10575:5;10558:23;:::i;:::-;10549:32;;10603:66;10596:5;10593:77;10590:103;;10673:18;;:::i;:::-;10590:103;10716:5;10713:1;10709:13;10702:20;;10500:228;;;:::o;10734:151::-;10874:3;10870:1;10862:6;10858:14;10851:27;10734:151;:::o;10891:365::-;11033:3;11054:66;11118:1;11113:3;11054:66;:::i;:::-;11047:73;;11129:93;11218:3;11129:93;:::i;:::-;11247:2;11242:3;11238:12;11231:19;;10891:365;;;:::o;11262:419::-;11428:4;11466:2;11455:9;11451:18;11443:26;;11515:9;11509:4;11505:20;11501:1;11490:9;11486:17;11479:47;11543:131;11669:4;11543:131;:::i;:::-;11535:139;;11262:419;;;:::o;11687:176::-;11719:1;11736:20;11754:1;11736:20;:::i;:::-;11731:25;;11770:20;11788:1;11770:20;:::i;:::-;11765:25;;11809:1;11799:35;;11814:18;;:::i;:::-;11799:35;11855:1;11852;11848:9;11843:14;;11687:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "960800",
								"executionCost": "1026",
								"totalCost": "961826"
							},
							"external": {
								"priceToSqrtPriceX96(int256)": "infinite",
								"sqrtPrice(uint256)": "infinite",
								"sqrtPriceX96ToPrice(uint160)": "infinite",
								"sqrtPriceX96ToTick(uint160)": "infinite",
								"tickToSqrtPriceX96(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 137,
									"end": 1095,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d396a43a9d5c62dc516142a4f38aa1e2eec31e1cadcc8c76f06a28c1126c06de64736f6c63430008120033",
									".code": [
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "A817037"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "9400FF9A"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "AA52CBA7"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "B35E24D2"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "B3E30051"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 137,
											"end": 1095,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 721,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 721,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 721,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 989,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 989,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 989,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 161,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 161,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 161,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 856,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 856,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 856,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 435,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 435,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 435,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 721,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 785,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 837,
											"end": 842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 809,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 809,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 809,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1080,
											"end": 1085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1070,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1086,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1070,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 161,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 305,
											"end": 317,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 305,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 305,
											"end": 336,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 305,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 305,
											"end": 336,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 305,
											"end": 336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 305,
											"end": 336,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 305,
											"end": 336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 304,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 304,
											"end": 340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 304,
											"end": 340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 304,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 304,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 304,
											"end": 340,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 304,
											"end": 340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 280,
											"end": 341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 280,
											"end": 341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 376,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 376,
											"end": 390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 351,
											"end": 390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 856,
											"end": 983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 971,
											"end": 975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 943,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 943,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 943,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 943,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 435,
											"end": 715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 549,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 567,
											"end": 572,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 549,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 549,
											"end": 574,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 549,
											"end": 574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 541,
											"end": 606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 541,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 541,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 541,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 541,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 518,
											"end": 606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 680,
											"end": 708,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 680,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 680,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 680,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 8836,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4412,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4485,
											"end": 4495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 840,
											"name": "PUSH",
											"source": 2,
											"value": "1000276A3"
										},
										{
											"begin": 4616,
											"end": 4646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4616,
											"end": 4646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4616,
											"end": 4646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4646,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4646,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4679,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4616,
											"end": 4679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "FFFD8963EFD1FC6A506488495D951D5263988D26"
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4679,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4616,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4608,
											"end": 4685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4608,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4739,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4720,
											"end": 4732,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4739,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4752,
											"end": 4761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4752,
											"end": 4769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4752,
											"end": 4769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4889,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4846,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4914,
											"end": 4917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 4921,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4921,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4944,
											"end": 4945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 4949,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 4949,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 4949,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4817,
											"end": 4960,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5035,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5008,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5057,
											"end": 5067,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5095,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5095,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5172,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5156,
											"end": 5173,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5154,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5149,
											"end": 5174,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5205,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5232,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5233,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5125,
											"end": 5244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5306,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 5297,
											"end": 5298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5307,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5292,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5287,
											"end": 5308,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5337,
											"end": 5338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5332,
											"end": 5335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5339,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5322,
											"end": 5339,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5322,
											"end": 5339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5365,
											"end": 5366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5263,
											"end": 5378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5434,
											"end": 5438,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5431,
											"end": 5432,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5439,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5425,
											"end": 5426,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5421,
											"end": 5440,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5469,
											"end": 5470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5461,
											"end": 5471,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5494,
											"end": 5495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5499,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5499,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5569,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 5563,
											"end": 5564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5557,
											"end": 5558,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5595,
											"end": 5598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 5602,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5628,
											"end": 5629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5625,
											"end": 5626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5621,
											"end": 5630,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5691,
											"end": 5701,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5688,
											"end": 5689,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5732,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5726,
											"end": 5729,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5723,
											"end": 5733,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5761,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5761,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5821,
											"end": 5824,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5818,
											"end": 5819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5815,
											"end": 5825,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 5855,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5852,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5846,
											"end": 5856,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5839,
											"end": 5856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5839,
											"end": 5856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5890,
											"end": 5893,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5883,
											"end": 5886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5883,
											"end": 5893,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5879,
											"end": 5959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5918,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 5909,
											"end": 5912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5909,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5899,
											"end": 5904,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5899,
											"end": 5919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5899,
											"end": 5919,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5879,
											"end": 5959,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5959,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5879,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5949,
											"end": 5952,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5949,
											"end": 5958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5944,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5959,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5935,
											"end": 5959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5935,
											"end": 5959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5959,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5879,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6005,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5988,
											"end": 6005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5988,
											"end": 6005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6005,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5988,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6012,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5972,
											"end": 6012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5972,
											"end": 6012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6067,
											"end": 6068,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6063,
											"end": 6072,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6058,
											"end": 6061,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6096,
											"end": 6107,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6148,
											"end": 6149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6144,
											"end": 6146,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 6140,
											"end": 6150,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6133,
											"end": 6138,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6130,
											"end": 6151,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6177,
											"end": 6178,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6179,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6179,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6242,
											"end": 6243,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 6229,
											"end": 6248,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6275,
											"end": 6278,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6271,
											"end": 6282,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6319,
											"end": 6321,
											"name": "PUSH",
											"source": 2,
											"value": "3E"
										},
										{
											"begin": 6315,
											"end": 6325,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6305,
											"end": 6326,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6345,
											"end": 6354,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6354,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6209,
											"end": 6365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6421,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 6422,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6408,
											"end": 6411,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 6404,
											"end": 6423,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6399,
											"end": 6423,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6399,
											"end": 6423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6453,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6446,
											"end": 6457,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6498,
											"end": 6499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 2,
											"value": "3D"
										},
										{
											"begin": 6490,
											"end": 6500,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6483,
											"end": 6488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6480,
											"end": 6501,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6471,
											"end": 6501,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6471,
											"end": 6501,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6529,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6515,
											"end": 6529,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6515,
											"end": 6529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6384,
											"end": 6540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6595,
											"end": 6596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6588,
											"end": 6597,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 6579,
											"end": 6598,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6598,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6625,
											"end": 6628,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6621,
											"end": 6632,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6674,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6669,
											"end": 6671,
											"name": "PUSH",
											"source": 2,
											"value": "3C"
										},
										{
											"begin": 6665,
											"end": 6675,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6658,
											"end": 6663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6676,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6704,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6715,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6758,
											"end": 6761,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 6754,
											"end": 6773,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6773,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6796,
											"end": 6807,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6848,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6846,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 6840,
											"end": 6850,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6838,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6851,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6821,
											"end": 6851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6821,
											"end": 6851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6877,
											"end": 6878,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 6875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6865,
											"end": 6879,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6865,
											"end": 6879,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 6946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6933,
											"end": 6936,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 6929,
											"end": 6948,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6948,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6980,
											"end": 6981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6978,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6971,
											"end": 6982,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "3A"
										},
										{
											"begin": 7015,
											"end": 7025,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7008,
											"end": 7013,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7005,
											"end": 7026,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7026,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7052,
											"end": 7053,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7049,
											"end": 7050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7045,
											"end": 7054,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7040,
											"end": 7054,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7040,
											"end": 7054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6909,
											"end": 7065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7120,
											"end": 7121,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 7122,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7108,
											"end": 7111,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 7104,
											"end": 7123,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7099,
											"end": 7123,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7099,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7155,
											"end": 7156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7153,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7146,
											"end": 7157,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7198,
											"end": 7199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7196,
											"name": "PUSH",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7190,
											"end": 7200,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7180,
											"end": 7201,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7201,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7227,
											"end": 7228,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7224,
											"end": 7225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7220,
											"end": 7229,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7229,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7292,
											"end": 7293,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 7279,
											"end": 7298,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7325,
											"end": 7328,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7321,
											"end": 7332,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7358,
											"end": 7363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7376,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7403,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7399,
											"end": 7400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7404,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7259,
											"end": 7415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7471,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7463,
											"end": 7472,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7461,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 7454,
											"end": 7473,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7503,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7496,
											"end": 7507,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7546,
											"name": "PUSH",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7540,
											"end": 7550,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7533,
											"end": 7538,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7551,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7521,
											"end": 7551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7521,
											"end": 7551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7577,
											"end": 7578,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7570,
											"end": 7579,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7565,
											"end": 7579,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7565,
											"end": 7579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7434,
											"end": 7590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7642,
											"end": 7643,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7633,
											"end": 7636,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 7629,
											"end": 7648,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7648,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7675,
											"end": 7678,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7671,
											"end": 7682,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7724,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7719,
											"end": 7721,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7715,
											"end": 7725,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7713,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7705,
											"end": 7726,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7696,
											"end": 7726,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7696,
											"end": 7726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7752,
											"end": 7753,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7749,
											"end": 7750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7740,
											"end": 7754,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7740,
											"end": 7754,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7609,
											"end": 7765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7820,
											"end": 7821,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7813,
											"end": 7822,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7808,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7799,
											"end": 7823,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7799,
											"end": 7823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7846,
											"end": 7857,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7898,
											"end": 7899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7894,
											"end": 7896,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7890,
											"end": 7900,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7883,
											"end": 7888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7880,
											"end": 7901,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7871,
											"end": 7901,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7871,
											"end": 7901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7929,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7929,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7784,
											"end": 7940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 7996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7992,
											"end": 7993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7988,
											"end": 7997,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7983,
											"end": 7986,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 7979,
											"end": 7998,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7974,
											"end": 7998,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7974,
											"end": 7998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8030,
											"end": 8031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 8028,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8021,
											"end": 8032,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8069,
											"end": 8071,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 8065,
											"end": 8075,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8076,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8099,
											"end": 8100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8090,
											"end": 8104,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8090,
											"end": 8104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7959,
											"end": 8115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8167,
											"end": 8168,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8172,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8161,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 8154,
											"end": 8173,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8205,
											"end": 8206,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8203,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8196,
											"end": 8207,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8244,
											"end": 8246,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8240,
											"end": 8250,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8230,
											"end": 8251,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 8221,
											"end": 8251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8221,
											"end": 8251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8277,
											"end": 8278,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8270,
											"end": 8279,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8265,
											"end": 8279,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8265,
											"end": 8279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8134,
											"end": 8290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8342,
											"end": 8343,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8338,
											"end": 8347,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8333,
											"end": 8336,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 8329,
											"end": 8348,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8348,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8380,
											"end": 8381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8375,
											"end": 8378,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8371,
											"end": 8382,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8423,
											"end": 8424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8419,
											"end": 8421,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 8415,
											"end": 8425,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8408,
											"end": 8413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8405,
											"end": 8426,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8309,
											"end": 8437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8449,
											"end": 8469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8480,
											"end": 8504,
											"name": "PUSH",
											"source": 2,
											"value": "3627A301D71055774C85"
										},
										{
											"begin": 8472,
											"end": 8477,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8472,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8472,
											"end": 8504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8472,
											"end": 8504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8472,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 8472,
											"end": 8504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8472,
											"end": 8504,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8472,
											"end": 8504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8449,
											"end": 8504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8449,
											"end": 8504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8619,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8574,
											"end": 8611,
											"name": "PUSH",
											"source": 2,
											"value": "28F6481AB7F045A5AF012A19D003AAA"
										},
										{
											"begin": 8558,
											"end": 8571,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8558,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 8558,
											"end": 8611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8558,
											"end": 8611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8558,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 8558,
											"end": 8611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8558,
											"end": 8611,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 8558,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8557,
											"end": 8619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8557,
											"end": 8619,
											"name": "SAR",
											"source": 2
										},
										{
											"begin": 8535,
											"end": 8620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8535,
											"end": 8620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8631,
											"end": 8643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8669,
											"end": 8708,
											"name": "PUSH",
											"source": 2,
											"value": "DB2DF09E81959A81455E260799A0632F"
										},
										{
											"begin": 8653,
											"end": 8666,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8653,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 8653,
											"end": 8708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8653,
											"end": 8708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8653,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 8653,
											"end": 8708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8653,
											"end": 8708,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 8653,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8652,
											"end": 8716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8652,
											"end": 8716,
											"name": "SAR",
											"source": 2
										},
										{
											"begin": 8631,
											"end": 8717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8631,
											"end": 8717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8748,
											"end": 8754,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8744,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 8737,
											"end": 8828,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8797,
											"end": 8809,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8767,
											"end": 8809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 8786,
											"end": 8792,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 8767,
											"end": 8793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8793,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 8767,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8767,
											"end": 8809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8809,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8767,
											"end": 8828,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8767,
											"end": 8828,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8767,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8812,
											"end": 8818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8767,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8737,
											"end": 8828,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 8737,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8757,
											"end": 8764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8737,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8828,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4497,
											"end": 8836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4497,
											"end": 8836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4497,
											"end": 8836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4497,
											"end": 8836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4497,
											"end": 8836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4497,
											"end": 8836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4497,
											"end": 8836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 8836,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 8836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 8836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 8836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 81,
											"end": 423,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 81,
											"end": 423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 154,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 149,
											"end": 154,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 377,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 145,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 145,
											"end": 377,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 176,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 171,
											"end": 176,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 191,
											"end": 197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 205,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 201,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 200,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 200,
											"end": 205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 200,
											"end": 205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 200,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 200,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 200,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 200,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 200,
											"end": 209,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 200,
											"end": 209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 200,
											"end": 209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 200,
											"end": 209,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 200,
											"end": 209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 191,
											"end": 209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 191,
											"end": 209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 224,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 224,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 235,
											"end": 236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 236,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 224,
											"end": 316,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 224,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 261,
											"end": 262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 257,
											"end": 262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 299,
											"end": 300,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 290,
											"end": 291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 286,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 286,
											"end": 291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 286,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 286,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 286,
											"end": 291,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 286,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 286,
											"end": 295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 286,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 286,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 286,
											"end": 295,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 285,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 285,
											"end": 300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 285,
											"end": 300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 285,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 285,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 285,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 285,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 281,
											"end": 300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 224,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 224,
											"end": 316,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 224,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 156,
											"end": 327,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 145,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 145,
											"end": 377,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 145,
											"end": 377,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 145,
											"end": 377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 342,
											"end": 343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 337,
											"end": 343,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 333,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 333,
											"end": 377,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 364,
											"end": 365,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 360,
											"end": 365,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 360,
											"end": 365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 333,
											"end": 377,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 333,
											"end": 377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 377,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 145,
											"end": 377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 81,
											"end": 423,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 81,
											"end": 423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 81,
											"end": 423,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 81,
											"end": 423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1377,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1495,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1499,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1491,
											"end": 1499,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1499,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1491,
											"end": 1548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1546,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1547,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1535,
											"end": 1547,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1491,
											"end": 1548,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1548,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1491,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1510,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1548,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1491,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1592,
											"name": "PUSH",
											"source": 2,
											"value": "D89E8"
										},
										{
											"begin": 1567,
											"end": 1574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1593,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1593,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1559,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1559,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1641,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1628,
											"end": 1635,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1646,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1721,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1749,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1749,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1732,
											"end": 1815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1773,
											"end": 1807,
											"name": "PUSH",
											"source": 2,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1765,
											"end": 1770,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1765,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1732,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1830,
											"end": 1837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1826,
											"end": 1909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1867,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1859,
											"end": 1864,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1859,
											"end": 1901,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1859,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1901,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1859,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1909,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1909,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1826,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1937,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "PUSH",
											"source": 2,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1953,
											"end": 1995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1953,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1995,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1953,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 2003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 2003,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 2003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 2003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2003,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2018,
											"end": 2025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2018,
											"end": 2032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2018,
											"end": 2037,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2014,
											"end": 2098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2098,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2056,
											"end": 2090,
											"name": "PUSH",
											"source": 2,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2048,
											"end": 2053,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2048,
											"end": 2090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2048,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2090,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2048,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2098,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2014,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2132,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2109,
											"end": 2193,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2151,
											"end": 2185,
											"name": "PUSH",
											"source": 2,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2143,
											"end": 2185,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2143,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2185,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2143,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2193,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2193,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2109,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2208,
											"end": 2222,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2208,
											"end": 2227,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2204,
											"end": 2288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2288,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 2,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2238,
											"end": 2280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2238,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2280,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2238,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2288,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2204,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2317,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2322,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2299,
											"end": 2383,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2341,
											"end": 2375,
											"name": "PUSH",
											"source": 2,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2333,
											"end": 2375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2333,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2333,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2383,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2383,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2299,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2413,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2394,
											"end": 2479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2437,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2429,
											"end": 2471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2429,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2429,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2479,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2479,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2394,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2494,
											"end": 2501,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2514,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2490,
											"end": 2575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2575,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2533,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2525,
											"end": 2530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2525,
											"end": 2567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2525,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2567,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2525,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2575,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2575,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2490,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 2590,
											"end": 2597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2605,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2610,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2586,
											"end": 2671,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2671,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2629,
											"end": 2663,
											"name": "PUSH",
											"source": 2,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2621,
											"end": 2626,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2621,
											"end": 2663,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2621,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2663,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2621,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2671,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2671,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2586,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "800"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2682,
											"end": 2767,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2725,
											"end": 2759,
											"name": "PUSH",
											"source": 2,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2717,
											"end": 2759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2717,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2759,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2717,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2767,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2767,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2682,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "1000"
										},
										{
											"begin": 2782,
											"end": 2789,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2798,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2778,
											"end": 2864,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2861,
											"end": 2864,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2822,
											"end": 2856,
											"name": "PUSH",
											"source": 2,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2814,
											"end": 2819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2814,
											"end": 2856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2814,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2856,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2814,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2864,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2864,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2778,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "2000"
										},
										{
											"begin": 2879,
											"end": 2886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2895,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 2911,
											"end": 2916,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2911,
											"end": 2953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2911,
											"end": 2953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2953,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2911,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 2961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 2961,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2902,
											"end": 2961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2902,
											"end": 2961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2875,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 2997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "PUSH",
											"source": 2,
											"value": "4000"
										},
										{
											"begin": 2976,
											"end": 2983,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2976,
											"end": 2992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2976,
											"end": 2997,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2972,
											"end": 3058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3016,
											"end": 3050,
											"name": "PUSH",
											"source": 2,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 3008,
											"end": 3013,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3008,
											"end": 3050,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3008,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3050,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3008,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3058,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3058,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2972,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3089,
											"name": "PUSH",
											"source": 2,
											"value": "8000"
										},
										{
											"begin": 3073,
											"end": 3080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3094,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3069,
											"end": 3155,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3155,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3113,
											"end": 3147,
											"name": "PUSH",
											"source": 2,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3105,
											"end": 3110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3105,
											"end": 3147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3105,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3147,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3105,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3155,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3069,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 3170,
											"end": 3177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3192,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3166,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3166,
											"end": 3252,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3252,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3211,
											"end": 3244,
											"name": "PUSH",
											"source": 2,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3203,
											"end": 3244,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3203,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3244,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3203,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3252,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3166,
											"end": 3252,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3166,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "PUSH",
											"source": 2,
											"value": "20000"
										},
										{
											"begin": 3267,
											"end": 3274,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3284,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3289,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3263,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3263,
											"end": 3348,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3308,
											"end": 3340,
											"name": "PUSH",
											"source": 2,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3300,
											"end": 3305,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3300,
											"end": 3340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3300,
											"end": 3340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3300,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3348,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3263,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3263,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3380,
											"name": "PUSH",
											"source": 2,
											"value": "40000"
										},
										{
											"begin": 3363,
											"end": 3370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3359,
											"end": 3442,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3439,
											"end": 3442,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3404,
											"end": 3434,
											"name": "PUSH",
											"source": 2,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3396,
											"end": 3401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3396,
											"end": 3434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3396,
											"end": 3434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3434,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3396,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3442,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3442,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3359,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "80000"
										},
										{
											"begin": 3457,
											"end": 3464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3474,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3453,
											"end": 3531,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3498,
											"end": 3523,
											"name": "PUSH",
											"source": 2,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3490,
											"end": 3523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3490,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3523,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3490,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3531,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3453,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3556,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3548,
											"end": 3556,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3556,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3591,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3544,
											"end": 3591,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3566,
											"end": 3583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3566,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3566,
											"end": 3591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3566,
											"end": 3591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3566,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3566,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3566,
											"end": 3591,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3566,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3591,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3544,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 3968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3962,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 3946,
											"end": 3951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3946,
											"end": 3963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3946,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3963,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3946,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3968,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3946,
											"end": 3976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 3976,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3946,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3946,
											"end": 3976,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3976,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3946,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3971,
											"end": 3972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3976,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3946,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 3977,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3929,
											"end": 3977,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3929,
											"end": 3977,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 3977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3929,
											"end": 3977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 3977,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3929,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3906,
											"end": 3978,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3906,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 588,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 466,
											"end": 588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 539,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 539,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 539,
											"end": 563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 563,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 539,
											"end": 563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 532,
											"end": 537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 529,
											"end": 564,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 519,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 519,
											"end": 582,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 576,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 568,
											"end": 580,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 519,
											"end": 582,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 519,
											"end": 582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 594,
											"end": 733,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 594,
											"end": 733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 640,
											"end": 645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 665,
											"end": 685,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 656,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 694,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 721,
											"end": 726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 694,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 694,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 694,
											"end": 727,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 694,
											"end": 727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 594,
											"end": 733,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 594,
											"end": 733,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 594,
											"end": 733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 594,
											"end": 733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 594,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 739,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 798,
											"end": 804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 826,
											"end": 833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 822,
											"end": 845,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 818,
											"end": 850,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 815,
											"end": 934,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 815,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 815,
											"end": 934,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 853,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 853,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 853,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 853,
											"end": 932,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 853,
											"end": 932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 815,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 815,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 998,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1051,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 998,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1061,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1068,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1164,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1074,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1138,
											"end": 1158,
											"name": "SIGNEXTEND",
											"source": 4
										},
										{
											"begin": 1127,
											"end": 1158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1127,
											"end": 1158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1290,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1170,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1261,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1283,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1261,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1259,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1284,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1296,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1516,
											"end": 1517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1514,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1444,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1519,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1444,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1526,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1609,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1532,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1737,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1615,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1713,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1668,
											"end": 1731,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1729,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1668,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1882,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1743,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1834,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1882,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2217,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1888,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 1998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1982,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1994,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1999,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 2083,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1964,
											"end": 2083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2002,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2002,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2081,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2002,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 2083,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1964,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2192,
											"end": 2199,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2190,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2147,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2200,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2147,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2200,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2217,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2217,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2349,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2223,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2318,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2342,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2318,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2316,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2593,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2355,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2479,
											"end": 2497,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2568,
											"end": 2585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2507,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 2586,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2507,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2593,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2593,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2717,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2599,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2686,
											"end": 2691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2670,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2693,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2650,
											"end": 2711,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 2709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2711,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2650,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2858,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2723,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2812,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2846,
											"end": 2851,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2821,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2852,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2821,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2858,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2858,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 3189,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2864,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 2967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 2968,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2973,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3057,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2938,
											"end": 3057,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2976,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2976,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 3055,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2976,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3057,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2938,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3164,
											"end": 3171,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3121,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3172,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3121,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3172,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 3189,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 3189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 3189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3195,
											"end": 3321,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3195,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3308,
											"end": 3313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3290,
											"end": 3314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3314,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3290,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3278,
											"end": 3315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3195,
											"end": 3321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3195,
											"end": 3321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3195,
											"end": 3321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3327,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3327,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3428,
											"end": 3432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 3555,
											"end": 3556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3479,
											"end": 3558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3558,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 3479,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3327,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3327,
											"end": 3565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3327,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3327,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3327,
											"end": 3565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3607,
											"end": 3614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3641,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3773,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3653,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3742,
											"end": 3747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3725,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3725,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3749,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3705,
											"end": 3767,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3761,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3767,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3705,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3779,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3779,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3849,
											"end": 3869,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3878,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3779,
											"end": 3916,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3779,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3779,
											"end": 3916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3779,
											"end": 3916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3779,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 4249,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3922,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3980,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4031,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4017,
											"end": 4026,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4027,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4032,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4035,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4035,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4114,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4035,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4224,
											"end": 4231,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4180,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4180,
											"end": 4232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4180,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4180,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4126,
											"end": 4242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 4249,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 4249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 4249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 4249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 4249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4435,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4255,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4380,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4400,
											"end": 4404,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4397,
											"end": 4398,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4390,
											"end": 4405,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4421,
											"end": 4422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4429,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4441,
											"end": 4621,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4441,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4486,
											"end": 4487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4583,
											"end": 4584,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4614,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4607,
											"end": 4608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4615,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4812,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4627,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4667,
											"end": 4668,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4684,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4702,
											"end": 4703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4684,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4684,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4684,
											"end": 4704,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4684,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4718,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4738,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 4718,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4738,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4738,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4747,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 4747,
											"end": 4782,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4762,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4747,
											"end": 4782,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 4747,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 4806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 4806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4812,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4818,
											"end": 4920,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4818,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4904,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4900,
											"end": 4913,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4913,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4818,
											"end": 4920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4818,
											"end": 4920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4818,
											"end": 4920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4818,
											"end": 4920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 5774,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4926,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4987,
											"end": 4992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 4998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5033,
											"end": 5047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5033,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5768,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5056,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5078,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5067,
											"end": 5075,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5079,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5056,
											"end": 5768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5167,
											"end": 5170,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5177,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5157,
											"end": 5161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5154,
											"end": 5178,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5151,
											"end": 5201,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5151,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5151,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5181,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5151,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5151,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5231,
											"end": 5232,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5221,
											"end": 5229,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5233,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5214,
											"end": 5665,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5635,
											"end": 5651,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5665,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5214,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5696,
											"end": 5700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5686,
											"end": 5701,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 5749,
											"end": 5757,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5726,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5758,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 5726,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5758,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5056,
											"end": 5768,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5768,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5056,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 5774,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 5774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 5774,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 5774,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 5774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 5774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 5774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 5774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6853,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5780,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 6015,
											"end": 6055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6047,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6037,
											"end": 6047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6037,
											"end": 6047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6055,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 6015,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6064,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 6064,
											"end": 6100,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6082,
											"end": 6092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 6093,
											"end": 6098,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6064,
											"end": 6100,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 6064,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6160,
											"end": 6164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6203,
											"end": 6230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6203,
											"end": 6230,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6203,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 6203,
											"end": 6230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6239,
											"end": 6430,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6430,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 6239,
											"end": 6430,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 6153,
											"end": 6430,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6203,
											"end": 6230,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 6203,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6212,
											"end": 6222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6212,
											"end": 6222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6223,
											"end": 6228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6223,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 6223,
											"end": 6228,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6430,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 6239,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6287,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6274,
											"end": 6282,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6288,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6268,
											"end": 6311,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6268,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 6268,
											"end": 6311,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6291,
											"end": 6309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6268,
											"end": 6311,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 6268,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6348,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6333,
											"end": 6349,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6349,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6375,
											"end": 6378,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6373,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6379,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6402,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 6362,
											"end": 6402,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6382,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6402,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 6362,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6430,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 6153,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6539,
											"end": 6541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6529,
											"end": 6537,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6542,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6523,
											"name": "PUSH",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6514,
											"end": 6518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6511,
											"end": 6524,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6507,
											"end": 6543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6489,
											"end": 6491,
											"name": "PUSH",
											"source": 4,
											"value": "4E"
										},
										{
											"begin": 6479,
											"end": 6487,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6492,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6471,
											"end": 6473,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 6465,
											"end": 6469,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6462,
											"end": 6474,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6458,
											"end": 6493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6553,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 6439,
											"end": 6685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6595,
											"end": 6603,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6576,
											"end": 6604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6576,
											"end": 6604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 6633,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6623,
											"end": 6628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6634,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6637,
											"end": 6655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6670,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 6670,
											"end": 6675,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6685,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 6439,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6710,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6738,
											"end": 6746,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6732,
											"end": 6736,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6730,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6710,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 6710,
											"end": 6752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6710,
											"end": 6752,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 6710,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6782,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6775,
											"end": 6789,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6768,
											"end": 6773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6790,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6762,
											"end": 6813,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6762,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 6762,
											"end": 6813,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6793,
											"end": 6811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6762,
											"end": 6813,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 6762,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6842,
											"end": 6846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6847,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6853,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 5780,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6853,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6853,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6945,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6859,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6894,
											"end": 6901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6927,
											"end": 6932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6923,
											"end": 6939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6912,
											"end": 6939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6912,
											"end": 6939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7232,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6951,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7009,
											"end": 7014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7033,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 7051,
											"end": 7055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7033,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 7033,
											"end": 7056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7033,
											"end": 7056,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 7033,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7056,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7077,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7093,
											"end": 7101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7077,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7077,
											"end": 7102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7077,
											"end": 7102,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7077,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7065,
											"end": 7102,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7065,
											"end": 7102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7121,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 7158,
											"end": 7224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7148,
											"end": 7156,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7146,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7121,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7121,
											"end": 7225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7121,
											"end": 7225,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 7121,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7112,
											"end": 7225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7112,
											"end": 7225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7648,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 7238,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7278,
											"end": 7285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7319,
											"end": 7320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 7301,
											"end": 7321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7321,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7301,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7296,
											"end": 7321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7296,
											"end": 7321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7335,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 7353,
											"end": 7354,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7335,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 7335,
											"end": 7355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7335,
											"end": 7355,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 7335,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7355,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7390,
											"end": 7391,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 7388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7383,
											"end": 7392,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7412,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7430,
											"end": 7441,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7412,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 7412,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7412,
											"end": 7442,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7412,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7401,
											"end": 7442,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7401,
											"end": 7442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7589,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7578,
											"end": 7593,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7575,
											"end": 7576,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7594,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7553,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7554,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7608,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7502,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 7502,
											"end": 7641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7621,
											"end": 7639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7502,
											"end": 7641,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 7502,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7286,
											"end": 7648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7648,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7823,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7654,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 7749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7767,
											"end": 7770,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7812,
											"end": 7816,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 7810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7803,
											"end": 7817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7823,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7823,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7829,
											"end": 7980,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7829,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7969,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "5200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7965,
											"end": 7966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7963,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7953,
											"end": 7967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7829,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7829,
											"end": 7980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8351,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7986,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8131,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 8213,
											"end": 8214,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8208,
											"end": 8211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 8149,
											"end": 8215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8215,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 8149,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8142,
											"end": 8215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8142,
											"end": 8215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8224,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 8313,
											"end": 8316,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8224,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 8224,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8224,
											"end": 8317,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 8224,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8342,
											"end": 8344,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8337,
											"end": 8340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8333,
											"end": 8345,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8326,
											"end": 8345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8326,
											"end": 8345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8357,
											"end": 8776,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 8357,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8523,
											"end": 8527,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8563,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8550,
											"end": 8559,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8564,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8538,
											"end": 8564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8538,
											"end": 8564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8610,
											"end": 8619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8604,
											"end": 8608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8596,
											"end": 8597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8594,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8581,
											"end": 8598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8574,
											"end": 8621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 8764,
											"end": 8768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 8638,
											"end": 8769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8769,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 8638,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8357,
											"end": 8776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8357,
											"end": 8776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8357,
											"end": 8776,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8357,
											"end": 8776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8782,
											"end": 8976,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 8782,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8822,
											"end": 8826,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 8860,
											"end": 8861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 8842,
											"end": 8862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8862,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 8842,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8894,
											"end": 8895,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 8876,
											"end": 8896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8896,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8876,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8896,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 8921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8917,
											"end": 8918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8922,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8905,
											"end": 8922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8905,
											"end": 8922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8944,
											"end": 8945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 8942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8935,
											"end": 8946,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8949,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 8949,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8949,
											"end": 8967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8949,
											"end": 8967,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 8949,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8782,
											"end": 8976,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8782,
											"end": 8976,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8782,
											"end": 8976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8782,
											"end": 8976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8782,
											"end": 8976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9354,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 8982,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9021,
											"end": 9025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9058,
											"end": 9059,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9041,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9041,
											"end": 9060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9041,
											"end": 9060,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9041,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9036,
											"end": 9060,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9036,
											"end": 9060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9074,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 9091,
											"end": 9092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9074,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9074,
											"end": 9093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9074,
											"end": 9093,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 9074,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9093,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9117,
											"end": 9118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9115,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9119,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9102,
											"end": 9119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9102,
											"end": 9119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9311,
											"end": 9312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9301,
											"end": 9313,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9299,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9269,
											"end": 9270,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9263,
											"end": 9267,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9259,
											"end": 9271,
											"name": "SGT",
											"source": 4
										},
										{
											"begin": 9254,
											"end": 9255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9251,
											"end": 9252,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9256,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9257,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9236,
											"end": 9272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9220,
											"end": 9324,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9217,
											"end": 9347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9217,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9217,
											"end": 9347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9327,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 9327,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9327,
											"end": 9345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9327,
											"end": 9345,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 9327,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9217,
											"end": 9347,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9217,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9354,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9354,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9360,
											"end": 9916,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 9360,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9399,
											"end": 9406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9422,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 9439,
											"end": 9440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9422,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9422,
											"end": 9441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9422,
											"end": 9441,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 9422,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9455,
											"end": 9474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9450,
											"end": 9474,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9450,
											"end": 9474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9509,
											"end": 9510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9506,
											"end": 9507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9502,
											"end": 9511,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 9548,
											"end": 9559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9531,
											"end": 9560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9520,
											"end": 9560,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9520,
											"end": 9560,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9618,
											"end": 9684,
											"name": "PUSH",
											"source": 4,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9615,
											"end": 9616,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9612,
											"end": 9685,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9608,
											"end": 9609,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9606,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9601,
											"end": 9610,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9594,
											"end": 9709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9594,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 9594,
											"end": 9709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9689,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9689,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9689,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9689,
											"end": 9707,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9689,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9594,
											"end": 9709,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 9594,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 9857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9845,
											"end": 9861,
											"name": "SDIV",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9843,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9839,
											"end": 9862,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9819,
											"end": 9820,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9821,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9792,
											"end": 9876,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9769,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 9769,
											"end": 9909,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9889,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 9889,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9889,
											"end": 9907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9889,
											"end": 9907,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 9889,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9769,
											"end": 9909,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 9769,
											"end": 9909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9407,
											"end": 9916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9360,
											"end": 9916,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9360,
											"end": 9916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9360,
											"end": 9916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9360,
											"end": 9916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9360,
											"end": 9916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9922,
											"end": 10297,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 9922,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9961,
											"end": 9964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9980,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 9997,
											"end": 9998,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9980,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9980,
											"end": 9999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9980,
											"end": 9999,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 9980,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9975,
											"end": 9999,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9975,
											"end": 9999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10013,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10030,
											"end": 10031,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10013,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 10013,
											"end": 10032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10013,
											"end": 10032,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10013,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10032,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10056,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10052,
											"end": 10053,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10048,
											"end": 10057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10041,
											"end": 10057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10041,
											"end": 10057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10248,
											"end": 10251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10244,
											"end": 10255,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10256,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10233,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10226,
											"end": 10235,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 10222,
											"end": 10257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10205,
											"end": 10206,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10196,
											"end": 10207,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10188,
											"end": 10189,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10193,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10173,
											"end": 10208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10157,
											"end": 10267,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10154,
											"end": 10290,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10154,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10154,
											"end": 10290,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10270,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 10270,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 10270,
											"end": 10288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10270,
											"end": 10288,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 10270,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10154,
											"end": 10290,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10154,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9922,
											"end": 10297,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9922,
											"end": 10297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9922,
											"end": 10297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9922,
											"end": 10297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9922,
											"end": 10297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10343,
											"end": 10346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 10380,
											"end": 10381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 10362,
											"end": 10382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 10414,
											"end": 10415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 10396,
											"end": 10416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10416,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 10396,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10391,
											"end": 10416,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10391,
											"end": 10416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10439,
											"end": 10440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10432,
											"end": 10441,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10460,
											"end": 10463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 10464,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 10467,
											"end": 10485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10728,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 10500,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10535,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10558,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 10575,
											"end": 10580,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 10558,
											"end": 10581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10581,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 10558,
											"end": 10581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10549,
											"end": 10581,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10549,
											"end": 10581,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10603,
											"end": 10669,
											"name": "PUSH",
											"source": 4,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10596,
											"end": 10601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10670,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 10590,
											"end": 10693,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 10673,
											"end": 10691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10693,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 10590,
											"end": 10693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10713,
											"end": 10714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10709,
											"end": 10722,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10702,
											"end": 10722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10702,
											"end": 10722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10728,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10734,
											"end": 10885,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 10734,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10874,
											"end": 10877,
											"name": "PUSH",
											"source": 4,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10870,
											"end": 10871,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 10868,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 10872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10851,
											"end": 10878,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10734,
											"end": 10885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10734,
											"end": 10885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 11256,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 10891,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11033,
											"end": 11036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11054,
											"end": 11120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 11118,
											"end": 11119,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11113,
											"end": 11116,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 11054,
											"end": 11120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11120,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 11054,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11047,
											"end": 11120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11047,
											"end": 11120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 11218,
											"end": 11221,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 11129,
											"end": 11222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11222,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 11129,
											"end": 11222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11247,
											"end": 11249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11242,
											"end": 11245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11238,
											"end": 11250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 11256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 11256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 11256,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 11256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11262,
											"end": 11681,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 11262,
											"end": 11681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11466,
											"end": 11468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11455,
											"end": 11464,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11451,
											"end": 11469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11443,
											"end": 11469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11443,
											"end": 11469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11515,
											"end": 11524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11509,
											"end": 11513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11505,
											"end": 11525,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11501,
											"end": 11502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11490,
											"end": 11499,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11479,
											"end": 11526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11543,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 11669,
											"end": 11673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11543,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 11543,
											"end": 11674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11543,
											"end": 11674,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 11543,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11535,
											"end": 11674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11535,
											"end": 11674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11262,
											"end": 11681,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11262,
											"end": 11681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11262,
											"end": 11681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11262,
											"end": 11681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11687,
											"end": 11863,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 11687,
											"end": 11863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11736,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 11754,
											"end": 11755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11736,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 11736,
											"end": 11756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11736,
											"end": 11756,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 11736,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11731,
											"end": 11756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11731,
											"end": 11756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11770,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 11788,
											"end": 11789,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11770,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 11770,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11770,
											"end": 11790,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 11770,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11790,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11809,
											"end": 11810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11799,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 11799,
											"end": 11834,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 11814,
											"end": 11832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11799,
											"end": 11834,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 11799,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11855,
											"end": 11856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11852,
											"end": 11853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11848,
											"end": 11857,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 11843,
											"end": 11857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11843,
											"end": 11857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11687,
											"end": 11863,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11687,
											"end": 11863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11687,
											"end": 11863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11687,
											"end": 11863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11687,
											"end": 11863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"LmPool Ver3.0/Libraries/FixedPoint96.sol",
								"LmPool Ver3.0/Libraries/PriceMath.sol",
								"LmPool Ver3.0/Libraries/TickMath.sol",
								"LmPool Ver3.0/Libraries/sqrtMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"priceToSqrtPriceX96(int256)": "b3e30051",
							"sqrtPrice(uint256)": "9400ff9a",
							"sqrtPriceX96ToPrice(uint160)": "aa52cba7",
							"sqrtPriceX96ToTick(uint160)": "0a817037",
							"tickToSqrtPriceX96(int24)": "b35e24d2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"name\":\"priceToSqrtPriceX96\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"sqrtPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"sqrtPriceX96ToPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"}],\"name\":\"sqrtPriceX96ToTick\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"tickToSqrtPriceX96\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LmPool Ver3.0/Libraries/PriceMath.sol\":\"PriceMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LmPool Ver3.0/Libraries/FixedPoint96.sol\":{\"keccak256\":\"0xb677c7af76c11c1704a190cf481c7d3a2af14a4b4db7547d0f03dff690ee4e1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e8bad520b080ec871ff19a4a5e3c3a49f3e3a33246053a19fbad50c112232f19\",\"dweb:/ipfs/QmZ7G5wybxuewsi5RCRYTWXmDg76X7agHGrPWEPLohr4vm\"]},\"LmPool Ver3.0/Libraries/PriceMath.sol\":{\"keccak256\":\"0x16a391598172cc2370a6a8d3c96e18e7b8fdb043c42114b5d106956a28421d71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e18d48d645e24cb9ae9a5dca4af59e10af3d3d9bdd7f5f287a6d979e92119f8\",\"dweb:/ipfs/QmXWHQxctij4iaCNgo5YzxZJqxmyK2RZqpJVJFLc2PMDx6\"]},\"LmPool Ver3.0/Libraries/TickMath.sol\":{\"keccak256\":\"0x35c71df48f60464009f410e4a7575e5035677af5aa54fc9f8d9555623afd5837\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c2afb758e5e444f0e8206f9cfcb9403db6b77b1e31437b07a24a1b5a36163b5f\",\"dweb:/ipfs/QmV3CepuGNEecSF78af5ggFrvDat8ZZjS3Psh17ujHW61n\"]},\"LmPool Ver3.0/Libraries/sqrtMath.sol\":{\"keccak256\":\"0xb26e5529b1eb5aa34f0205451f0feeb35285ddd373f5bb292cc93c46c557d257\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f36bd8152e0af318863bebd84d7b9cb3d09ffb29496dda80786b455320d063f\",\"dweb:/ipfs/QmeKhLaUwpPcudBQnUYaCCDEcdPZSuYJRYNzcawNdz2oUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"LmPool Ver3.0/Libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LmPool Ver3.0/Libraries/TickMath.sol\":312:8839  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"LmPool Ver3.0/Libraries/TickMath.sol\":312:8839  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e7e47f8770b465ee91668815a14e43b6ce3cd2cf19ded178997e364242485acd64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7e47f8770b465ee91668815a14e43b6ce3cd2cf19ded178997e364242485acd64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xE4 PUSH32 0x8770B465EE91668815A14E43B6CE3CD2CF19DED178997E364242485ACD64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "312:8527:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7e47f8770b465ee91668815a14e43b6ce3cd2cf19ded178997e364242485acd64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xE4 PUSH32 0x8770B465EE91668815A14E43B6CE3CD2CF19DED178997E364242485ACD64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "312:8527:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 312,
									"end": 8839,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7e47f8770b465ee91668815a14e43b6ce3cd2cf19ded178997e364242485acd64736f6c63430008120033",
									".code": [
										{
											"begin": 312,
											"end": 8839,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 312,
											"end": 8839,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 312,
											"end": 8839,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 312,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 312,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 8839,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 312,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 8839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 8839,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"LmPool Ver3.0/Libraries/FixedPoint96.sol",
								"LmPool Ver3.0/Libraries/PriceMath.sol",
								"LmPool Ver3.0/Libraries/TickMath.sol",
								"LmPool Ver3.0/Libraries/sqrtMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"LmPool Ver3.0/Libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LmPool Ver3.0/Libraries/TickMath.sol\":{\"keccak256\":\"0x35c71df48f60464009f410e4a7575e5035677af5aa54fc9f8d9555623afd5837\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c2afb758e5e444f0e8206f9cfcb9403db6b77b1e31437b07a24a1b5a36163b5f\",\"dweb:/ipfs/QmV3CepuGNEecSF78af5ggFrvDat8ZZjS3Psh17ujHW61n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"LmPool Ver3.0/Libraries/sqrtMath.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":61:426  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"LmPool Ver3.0/Libraries/sqrtMath.sol\":61:426  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009bc3784c5d4266402a2ad533b8359de3dd7aa754686cb2f460cd768479a55a864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009bc3784c5d4266402a2ad533b8359de3dd7aa754686cb2f460cd768479a55a864736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xBC CALLDATACOPY DUP5 0xC5 0xD4 0x26 PUSH5 0x2A2AD533B DUP4 MSIZE 0xDE RETURNDATASIZE 0xD7 0xAA PUSH22 0x4686CB2F460CD768479A55A864736F6C634300081200 CALLER ",
							"sourceMap": "61:365:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009bc3784c5d4266402a2ad533b8359de3dd7aa754686cb2f460cd768479a55a864736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xBC CALLDATACOPY DUP5 0xC5 0xD4 0x26 PUSH5 0x2A2AD533B DUP4 MSIZE 0xDE RETURNDATASIZE 0xD7 0xAA PUSH22 0x4686CB2F460CD768479A55A864736F6C634300081200 CALLER ",
							"sourceMap": "61:365:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 61,
									"end": 426,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009bc3784c5d4266402a2ad533b8359de3dd7aa754686cb2f460cd768479a55a864736f6c63430008120033",
									".code": [
										{
											"begin": 61,
											"end": 426,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 61,
											"end": 426,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 61,
											"end": 426,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 61,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 61,
											"end": 426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 426,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 426,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"LmPool Ver3.0/Libraries/FixedPoint96.sol",
								"LmPool Ver3.0/Libraries/PriceMath.sol",
								"LmPool Ver3.0/Libraries/TickMath.sol",
								"LmPool Ver3.0/Libraries/sqrtMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LmPool Ver3.0/Libraries/sqrtMath.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LmPool Ver3.0/Libraries/sqrtMath.sol\":{\"keccak256\":\"0xb26e5529b1eb5aa34f0205451f0feeb35285ddd373f5bb292cc93c46c557d257\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f36bd8152e0af318863bebd84d7b9cb3d09ffb29496dda80786b455320d063f\",\"dweb:/ipfs/QmeKhLaUwpPcudBQnUYaCCDEcdPZSuYJRYNzcawNdz2oUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"LmPool Ver3.0/Libraries/FixedPoint96.sol": {
				"ast": {
					"absolutePath": "LmPool Ver3.0/Libraries/FixedPoint96.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							9
						]
					},
					"id": 10,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPoint96",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "74:177:0",
								"text": "@title FixedPoint96\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n @dev Used in SqrtPriceMath.sol"
							},
							"fullyImplemented": true,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "FixedPoint96",
							"nameLocation": "259:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nameLocation": "303:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 9,
									"src": "279:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "279:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "Q96",
									"nameLocation": "351:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 9,
									"src": "325:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307831303030303030303030303030303030303030303030303030",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "357:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										},
										"value": "0x1000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 10,
							"src": "251:137:0",
							"usedErrors": []
						}
					],
					"src": "46:342:0"
				},
				"id": 0
			},
			"LmPool Ver3.0/Libraries/PriceMath.sol": {
				"ast": {
					"absolutePath": "LmPool Ver3.0/Libraries/PriceMath.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							9
						],
						"Math": [
							709
						],
						"PriceMath": [
							117
						],
						"TickMath": [
							652
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 11,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "LmPool Ver3.0/Libraries/FixedPoint96.sol",
							"file": "./FixedPoint96.sol",
							"id": 12,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 118,
							"sourceUnit": 10,
							"src": "57:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "LmPool Ver3.0/Libraries/TickMath.sol",
							"file": "./TickMath.sol",
							"id": 13,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 118,
							"sourceUnit": 653,
							"src": "86:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "LmPool Ver3.0/Libraries/sqrtMath.sol",
							"file": "./sqrtMath.sol",
							"id": 14,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 118,
							"sourceUnit": 710,
							"src": "111:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "PriceMath",
							"nameLocation": "145:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "270:159:1",
										"statements": [
											{
												"assignments": [
													22
												],
												"declarations": [
													{
														"constant": false,
														"id": 22,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "288:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "280:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 21,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "280:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 28,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 25,
																			"name": "sqrtPriceX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "305:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"expression": {
																				"id": 26,
																				"name": "FixedPoint96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "320:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																					"typeString": "type(library FixedPoint96)"
																				}
																			},
																			"id": 27,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "333:3:1",
																			"memberName": "Q96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 8,
																			"src": "320:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "305:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 29,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "304:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "32",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "339:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "304:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "296:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 23,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "296:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "296:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "280:61:1"
											},
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "priceConverted",
														"nameLocation": "359:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "351:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 34,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "351:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 40,
												"initialValue": {
													"arguments": [
														{
															"id": 38,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "384:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "376:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 36,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "376:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "376:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "351:39:1"
											},
											{
												"expression": {
													"id": 41,
													"name": "priceConverted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "408:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 42,
												"nodeType": "Return",
												"src": "401:21:1"
											}
										]
									},
									"functionSelector": "aa52cba7",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrtPriceX96ToPrice",
									"nameLocation": "170:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "198:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "190:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 15,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:22:1"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "257:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:9:1"
									},
									"scope": 117,
									"src": "161:268:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "508:207:1",
										"statements": [
											{
												"assignments": [
													52
												],
												"declarations": [
													{
														"constant": false,
														"id": 52,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "526:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 76,
														"src": "518:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 51,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "518:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 59,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 46,
																				"src": "567:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 58,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "559:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 57,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "559:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "559:14:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 55,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 709,
																		"src": "549:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$709_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "554:4:1",
																	"memberName": "sqrt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 708,
																	"src": "549:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "549:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "541:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 53,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "541:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "541:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"expression": {
															"id": 63,
															"name": "FixedPoint96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "590:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																"typeString": "type(library FixedPoint96)"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "603:3:1",
														"memberName": "Q96",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "590:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "541:65:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "518:88:1"
											},
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"mutability": "mutable",
														"name": "sqrtPriceX96Converted",
														"nameLocation": "624:21:1",
														"nodeType": "VariableDeclaration",
														"scope": 76,
														"src": "616:29:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 67,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "616:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"arguments": [
														{
															"id": 71,
															"name": "sqrtPriceX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "656:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "648:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 69,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "648:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "648:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "616:53:1"
											},
											{
												"expression": {
													"id": 74,
													"name": "sqrtPriceX96Converted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 68,
													"src": "687:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 50,
												"id": 75,
												"nodeType": "Return",
												"src": "680:28:1"
											}
										]
									},
									"functionSelector": "b3e30051",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "priceToSqrtPriceX96",
									"nameLocation": "444:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "471:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "464:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 45,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "464:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:14:1"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "499:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 48,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:9:1"
									},
									"scope": 117,
									"src": "435:280:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "792:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "837:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"expression": {
															"id": 84,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "809:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$652_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "818:18:1",
														"memberName": "getTickAtSqrtRatio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "809:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint160_$returns$_t_int24_$",
															"typeString": "function (uint160) pure returns (int24)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "809:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"functionReturnParameters": 83,
												"id": 88,
												"nodeType": "Return",
												"src": "802:41:1"
											}
										]
									},
									"functionSelector": "0a817037",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrtPriceX96ToTick",
									"nameLocation": "730:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 78,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:15:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "785:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 81,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "785:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:7:1"
									},
									"scope": 117,
									"src": "721:129:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "926:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 99,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "971:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 97,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "943:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$652_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "952:18:1",
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "943:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "943:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 96,
												"id": 101,
												"nodeType": "Return",
												"src": "936:40:1"
											}
										]
									},
									"functionSelector": "b35e24d2",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tickToSqrtPriceX96",
									"nameLocation": "865:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "890:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "884:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 91,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "884:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:12:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "917:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 94,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:9:1"
									},
									"scope": 117,
									"src": "856:127:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "1053:40:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 112,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1080:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 110,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "1070:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$709_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1075:4:1",
														"memberName": "sqrt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 708,
														"src": "1070:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1070:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 109,
												"id": 114,
												"nodeType": "Return",
												"src": "1063:23:1"
											}
										]
									},
									"functionSelector": "9400ff9a",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrtPrice",
									"nameLocation": "998:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1016:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1008:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:15:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1044:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:9:1"
									},
									"scope": 117,
									"src": "989:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 118,
							"src": "137:958:1",
							"usedErrors": []
						}
					],
					"src": "32:1064:1"
				},
				"id": 1
			},
			"LmPool Ver3.0/Libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "LmPool Ver3.0/Libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							652
						]
					},
					"id": 653,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 120,
								"nodeType": "StructuredDocumentation",
								"src": "74:238:2",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 652,
							"linearizedBaseContracts": [
								652
							],
							"name": "TickMath",
							"nameLocation": "320:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "336:108:2",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 125,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "474:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "450:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 122,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "450:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "485:7:2",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 123,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "486:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "499:107:2",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 130,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "636:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "612:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 127,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "612:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "647:9:2",
										"subExpression": {
											"id": 128,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 125,
											"src": "648:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "665:116:2",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 134,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nameLocation": "813:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "787:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 132,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "787:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "830:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "847:116:2",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 138,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nameLocation": "995:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "969:92:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 136,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "969:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 137,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1012:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1462:2524:2",
										"statements": [
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"mutability": "mutable",
														"name": "absTick",
														"nameLocation": "1481:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "1473:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1473:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 167,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 148,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1491:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1498:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1491:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 163,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 141,
																		"src": "1542:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1535:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 161,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1535:6:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1535:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1527:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 159,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1527:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1527:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1491:57:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1510:13:2",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 155,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 141,
																			"src": "1518:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1511:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 153,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1511:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1511:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1502:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 151,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1502:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1502:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1473:75:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 169,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "1567:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "383837323732",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1586:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_887272_by_1",
																			"typeString": "int_const 887272"
																		},
																		"value": "887272"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_887272_by_1",
																			"typeString": "int_const 887272"
																		}
																	],
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1578:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 170,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1578:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1578:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1567:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1595:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1559:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1559:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1559:40:2"
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "1620:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "1612:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1612:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 180,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "1628:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1638:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1628:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1645:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1628:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1686:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1628:93:2",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1649:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1612:109:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 189,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1736:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1746:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1736:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1753:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1736:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "1732:83:2",
												"trueBody": {
													"expression": {
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 194,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1756:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 195,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1765:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1773:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1765:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 198,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1764:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1764:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1756:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 202,
													"nodeType": "ExpressionStatement",
													"src": "1756:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 204,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1830:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1840:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1830:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1847:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1830:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 218,
												"nodeType": "IfStatement",
												"src": "1826:83:2",
												"trueBody": {
													"expression": {
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 209,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1850:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 210,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1859:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1867:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1859:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 213,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1858:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1906:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1858:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1850:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 217,
													"nodeType": "ExpressionStatement",
													"src": "1850:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 219,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1924:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1934:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1924:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1941:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1924:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 233,
												"nodeType": "IfStatement",
												"src": "1920:83:2",
												"trueBody": {
													"expression": {
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 224,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1944:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 225,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1953:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1961:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1953:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 228,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1952:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2000:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1952:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1944:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 232,
													"nodeType": "ExpressionStatement",
													"src": "1944:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 234,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2018:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2028:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "2018:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2036:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2018:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 248,
												"nodeType": "IfStatement",
												"src": "2014:84:2",
												"trueBody": {
													"expression": {
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 239,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2039:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 240,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2048:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2056:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2048:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 243,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2047:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2095:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2047:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2039:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 247,
													"nodeType": "ExpressionStatement",
													"src": "2039:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2113:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2113:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2131:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2113:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 263,
												"nodeType": "IfStatement",
												"src": "2109:84:2",
												"trueBody": {
													"expression": {
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 254,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 255,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2143:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2151:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2143:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 258,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2190:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2142:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2134:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ExpressionStatement",
													"src": "2134:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 264,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2208:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2226:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2208:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 278,
												"nodeType": "IfStatement",
												"src": "2204:84:2",
												"trueBody": {
													"expression": {
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 269,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2229:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 270,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2238:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2246:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2238:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 273,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2237:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2285:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2237:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2229:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 277,
													"nodeType": "ExpressionStatement",
													"src": "2229:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2303:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2313:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2303:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2321:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2303:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "2299:84:2",
												"trueBody": {
													"expression": {
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 284,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2324:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 285,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2333:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2341:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2333:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2332:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2380:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2332:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2324:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 292,
													"nodeType": "ExpressionStatement",
													"src": "2324:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 294,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2398:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2408:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2398:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2417:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2398:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "2394:85:2",
												"trueBody": {
													"expression": {
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 299,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2420:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 300,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2429:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2437:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2429:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 303,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2428:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2476:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2428:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2420:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 307,
													"nodeType": "ExpressionStatement",
													"src": "2420:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 309,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2494:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2504:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2494:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2513:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2494:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "2490:85:2",
												"trueBody": {
													"expression": {
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 314,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2516:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 315,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2525:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2533:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2525:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2524:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2572:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2524:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2516:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 322,
													"nodeType": "ExpressionStatement",
													"src": "2516:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 324,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2590:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2600:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2590:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2609:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2590:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "2586:85:2",
												"trueBody": {
													"expression": {
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 329,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2612:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 330,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2621:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2629:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2621:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 333,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2620:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2668:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2620:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2612:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 337,
													"nodeType": "ExpressionStatement",
													"src": "2612:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 339,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2686:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2696:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2686:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2705:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2686:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "2682:85:2",
												"trueBody": {
													"expression": {
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 344,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2708:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 345,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2717:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2725:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2717:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 348,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2716:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2764:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2716:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2708:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 352,
													"nodeType": "ExpressionStatement",
													"src": "2708:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 354,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2782:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2782:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2802:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2782:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "2778:86:2",
												"trueBody": {
													"expression": {
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 359,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2805:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 360,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2814:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2822:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2814:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 363,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2813:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2861:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2813:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2805:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 367,
													"nodeType": "ExpressionStatement",
													"src": "2805:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2879:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2889:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2879:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2899:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2879:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "IfStatement",
												"src": "2875:86:2",
												"trueBody": {
													"expression": {
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 374,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2902:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 375,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "2911:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2919:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2911:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 378,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2910:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2958:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2910:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2902:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 382,
													"nodeType": "ExpressionStatement",
													"src": "2902:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 384,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2976:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2986:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2976:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2996:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2976:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "2972:86:2",
												"trueBody": {
													"expression": {
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 389,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2999:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 390,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "3008:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3016:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "3008:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 393,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3007:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3055:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3007:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2999:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 397,
													"nodeType": "ExpressionStatement",
													"src": "2999:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 399,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3083:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3073:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3093:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3073:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "3069:86:2",
												"trueBody": {
													"expression": {
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 404,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3096:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 405,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "3105:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3113:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3105:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 408,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3104:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3152:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3104:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3096:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 412,
													"nodeType": "ExpressionStatement",
													"src": "3096:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 414,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3180:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3170:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3191:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3170:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 428,
												"nodeType": "IfStatement",
												"src": "3166:86:2",
												"trueBody": {
													"expression": {
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 419,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3194:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 420,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "3203:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3211:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3203:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 423,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3202:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3249:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3202:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3194:58:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 427,
													"nodeType": "ExpressionStatement",
													"src": "3194:58:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 429,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3267:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3277:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3267:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3288:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3267:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "3263:85:2",
												"trueBody": {
													"expression": {
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 434,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3291:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 435,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "3300:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3308:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3300:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 438,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3299:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3345:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3299:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3291:57:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 442,
													"nodeType": "ExpressionStatement",
													"src": "3291:57:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 444,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3363:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3373:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3363:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3384:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3363:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "3359:83:2",
												"trueBody": {
													"expression": {
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 449,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3387:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 450,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "3396:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3404:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3396:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 453,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3395:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3439:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3395:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3387:55:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 457,
													"nodeType": "ExpressionStatement",
													"src": "3387:55:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 459,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3457:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3467:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3457:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3478:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3457:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "3453:78:2",
												"trueBody": {
													"expression": {
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 464,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3481:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 465,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "3490:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3498:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3490:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 468,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3489:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3528:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3489:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3481:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ExpressionStatement",
													"src": "3481:50:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 474,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3548:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3555:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3548:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 487,
												"nodeType": "IfStatement",
												"src": "3544:47:2",
												"trueBody": {
													"expression": {
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 477,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3558:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3571:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 479,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3571:7:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 478,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3566:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3566:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3580:3:2",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3566:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 483,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "3586:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3566:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3558:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 486,
													"nodeType": "ExpressionStatement",
													"src": "3558:33:2"
												}
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 488,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "3906:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 491,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "3930:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3939:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3930:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3929:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 500,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 495,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 179,
																						"src": "3946:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 498,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 496,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3955:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 497,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3960:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3955:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 499,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3954:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3946:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 501,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3967:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3946:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3975:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3946:30:2",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3971:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 506,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3945:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3929:48:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3921:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 489,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3921:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3921:57:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3906:72:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "3906:72:2"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "1070:301:2",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nameLocation": "1386:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1411:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1405:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 140,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1405:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:12:2"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1448:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1440:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 143,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:22:2"
									},
									"scope": 652,
									"src": "1377:2609:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4497:4339:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 521,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "4616:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 522,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "4632:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4616:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 524,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "4650:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 525,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4665:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4650:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4616:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4681:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4608:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4608:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "4608:77:2"
											},
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "4704:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "4696:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4696:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 535,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "4720:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4712:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 533,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4712:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4712:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4737:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4712:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4696:43:2"
											},
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4760:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "4752:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4752:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 543,
												"initialValue": {
													"id": 542,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "4764:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4752:17:2"
											},
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "msb",
														"nameLocation": "4788:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "4780:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4780:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"hexValue": "30",
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4794:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4780:15:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4817:143:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4832:58:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4845:1:2",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4851:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4854:34:2",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4848:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:41:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:49:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4836:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4904:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4914:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4919:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4911:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4904:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4935:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4944:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4947:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4940:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4940:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4935:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "4904:3:2",
														"valueSize": 1
													},
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "4914:3:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "4851:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "4935:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "4947:1:2",
														"valueSize": 1
													}
												],
												"id": 548,
												"nodeType": "InlineAssembly",
												"src": "4808:152:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4979:127:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4994:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5007:1:2",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5013:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5016:18:2",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5010:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:25:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:33:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4998:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5050:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5060:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5065:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5057:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5057:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5050:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5081:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5090:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5093:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5086:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5086:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5081:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5050:3:2",
														"valueSize": 1
													},
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5060:3:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5013:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5081:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5093:1:2",
														"valueSize": 1
													}
												],
												"id": 549,
												"nodeType": "InlineAssembly",
												"src": "4970:136:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5125:119:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5140:34:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5153:1:2",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5159:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5162:10:2",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5156:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5156:17:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5149:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5149:25:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5144:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5188:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5198:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5203:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5195:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5195:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5188:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5219:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5228:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5231:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5224:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5224:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5219:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5188:3:2",
														"valueSize": 1
													},
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5198:3:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5159:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5219:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5231:1:2",
														"valueSize": 1
													}
												],
												"id": 550,
												"nodeType": "InlineAssembly",
												"src": "5116:128:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5263:115:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5278:30:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5297:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5300:6:2",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5294:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:13:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5287:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:21:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5282:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5322:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5332:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5337:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5329:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5329:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5322:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5353:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5362:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5365:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5358:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5353:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5322:3:2",
														"valueSize": 1
													},
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5332:3:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5297:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5353:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5365:1:2",
														"valueSize": 1
													}
												],
												"id": 551,
												"nodeType": "InlineAssembly",
												"src": "5254:124:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5397:113:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5412:28:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5425:1:2",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5431:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5434:4:2",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5428:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5428:11:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5421:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5421:19:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5416:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5454:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5464:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5469:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5461:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5461:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5454:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5485:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5494:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5497:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5490:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5490:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5485:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5454:3:2",
														"valueSize": 1
													},
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5464:3:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5431:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5485:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5497:1:2",
														"valueSize": 1
													}
												],
												"id": 552,
												"nodeType": "InlineAssembly",
												"src": "5388:122:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5529:112:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5544:27:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5557:1:2",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5563:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5566:3:2",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5560:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5560:10:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5553:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5553:18:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5548:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5585:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5595:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5600:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5592:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5585:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5616:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5625:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5628:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5621:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5616:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5585:3:2",
														"valueSize": 1
													},
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5595:3:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5563:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5616:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5628:1:2",
														"valueSize": 1
													}
												],
												"id": 553,
												"nodeType": "InlineAssembly",
												"src": "5520:121:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5660:112:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5675:27:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5688:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5694:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5697:3:2",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5691:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:10:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:18:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5679:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5716:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5726:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5731:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5723:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5723:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5747:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5756:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5759:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5752:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5752:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5747:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5716:3:2",
														"valueSize": 1
													},
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5726:3:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5694:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5747:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5759:1:2",
														"valueSize": 1
													}
												],
												"id": 554,
												"nodeType": "InlineAssembly",
												"src": "5651:121:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5791:76:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5806:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5818:1:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5821:3:2",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5815:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5815:10:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5810:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5839:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5849:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5854:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5846:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5846:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5839:3:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5839:3:2",
														"valueSize": 1
													},
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "5849:3:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "5818:1:2",
														"valueSize": 1
													}
												],
												"id": 555,
												"nodeType": "InlineAssembly",
												"src": "5782:85:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 556,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "5883:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5890:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5883:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 568,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "5935:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 569,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5939:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5949:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 571,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "5955:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5949:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 573,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5948:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5939:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5935:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 576,
													"nodeType": "ExpressionStatement",
													"src": "5935:24:2"
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5879:80:2",
												"trueBody": {
													"expression": {
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 559,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "5895:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5899:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 561,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "5909:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5915:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5909:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 564,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5908:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5899:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5895:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 567,
													"nodeType": "ExpressionStatement",
													"src": "5895:24:2"
												}
											},
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "log_2",
														"nameLocation": "5979:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "5972:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 578,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5972:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 582,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "5995:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5988:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 580,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5988:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5988:11:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6002:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5988:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 586,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5987:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6010:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5987:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5972:40:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6034:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6049:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6058:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6067:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6070:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6063:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6063:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6054:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6054:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6049:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6087:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6100:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6105:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6096:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6096:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6091:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6121:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6133:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6144:2:2",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6148:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6140:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6140:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6130:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6130:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6121:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6165:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6174:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6177:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6165:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6121:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6133:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6049:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6067:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6070:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6105:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6165:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6177:1:2",
														"valueSize": 1
													}
												],
												"id": 590,
												"nodeType": "InlineAssembly",
												"src": "6025:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6209:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6224:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6233:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6242:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6245:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6238:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6229:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6224:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6262:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6275:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6280:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6271:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6271:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6266:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6296:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6308:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6319:2:2",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6323:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6315:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6305:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6305:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6296:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6340:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6349:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6352:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6345:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6345:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6340:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6296:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6308:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6224:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6242:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6245:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6280:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6340:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6352:1:2",
														"valueSize": 1
													}
												],
												"id": 591,
												"nodeType": "InlineAssembly",
												"src": "6200:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6384:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6399:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6408:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6417:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6420:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6413:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6413:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6404:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6404:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6399:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6437:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6450:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6455:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6446:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6441:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6471:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6483:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6494:2:2",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6498:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6490:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6490:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6480:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6480:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6471:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6515:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6524:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6527:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6520:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6520:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6515:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6471:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6483:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6399:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6417:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6420:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6455:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6515:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6527:1:2",
														"valueSize": 1
													}
												],
												"id": 592,
												"nodeType": "InlineAssembly",
												"src": "6375:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6559:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6574:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6583:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6592:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6595:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6588:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6588:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6579:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6579:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6574:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6612:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6625:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6630:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6621:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6616:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6646:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6658:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6669:2:2",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6673:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6665:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6665:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6655:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6655:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6646:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6690:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6699:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6702:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6695:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6695:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6690:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6646:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6658:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6574:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6592:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6595:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6630:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6690:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6702:1:2",
														"valueSize": 1
													}
												],
												"id": 593,
												"nodeType": "InlineAssembly",
												"src": "6550:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6734:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6749:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6758:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6767:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6770:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6763:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6763:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6754:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6754:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6749:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6787:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6800:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6805:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6796:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6796:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6791:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6821:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6833:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6844:2:2",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6848:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6840:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6840:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6830:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6821:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6865:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6874:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6877:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6870:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6870:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6865:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6821:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6833:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6749:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6767:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6770:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6805:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6865:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6877:1:2",
														"valueSize": 1
													}
												],
												"id": 594,
												"nodeType": "InlineAssembly",
												"src": "6725:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6909:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6924:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6933:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6942:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6945:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6938:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6938:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6929:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6929:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6924:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6962:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6975:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6980:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6971:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6971:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6966:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6996:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7008:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7019:2:2",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7023:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7015:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7015:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7005:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6996:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7040:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7049:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7052:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7045:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7045:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7040:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "6996:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7008:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6924:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6942:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6945:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "6980:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7040:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7052:1:2",
														"valueSize": 1
													}
												],
												"id": 595,
												"nodeType": "InlineAssembly",
												"src": "6900:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7084:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7099:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7108:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7117:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7120:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7113:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7113:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7104:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7104:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7099:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7137:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7150:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7155:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7146:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7141:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7171:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7183:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7194:2:2",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7198:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7190:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7190:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7180:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7180:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7171:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7215:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7224:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7227:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7220:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7220:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7215:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7171:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7183:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7099:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7117:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7120:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7155:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7215:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7227:1:2",
														"valueSize": 1
													}
												],
												"id": 596,
												"nodeType": "InlineAssembly",
												"src": "7075:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7259:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7274:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7283:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7292:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7295:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7288:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7288:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7279:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7274:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7312:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7330:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7321:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7316:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7346:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7358:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7369:2:2",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7373:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7365:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7365:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7355:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7355:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7346:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7390:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7399:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7402:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7395:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7390:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7346:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7358:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7274:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7292:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7295:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7330:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7390:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7402:1:2",
														"valueSize": 1
													}
												],
												"id": 597,
												"nodeType": "InlineAssembly",
												"src": "7250:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7434:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7449:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7458:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7467:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7470:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7463:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7463:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7454:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7454:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7449:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7487:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7500:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7505:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7496:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7496:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7491:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7521:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7533:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7544:2:2",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7548:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7540:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7540:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7530:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7530:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7521:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7565:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7574:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7577:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7570:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7570:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7565:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7521:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7533:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7449:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7467:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7470:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7505:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7565:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7577:1:2",
														"valueSize": 1
													}
												],
												"id": 598,
												"nodeType": "InlineAssembly",
												"src": "7425:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7609:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7624:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7633:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7642:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7645:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7638:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7638:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7629:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7629:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7624:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7662:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7675:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7680:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7671:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7671:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7666:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7696:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7708:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:2",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7723:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7715:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7715:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7705:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7705:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7696:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7740:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7749:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7752:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7745:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7745:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7740:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7696:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7708:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7624:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7642:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7645:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7680:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7740:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7752:1:2",
														"valueSize": 1
													}
												],
												"id": 599,
												"nodeType": "InlineAssembly",
												"src": "7600:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7784:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7799:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7808:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7817:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7820:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7813:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7813:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7804:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7804:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7799:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7837:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7850:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7855:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7846:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7846:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7841:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7871:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7883:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7894:2:2",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7898:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7890:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7890:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7880:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7880:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7871:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7915:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7924:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7927:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7920:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7920:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7915:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7871:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "7883:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7799:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7817:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7820:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7855:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7915:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7927:1:2",
														"valueSize": 1
													}
												],
												"id": 600,
												"nodeType": "InlineAssembly",
												"src": "7775:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7959:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7974:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7983:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7992:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7995:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7988:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7988:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7979:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7974:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8012:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8025:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8030:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8021:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8021:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8016:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8046:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8058:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8069:2:2",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8073:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8065:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8065:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8055:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8055:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8046:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8090:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8099:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8102:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8095:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8090:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "8046:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "8058:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7992:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "7995:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8030:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8090:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8102:1:2",
														"valueSize": 1
													}
												],
												"id": 601,
												"nodeType": "InlineAssembly",
												"src": "7950:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8134:156:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8149:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8158:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8167:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8170:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8163:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8163:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8154:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8154:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8149:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8187:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8200:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8205:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8196:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8196:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8191:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8221:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8233:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8244:2:2",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8248:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8240:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8240:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8230:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8230:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8221:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8265:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8274:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8277:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8270:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8265:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "8221:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "8233:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8149:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8167:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8170:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8205:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8265:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8277:1:2",
														"valueSize": 1
													}
												],
												"id": 602,
												"nodeType": "InlineAssembly",
												"src": "8125:165:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8309:128:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8324:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8333:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8342:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8345:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8329:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8324:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8362:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8375:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8380:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8371:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8371:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8366:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8396:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8408:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8419:2:2",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8423:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8415:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8405:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8405:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8396:5:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "8396:5:2",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "8408:5:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8324:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8342:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8345:1:2",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "8380:1:2",
														"valueSize": 1
													}
												],
												"id": 603,
												"nodeType": "InlineAssembly",
												"src": "8300:137:2"
											},
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nameLocation": "8456:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "8449:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 604,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8449:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 609,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 606,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "8472:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8480:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8472:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8449:55:2"
											},
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "tickLow",
														"nameLocation": "8541:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "8535:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 610,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8535:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 614,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "8558:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8574:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8558:53:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 617,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8557:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8616:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8557:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8551:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 612,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8551:5:2",
															"typeDescriptions": {}
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8551:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8535:85:2"
											},
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "tickHi",
														"nameLocation": "8637:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "8631:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 622,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8631:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 633,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 626,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "8653:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8669:39:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8653:55:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 629,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8652:57:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8713:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8652:64:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8646:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 624,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8646:5:2",
															"typeDescriptions": {}
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8646:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8631:86:2"
											},
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 634,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "8730:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 635,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "8737:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 636,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "8748:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8737:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 640,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "8786:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 639,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 512,
																		"src": "8767:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8767:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 642,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "8797:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8767:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 645,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "8821:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8767:61:2",
															"trueExpression": {
																"id": 644,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "8812:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8737:91:2",
														"trueExpression": {
															"id": 638,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "8757:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8730:98:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "8730:98:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "3994:412:2",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nameLocation": "4421:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4448:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4440:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 514,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4439:22:2"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4491:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4485:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 517,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4485:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:12:2"
									},
									"scope": 652,
									"src": "4412:4424:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 653,
							"src": "312:8527:2",
							"usedErrors": []
						}
					],
					"src": "46:8793:2"
				},
				"id": 2
			},
			"LmPool Ver3.0/Libraries/sqrtMath.sol": {
				"ast": {
					"absolutePath": "LmPool Ver3.0/Libraries/sqrtMath.sol",
					"exportedSymbols": {
						"Math": [
							709
						]
					},
					"id": 710,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 654,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 709,
							"linearizedBaseContracts": [
								709
							],
							"name": "Math",
							"nameLocation": "69:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "134:289:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "149:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "153:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 697,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "337:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "342:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "337:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 705,
													"nodeType": "IfStatement",
													"src": "333:44:3",
													"trueBody": {
														"id": 704,
														"nodeType": "Block",
														"src": "345:32:3",
														"statements": [
															{
																"expression": {
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 700,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "360:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "364:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "360:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 703,
																"nodeType": "ExpressionStatement",
																"src": "360:5:3"
															}
														]
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "145:232:3",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "156:171:3",
													"statements": [
														{
															"expression": {
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 664,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "171:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 665,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "175:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "171:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 667,
															"nodeType": "ExpressionStatement",
															"src": "171:5:3"
														},
														{
															"assignments": [
																669
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 669,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "196:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 696,
																	"src": "191:6:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "191:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 675,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 670,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "200:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "204:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "200:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "208:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "200:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "191:18:3"
														},
														{
															"body": {
																"id": 694,
																"nodeType": "Block",
																"src": "238:78:3",
																"statements": [
																	{
																		"expression": {
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 679,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "257:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 680,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "261:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "257:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 682,
																		"nodeType": "ExpressionStatement",
																		"src": "257:5:3"
																	},
																	{
																		"expression": {
																			"id": 692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 683,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "281:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 688,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 686,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 684,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 656,
																									"src": "286:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 685,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 669,
																									"src": "290:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "286:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 687,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 669,
																								"src": "294:1:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "286:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 689,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "285:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 690,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "299:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "285:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "281:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 693,
																		"nodeType": "ExpressionStatement",
																		"src": "281:19:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 676,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "231:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 677,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "235:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "231:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 695,
															"nodeType": "WhileStatement",
															"src": "224:92:3"
														}
													]
												}
											}
										]
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "90:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "100:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "95:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "95:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "94:8:3"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "131:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "126:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:8:3"
									},
									"scope": 709,
									"src": "81:342:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 710,
							"src": "61:365:3",
							"usedErrors": []
						}
					],
					"src": "33:393:3"
				},
				"id": 3
			}
		}
	}
}